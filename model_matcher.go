/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the Matcher type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Matcher{}

// Matcher struct for Matcher
type Matcher struct {
	// 身份证号码，与user_id、mobile_no不能同时为空
	IdentityCard *string `json:"identity_card,omitempty"`
	// 手机号码，与user_id、identity_card不能同时为空
	MobileNo *string `json:"mobile_no,omitempty"`
	// 支付宝用户openid
	OpenId *string `json:"open_id,omitempty"`
	// 支付宝用户id，2088开头16位长度的字符串，与mobile_no、identity_card不能同时为空
	UserId *string `json:"user_id,omitempty"`
}

// NewMatcher instantiates a new Matcher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatcher() *Matcher {
	this := Matcher{}
	return &this
}

// NewMatcherWithDefaults instantiates a new Matcher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatcherWithDefaults() *Matcher {
	this := Matcher{}
	return &this
}

// GetIdentityCard returns the IdentityCard field value if set, zero value otherwise.
func (o *Matcher) GetIdentityCard() string {
	if o == nil || IsNil(o.IdentityCard) {
		var ret string
		return ret
	}
	return *o.IdentityCard
}

// GetIdentityCardOk returns a tuple with the IdentityCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Matcher) GetIdentityCardOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityCard) {
		return nil, false
	}
	return o.IdentityCard, true
}

// HasIdentityCard returns a boolean if a field has been set.
func (o *Matcher) HasIdentityCard() bool {
	if o != nil && !IsNil(o.IdentityCard) {
		return true
	}

	return false
}

// SetIdentityCard gets a reference to the given string and assigns it to the IdentityCard field.
func (o *Matcher) SetIdentityCard(v string) {
	o.IdentityCard = &v
}

// GetMobileNo returns the MobileNo field value if set, zero value otherwise.
func (o *Matcher) GetMobileNo() string {
	if o == nil || IsNil(o.MobileNo) {
		var ret string
		return ret
	}
	return *o.MobileNo
}

// GetMobileNoOk returns a tuple with the MobileNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Matcher) GetMobileNoOk() (*string, bool) {
	if o == nil || IsNil(o.MobileNo) {
		return nil, false
	}
	return o.MobileNo, true
}

// HasMobileNo returns a boolean if a field has been set.
func (o *Matcher) HasMobileNo() bool {
	if o != nil && !IsNil(o.MobileNo) {
		return true
	}

	return false
}

// SetMobileNo gets a reference to the given string and assigns it to the MobileNo field.
func (o *Matcher) SetMobileNo(v string) {
	o.MobileNo = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *Matcher) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Matcher) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *Matcher) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *Matcher) SetOpenId(v string) {
	o.OpenId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Matcher) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Matcher) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Matcher) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Matcher) SetUserId(v string) {
	o.UserId = &v
}

func (o Matcher) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Matcher) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityCard) {
		toSerialize["identity_card"] = o.IdentityCard
	}
	if !IsNil(o.MobileNo) {
		toSerialize["mobile_no"] = o.MobileNo
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableMatcher struct {
	value *Matcher
	isSet bool
}

func (v NullableMatcher) Get() *Matcher {
	return v.value
}

func (v *NullableMatcher) Set(val *Matcher) {
	v.value = val
	v.isSet = true
}

func (v NullableMatcher) IsSet() bool {
	return v.isSet
}

func (v *NullableMatcher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatcher(val *Matcher) *NullableMatcher {
	return &NullableMatcher{value: val, isSet: true}
}

func (v NullableMatcher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatcher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

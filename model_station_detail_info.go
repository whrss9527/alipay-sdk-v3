/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StationDetailInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StationDetailInfo{}

// StationDetailInfo struct for StationDetailInfo
type StationDetailInfo struct {
	// 站点编码
	Code *string `json:"code,omitempty"`
	// 站点外部编码
	ExtCode *string `json:"ext_code,omitempty"`
	// 站点中文名称
	Name *string `json:"name,omitempty"`
}

// NewStationDetailInfo instantiates a new StationDetailInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStationDetailInfo() *StationDetailInfo {
	this := StationDetailInfo{}
	return &this
}

// NewStationDetailInfoWithDefaults instantiates a new StationDetailInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStationDetailInfoWithDefaults() *StationDetailInfo {
	this := StationDetailInfo{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *StationDetailInfo) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationDetailInfo) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *StationDetailInfo) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *StationDetailInfo) SetCode(v string) {
	o.Code = &v
}

// GetExtCode returns the ExtCode field value if set, zero value otherwise.
func (o *StationDetailInfo) GetExtCode() string {
	if o == nil || IsNil(o.ExtCode) {
		var ret string
		return ret
	}
	return *o.ExtCode
}

// GetExtCodeOk returns a tuple with the ExtCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationDetailInfo) GetExtCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtCode) {
		return nil, false
	}
	return o.ExtCode, true
}

// HasExtCode returns a boolean if a field has been set.
func (o *StationDetailInfo) HasExtCode() bool {
	if o != nil && !IsNil(o.ExtCode) {
		return true
	}

	return false
}

// SetExtCode gets a reference to the given string and assigns it to the ExtCode field.
func (o *StationDetailInfo) SetExtCode(v string) {
	o.ExtCode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StationDetailInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationDetailInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StationDetailInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StationDetailInfo) SetName(v string) {
	o.Name = &v
}

func (o StationDetailInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StationDetailInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.ExtCode) {
		toSerialize["ext_code"] = o.ExtCode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableStationDetailInfo struct {
	value *StationDetailInfo
	isSet bool
}

func (v NullableStationDetailInfo) Get() *StationDetailInfo {
	return v.value
}

func (v *NullableStationDetailInfo) Set(val *StationDetailInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableStationDetailInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableStationDetailInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStationDetailInfo(val *StationDetailInfo) *NullableStationDetailInfo {
	return &NullableStationDetailInfo{value: val, isSet: true}
}

func (v NullableStationDetailInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStationDetailInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



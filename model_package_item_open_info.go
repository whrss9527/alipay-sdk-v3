/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PackageItemOpenInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageItemOpenInfo{}

// PackageItemOpenInfo struct for PackageItemOpenInfo
type PackageItemOpenInfo struct {
	ConsumeOutputInfo *ConsumeOutputInfo `json:"consume_output_info,omitempty"`
	// 发票文件下载链接
	FileDownloadUrl *string `json:"file_download_url,omitempty"`
	// 文件类型，如pdf，ofd，jpg
	FileType *string `json:"file_type,omitempty"`
	InvoiceOutputInfo *InvoiceOutputInfo `json:"invoice_output_info,omitempty"`
	// 项目来源，如：ocr\\einvoice\\consume
	ItemSource *string `json:"item_source,omitempty"`
	// 项目子类，如：出租车、火车、飞机等
	ItemSubType *string `json:"item_sub_type,omitempty"`
	// 项目大类，如：餐饮美食、酒店住宿、差旅出行等
	ItemType *string `json:"item_type,omitempty"`
	OcrNormalScanInfo *OcrNormalScanInfo `json:"ocr_normal_scan_info,omitempty"`
	OcrPlaneScanInfo *OcrPlaneScanInfo `json:"ocr_plane_scan_info,omitempty"`
	OcrTaxiScanInfo *OcrTaxiScanInfo `json:"ocr_taxi_scan_info,omitempty"`
	OcrTrainScanInfo *OcrTrainScanInfo `json:"ocr_train_scan_info,omitempty"`
}

// NewPackageItemOpenInfo instantiates a new PackageItemOpenInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageItemOpenInfo() *PackageItemOpenInfo {
	this := PackageItemOpenInfo{}
	return &this
}

// NewPackageItemOpenInfoWithDefaults instantiates a new PackageItemOpenInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageItemOpenInfoWithDefaults() *PackageItemOpenInfo {
	this := PackageItemOpenInfo{}
	return &this
}

// GetConsumeOutputInfo returns the ConsumeOutputInfo field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetConsumeOutputInfo() ConsumeOutputInfo {
	if o == nil || IsNil(o.ConsumeOutputInfo) {
		var ret ConsumeOutputInfo
		return ret
	}
	return *o.ConsumeOutputInfo
}

// GetConsumeOutputInfoOk returns a tuple with the ConsumeOutputInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetConsumeOutputInfoOk() (*ConsumeOutputInfo, bool) {
	if o == nil || IsNil(o.ConsumeOutputInfo) {
		return nil, false
	}
	return o.ConsumeOutputInfo, true
}

// HasConsumeOutputInfo returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasConsumeOutputInfo() bool {
	if o != nil && !IsNil(o.ConsumeOutputInfo) {
		return true
	}

	return false
}

// SetConsumeOutputInfo gets a reference to the given ConsumeOutputInfo and assigns it to the ConsumeOutputInfo field.
func (o *PackageItemOpenInfo) SetConsumeOutputInfo(v ConsumeOutputInfo) {
	o.ConsumeOutputInfo = &v
}

// GetFileDownloadUrl returns the FileDownloadUrl field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetFileDownloadUrl() string {
	if o == nil || IsNil(o.FileDownloadUrl) {
		var ret string
		return ret
	}
	return *o.FileDownloadUrl
}

// GetFileDownloadUrlOk returns a tuple with the FileDownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetFileDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileDownloadUrl) {
		return nil, false
	}
	return o.FileDownloadUrl, true
}

// HasFileDownloadUrl returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasFileDownloadUrl() bool {
	if o != nil && !IsNil(o.FileDownloadUrl) {
		return true
	}

	return false
}

// SetFileDownloadUrl gets a reference to the given string and assigns it to the FileDownloadUrl field.
func (o *PackageItemOpenInfo) SetFileDownloadUrl(v string) {
	o.FileDownloadUrl = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetFileType() string {
	if o == nil || IsNil(o.FileType) {
		var ret string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetFileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FileType) {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasFileType() bool {
	if o != nil && !IsNil(o.FileType) {
		return true
	}

	return false
}

// SetFileType gets a reference to the given string and assigns it to the FileType field.
func (o *PackageItemOpenInfo) SetFileType(v string) {
	o.FileType = &v
}

// GetInvoiceOutputInfo returns the InvoiceOutputInfo field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetInvoiceOutputInfo() InvoiceOutputInfo {
	if o == nil || IsNil(o.InvoiceOutputInfo) {
		var ret InvoiceOutputInfo
		return ret
	}
	return *o.InvoiceOutputInfo
}

// GetInvoiceOutputInfoOk returns a tuple with the InvoiceOutputInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetInvoiceOutputInfoOk() (*InvoiceOutputInfo, bool) {
	if o == nil || IsNil(o.InvoiceOutputInfo) {
		return nil, false
	}
	return o.InvoiceOutputInfo, true
}

// HasInvoiceOutputInfo returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasInvoiceOutputInfo() bool {
	if o != nil && !IsNil(o.InvoiceOutputInfo) {
		return true
	}

	return false
}

// SetInvoiceOutputInfo gets a reference to the given InvoiceOutputInfo and assigns it to the InvoiceOutputInfo field.
func (o *PackageItemOpenInfo) SetInvoiceOutputInfo(v InvoiceOutputInfo) {
	o.InvoiceOutputInfo = &v
}

// GetItemSource returns the ItemSource field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetItemSource() string {
	if o == nil || IsNil(o.ItemSource) {
		var ret string
		return ret
	}
	return *o.ItemSource
}

// GetItemSourceOk returns a tuple with the ItemSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetItemSourceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSource) {
		return nil, false
	}
	return o.ItemSource, true
}

// HasItemSource returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasItemSource() bool {
	if o != nil && !IsNil(o.ItemSource) {
		return true
	}

	return false
}

// SetItemSource gets a reference to the given string and assigns it to the ItemSource field.
func (o *PackageItemOpenInfo) SetItemSource(v string) {
	o.ItemSource = &v
}

// GetItemSubType returns the ItemSubType field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetItemSubType() string {
	if o == nil || IsNil(o.ItemSubType) {
		var ret string
		return ret
	}
	return *o.ItemSubType
}

// GetItemSubTypeOk returns a tuple with the ItemSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetItemSubTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSubType) {
		return nil, false
	}
	return o.ItemSubType, true
}

// HasItemSubType returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasItemSubType() bool {
	if o != nil && !IsNil(o.ItemSubType) {
		return true
	}

	return false
}

// SetItemSubType gets a reference to the given string and assigns it to the ItemSubType field.
func (o *PackageItemOpenInfo) SetItemSubType(v string) {
	o.ItemSubType = &v
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetItemType() string {
	if o == nil || IsNil(o.ItemType) {
		var ret string
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetItemTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemType) {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasItemType() bool {
	if o != nil && !IsNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given string and assigns it to the ItemType field.
func (o *PackageItemOpenInfo) SetItemType(v string) {
	o.ItemType = &v
}

// GetOcrNormalScanInfo returns the OcrNormalScanInfo field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetOcrNormalScanInfo() OcrNormalScanInfo {
	if o == nil || IsNil(o.OcrNormalScanInfo) {
		var ret OcrNormalScanInfo
		return ret
	}
	return *o.OcrNormalScanInfo
}

// GetOcrNormalScanInfoOk returns a tuple with the OcrNormalScanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetOcrNormalScanInfoOk() (*OcrNormalScanInfo, bool) {
	if o == nil || IsNil(o.OcrNormalScanInfo) {
		return nil, false
	}
	return o.OcrNormalScanInfo, true
}

// HasOcrNormalScanInfo returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasOcrNormalScanInfo() bool {
	if o != nil && !IsNil(o.OcrNormalScanInfo) {
		return true
	}

	return false
}

// SetOcrNormalScanInfo gets a reference to the given OcrNormalScanInfo and assigns it to the OcrNormalScanInfo field.
func (o *PackageItemOpenInfo) SetOcrNormalScanInfo(v OcrNormalScanInfo) {
	o.OcrNormalScanInfo = &v
}

// GetOcrPlaneScanInfo returns the OcrPlaneScanInfo field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetOcrPlaneScanInfo() OcrPlaneScanInfo {
	if o == nil || IsNil(o.OcrPlaneScanInfo) {
		var ret OcrPlaneScanInfo
		return ret
	}
	return *o.OcrPlaneScanInfo
}

// GetOcrPlaneScanInfoOk returns a tuple with the OcrPlaneScanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetOcrPlaneScanInfoOk() (*OcrPlaneScanInfo, bool) {
	if o == nil || IsNil(o.OcrPlaneScanInfo) {
		return nil, false
	}
	return o.OcrPlaneScanInfo, true
}

// HasOcrPlaneScanInfo returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasOcrPlaneScanInfo() bool {
	if o != nil && !IsNil(o.OcrPlaneScanInfo) {
		return true
	}

	return false
}

// SetOcrPlaneScanInfo gets a reference to the given OcrPlaneScanInfo and assigns it to the OcrPlaneScanInfo field.
func (o *PackageItemOpenInfo) SetOcrPlaneScanInfo(v OcrPlaneScanInfo) {
	o.OcrPlaneScanInfo = &v
}

// GetOcrTaxiScanInfo returns the OcrTaxiScanInfo field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetOcrTaxiScanInfo() OcrTaxiScanInfo {
	if o == nil || IsNil(o.OcrTaxiScanInfo) {
		var ret OcrTaxiScanInfo
		return ret
	}
	return *o.OcrTaxiScanInfo
}

// GetOcrTaxiScanInfoOk returns a tuple with the OcrTaxiScanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetOcrTaxiScanInfoOk() (*OcrTaxiScanInfo, bool) {
	if o == nil || IsNil(o.OcrTaxiScanInfo) {
		return nil, false
	}
	return o.OcrTaxiScanInfo, true
}

// HasOcrTaxiScanInfo returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasOcrTaxiScanInfo() bool {
	if o != nil && !IsNil(o.OcrTaxiScanInfo) {
		return true
	}

	return false
}

// SetOcrTaxiScanInfo gets a reference to the given OcrTaxiScanInfo and assigns it to the OcrTaxiScanInfo field.
func (o *PackageItemOpenInfo) SetOcrTaxiScanInfo(v OcrTaxiScanInfo) {
	o.OcrTaxiScanInfo = &v
}

// GetOcrTrainScanInfo returns the OcrTrainScanInfo field value if set, zero value otherwise.
func (o *PackageItemOpenInfo) GetOcrTrainScanInfo() OcrTrainScanInfo {
	if o == nil || IsNil(o.OcrTrainScanInfo) {
		var ret OcrTrainScanInfo
		return ret
	}
	return *o.OcrTrainScanInfo
}

// GetOcrTrainScanInfoOk returns a tuple with the OcrTrainScanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageItemOpenInfo) GetOcrTrainScanInfoOk() (*OcrTrainScanInfo, bool) {
	if o == nil || IsNil(o.OcrTrainScanInfo) {
		return nil, false
	}
	return o.OcrTrainScanInfo, true
}

// HasOcrTrainScanInfo returns a boolean if a field has been set.
func (o *PackageItemOpenInfo) HasOcrTrainScanInfo() bool {
	if o != nil && !IsNil(o.OcrTrainScanInfo) {
		return true
	}

	return false
}

// SetOcrTrainScanInfo gets a reference to the given OcrTrainScanInfo and assigns it to the OcrTrainScanInfo field.
func (o *PackageItemOpenInfo) SetOcrTrainScanInfo(v OcrTrainScanInfo) {
	o.OcrTrainScanInfo = &v
}

func (o PackageItemOpenInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageItemOpenInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConsumeOutputInfo) {
		toSerialize["consume_output_info"] = o.ConsumeOutputInfo
	}
	if !IsNil(o.FileDownloadUrl) {
		toSerialize["file_download_url"] = o.FileDownloadUrl
	}
	if !IsNil(o.FileType) {
		toSerialize["file_type"] = o.FileType
	}
	if !IsNil(o.InvoiceOutputInfo) {
		toSerialize["invoice_output_info"] = o.InvoiceOutputInfo
	}
	if !IsNil(o.ItemSource) {
		toSerialize["item_source"] = o.ItemSource
	}
	if !IsNil(o.ItemSubType) {
		toSerialize["item_sub_type"] = o.ItemSubType
	}
	if !IsNil(o.ItemType) {
		toSerialize["item_type"] = o.ItemType
	}
	if !IsNil(o.OcrNormalScanInfo) {
		toSerialize["ocr_normal_scan_info"] = o.OcrNormalScanInfo
	}
	if !IsNil(o.OcrPlaneScanInfo) {
		toSerialize["ocr_plane_scan_info"] = o.OcrPlaneScanInfo
	}
	if !IsNil(o.OcrTaxiScanInfo) {
		toSerialize["ocr_taxi_scan_info"] = o.OcrTaxiScanInfo
	}
	if !IsNil(o.OcrTrainScanInfo) {
		toSerialize["ocr_train_scan_info"] = o.OcrTrainScanInfo
	}
	return toSerialize, nil
}

type NullablePackageItemOpenInfo struct {
	value *PackageItemOpenInfo
	isSet bool
}

func (v NullablePackageItemOpenInfo) Get() *PackageItemOpenInfo {
	return v.value
}

func (v *NullablePackageItemOpenInfo) Set(val *PackageItemOpenInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageItemOpenInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageItemOpenInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageItemOpenInfo(val *PackageItemOpenInfo) *NullablePackageItemOpenInfo {
	return &NullablePackageItemOpenInfo{value: val, isSet: true}
}

func (v NullablePackageItemOpenInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageItemOpenInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



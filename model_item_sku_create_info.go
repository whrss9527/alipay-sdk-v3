/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ItemSkuCreateInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemSkuCreateInfo{}

// ItemSkuCreateInfo struct for ItemSkuCreateInfo
type ItemSkuCreateInfo struct {
	// 成本价，单位分
	CostPrice *int32 `json:"cost_price,omitempty"`
	// SKU扩展信息
	ExtInfo []ItemExtInfo `json:"ext_info,omitempty"`
	// 外部SKU ID
	ExternalSkuId *string `json:"external_sku_id,omitempty"`
	// 库存
	Inventory *int32 `json:"inventory,omitempty"`
	// 标价，单位分
	OriginalPrice *int32 `json:"original_price,omitempty"`
	// 售价，单位分
	Price *int32 `json:"price,omitempty"`
}

// NewItemSkuCreateInfo instantiates a new ItemSkuCreateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemSkuCreateInfo() *ItemSkuCreateInfo {
	this := ItemSkuCreateInfo{}
	return &this
}

// NewItemSkuCreateInfoWithDefaults instantiates a new ItemSkuCreateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemSkuCreateInfoWithDefaults() *ItemSkuCreateInfo {
	this := ItemSkuCreateInfo{}
	return &this
}

// GetCostPrice returns the CostPrice field value if set, zero value otherwise.
func (o *ItemSkuCreateInfo) GetCostPrice() int32 {
	if o == nil || IsNil(o.CostPrice) {
		var ret int32
		return ret
	}
	return *o.CostPrice
}

// GetCostPriceOk returns a tuple with the CostPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuCreateInfo) GetCostPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.CostPrice) {
		return nil, false
	}
	return o.CostPrice, true
}

// HasCostPrice returns a boolean if a field has been set.
func (o *ItemSkuCreateInfo) HasCostPrice() bool {
	if o != nil && !IsNil(o.CostPrice) {
		return true
	}

	return false
}

// SetCostPrice gets a reference to the given int32 and assigns it to the CostPrice field.
func (o *ItemSkuCreateInfo) SetCostPrice(v int32) {
	o.CostPrice = &v
}

// GetExtInfo returns the ExtInfo field value if set, zero value otherwise.
func (o *ItemSkuCreateInfo) GetExtInfo() []ItemExtInfo {
	if o == nil || IsNil(o.ExtInfo) {
		var ret []ItemExtInfo
		return ret
	}
	return o.ExtInfo
}

// GetExtInfoOk returns a tuple with the ExtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuCreateInfo) GetExtInfoOk() ([]ItemExtInfo, bool) {
	if o == nil || IsNil(o.ExtInfo) {
		return nil, false
	}
	return o.ExtInfo, true
}

// HasExtInfo returns a boolean if a field has been set.
func (o *ItemSkuCreateInfo) HasExtInfo() bool {
	if o != nil && !IsNil(o.ExtInfo) {
		return true
	}

	return false
}

// SetExtInfo gets a reference to the given []ItemExtInfo and assigns it to the ExtInfo field.
func (o *ItemSkuCreateInfo) SetExtInfo(v []ItemExtInfo) {
	o.ExtInfo = v
}

// GetExternalSkuId returns the ExternalSkuId field value if set, zero value otherwise.
func (o *ItemSkuCreateInfo) GetExternalSkuId() string {
	if o == nil || IsNil(o.ExternalSkuId) {
		var ret string
		return ret
	}
	return *o.ExternalSkuId
}

// GetExternalSkuIdOk returns a tuple with the ExternalSkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuCreateInfo) GetExternalSkuIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSkuId) {
		return nil, false
	}
	return o.ExternalSkuId, true
}

// HasExternalSkuId returns a boolean if a field has been set.
func (o *ItemSkuCreateInfo) HasExternalSkuId() bool {
	if o != nil && !IsNil(o.ExternalSkuId) {
		return true
	}

	return false
}

// SetExternalSkuId gets a reference to the given string and assigns it to the ExternalSkuId field.
func (o *ItemSkuCreateInfo) SetExternalSkuId(v string) {
	o.ExternalSkuId = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *ItemSkuCreateInfo) GetInventory() int32 {
	if o == nil || IsNil(o.Inventory) {
		var ret int32
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuCreateInfo) GetInventoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *ItemSkuCreateInfo) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given int32 and assigns it to the Inventory field.
func (o *ItemSkuCreateInfo) SetInventory(v int32) {
	o.Inventory = &v
}

// GetOriginalPrice returns the OriginalPrice field value if set, zero value otherwise.
func (o *ItemSkuCreateInfo) GetOriginalPrice() int32 {
	if o == nil || IsNil(o.OriginalPrice) {
		var ret int32
		return ret
	}
	return *o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuCreateInfo) GetOriginalPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginalPrice) {
		return nil, false
	}
	return o.OriginalPrice, true
}

// HasOriginalPrice returns a boolean if a field has been set.
func (o *ItemSkuCreateInfo) HasOriginalPrice() bool {
	if o != nil && !IsNil(o.OriginalPrice) {
		return true
	}

	return false
}

// SetOriginalPrice gets a reference to the given int32 and assigns it to the OriginalPrice field.
func (o *ItemSkuCreateInfo) SetOriginalPrice(v int32) {
	o.OriginalPrice = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ItemSkuCreateInfo) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuCreateInfo) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ItemSkuCreateInfo) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *ItemSkuCreateInfo) SetPrice(v int32) {
	o.Price = &v
}

func (o ItemSkuCreateInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemSkuCreateInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CostPrice) {
		toSerialize["cost_price"] = o.CostPrice
	}
	if !IsNil(o.ExtInfo) {
		toSerialize["ext_info"] = o.ExtInfo
	}
	if !IsNil(o.ExternalSkuId) {
		toSerialize["external_sku_id"] = o.ExternalSkuId
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.OriginalPrice) {
		toSerialize["original_price"] = o.OriginalPrice
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableItemSkuCreateInfo struct {
	value *ItemSkuCreateInfo
	isSet bool
}

func (v NullableItemSkuCreateInfo) Get() *ItemSkuCreateInfo {
	return v.value
}

func (v *NullableItemSkuCreateInfo) Set(val *ItemSkuCreateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableItemSkuCreateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableItemSkuCreateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemSkuCreateInfo(val *ItemSkuCreateInfo) *NullableItemSkuCreateInfo {
	return &NullableItemSkuCreateInfo{value: val, isSet: true}
}

func (v NullableItemSkuCreateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemSkuCreateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the DeliveryItemContentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryItemContentInfo{}

// DeliveryItemContentInfo struct for DeliveryItemContentInfo
type DeliveryItemContentInfo struct {
	// 支付宝侧商品id。 注意事项：支持状态为“出售中”的商品
	ItemId *string `json:"item_id,omitempty"`
	// 商品模版类型
	ItemType *string `json:"item_type,omitempty"`
}

// NewDeliveryItemContentInfo instantiates a new DeliveryItemContentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryItemContentInfo() *DeliveryItemContentInfo {
	this := DeliveryItemContentInfo{}
	return &this
}

// NewDeliveryItemContentInfoWithDefaults instantiates a new DeliveryItemContentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryItemContentInfoWithDefaults() *DeliveryItemContentInfo {
	this := DeliveryItemContentInfo{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *DeliveryItemContentInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryItemContentInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *DeliveryItemContentInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *DeliveryItemContentInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *DeliveryItemContentInfo) GetItemType() string {
	if o == nil || IsNil(o.ItemType) {
		var ret string
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryItemContentInfo) GetItemTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemType) {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *DeliveryItemContentInfo) HasItemType() bool {
	if o != nil && !IsNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given string and assigns it to the ItemType field.
func (o *DeliveryItemContentInfo) SetItemType(v string) {
	o.ItemType = &v
}

func (o DeliveryItemContentInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryItemContentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.ItemType) {
		toSerialize["item_type"] = o.ItemType
	}
	return toSerialize, nil
}

type NullableDeliveryItemContentInfo struct {
	value *DeliveryItemContentInfo
	isSet bool
}

func (v NullableDeliveryItemContentInfo) Get() *DeliveryItemContentInfo {
	return v.value
}

func (v *NullableDeliveryItemContentInfo) Set(val *DeliveryItemContentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryItemContentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryItemContentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryItemContentInfo(val *DeliveryItemContentInfo) *NullableDeliveryItemContentInfo {
	return &NullableDeliveryItemContentInfo{value: val, isSet: true}
}

func (v NullableDeliveryItemContentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryItemContentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

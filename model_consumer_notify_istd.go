/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConsumerNotifyIstd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumerNotifyIstd{}

// ConsumerNotifyIstd struct for ConsumerNotifyIstd
type ConsumerNotifyIstd struct {
	// 商品数量
	GoodsCount *int32 `json:"goods_count,omitempty"`
	// 商品缩略图url，支持格式：bmp、jpg、jpeg、png、gif
	GoodsImg *string `json:"goods_img,omitempty"`
	// 商品名称
	GoodsName *string `json:"goods_name,omitempty"`
	// 商家电话
	MerchantMobile *string `json:"merchant_mobile,omitempty"`
	// 商家名称，tiny_app_id和merchant_name不能同时为空
	MerchantName *string `json:"merchant_name,omitempty"`
	// 商家小程序appid
	TinyAppId *string `json:"tiny_app_id,omitempty"`
	// 商家小程序的路径，建议为订单页面
	TinyAppUrl *string `json:"tiny_app_url,omitempty"`
}

// NewConsumerNotifyIstd instantiates a new ConsumerNotifyIstd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumerNotifyIstd() *ConsumerNotifyIstd {
	this := ConsumerNotifyIstd{}
	return &this
}

// NewConsumerNotifyIstdWithDefaults instantiates a new ConsumerNotifyIstd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumerNotifyIstdWithDefaults() *ConsumerNotifyIstd {
	this := ConsumerNotifyIstd{}
	return &this
}

// GetGoodsCount returns the GoodsCount field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetGoodsCount() int32 {
	if o == nil || IsNil(o.GoodsCount) {
		var ret int32
		return ret
	}
	return *o.GoodsCount
}

// GetGoodsCountOk returns a tuple with the GoodsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetGoodsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.GoodsCount) {
		return nil, false
	}
	return o.GoodsCount, true
}

// HasGoodsCount returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasGoodsCount() bool {
	if o != nil && !IsNil(o.GoodsCount) {
		return true
	}

	return false
}

// SetGoodsCount gets a reference to the given int32 and assigns it to the GoodsCount field.
func (o *ConsumerNotifyIstd) SetGoodsCount(v int32) {
	o.GoodsCount = &v
}

// GetGoodsImg returns the GoodsImg field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetGoodsImg() string {
	if o == nil || IsNil(o.GoodsImg) {
		var ret string
		return ret
	}
	return *o.GoodsImg
}

// GetGoodsImgOk returns a tuple with the GoodsImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetGoodsImgOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsImg) {
		return nil, false
	}
	return o.GoodsImg, true
}

// HasGoodsImg returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasGoodsImg() bool {
	if o != nil && !IsNil(o.GoodsImg) {
		return true
	}

	return false
}

// SetGoodsImg gets a reference to the given string and assigns it to the GoodsImg field.
func (o *ConsumerNotifyIstd) SetGoodsImg(v string) {
	o.GoodsImg = &v
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *ConsumerNotifyIstd) SetGoodsName(v string) {
	o.GoodsName = &v
}

// GetMerchantMobile returns the MerchantMobile field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetMerchantMobile() string {
	if o == nil || IsNil(o.MerchantMobile) {
		var ret string
		return ret
	}
	return *o.MerchantMobile
}

// GetMerchantMobileOk returns a tuple with the MerchantMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetMerchantMobileOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantMobile) {
		return nil, false
	}
	return o.MerchantMobile, true
}

// HasMerchantMobile returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasMerchantMobile() bool {
	if o != nil && !IsNil(o.MerchantMobile) {
		return true
	}

	return false
}

// SetMerchantMobile gets a reference to the given string and assigns it to the MerchantMobile field.
func (o *ConsumerNotifyIstd) SetMerchantMobile(v string) {
	o.MerchantMobile = &v
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetMerchantName() string {
	if o == nil || IsNil(o.MerchantName) {
		var ret string
		return ret
	}
	return *o.MerchantName
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetMerchantNameOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantName) {
		return nil, false
	}
	return o.MerchantName, true
}

// HasMerchantName returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasMerchantName() bool {
	if o != nil && !IsNil(o.MerchantName) {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given string and assigns it to the MerchantName field.
func (o *ConsumerNotifyIstd) SetMerchantName(v string) {
	o.MerchantName = &v
}

// GetTinyAppId returns the TinyAppId field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetTinyAppId() string {
	if o == nil || IsNil(o.TinyAppId) {
		var ret string
		return ret
	}
	return *o.TinyAppId
}

// GetTinyAppIdOk returns a tuple with the TinyAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetTinyAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.TinyAppId) {
		return nil, false
	}
	return o.TinyAppId, true
}

// HasTinyAppId returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasTinyAppId() bool {
	if o != nil && !IsNil(o.TinyAppId) {
		return true
	}

	return false
}

// SetTinyAppId gets a reference to the given string and assigns it to the TinyAppId field.
func (o *ConsumerNotifyIstd) SetTinyAppId(v string) {
	o.TinyAppId = &v
}

// GetTinyAppUrl returns the TinyAppUrl field value if set, zero value otherwise.
func (o *ConsumerNotifyIstd) GetTinyAppUrl() string {
	if o == nil || IsNil(o.TinyAppUrl) {
		var ret string
		return ret
	}
	return *o.TinyAppUrl
}

// GetTinyAppUrlOk returns a tuple with the TinyAppUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerNotifyIstd) GetTinyAppUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TinyAppUrl) {
		return nil, false
	}
	return o.TinyAppUrl, true
}

// HasTinyAppUrl returns a boolean if a field has been set.
func (o *ConsumerNotifyIstd) HasTinyAppUrl() bool {
	if o != nil && !IsNil(o.TinyAppUrl) {
		return true
	}

	return false
}

// SetTinyAppUrl gets a reference to the given string and assigns it to the TinyAppUrl field.
func (o *ConsumerNotifyIstd) SetTinyAppUrl(v string) {
	o.TinyAppUrl = &v
}

func (o ConsumerNotifyIstd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumerNotifyIstd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoodsCount) {
		toSerialize["goods_count"] = o.GoodsCount
	}
	if !IsNil(o.GoodsImg) {
		toSerialize["goods_img"] = o.GoodsImg
	}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	if !IsNil(o.MerchantMobile) {
		toSerialize["merchant_mobile"] = o.MerchantMobile
	}
	if !IsNil(o.MerchantName) {
		toSerialize["merchant_name"] = o.MerchantName
	}
	if !IsNil(o.TinyAppId) {
		toSerialize["tiny_app_id"] = o.TinyAppId
	}
	if !IsNil(o.TinyAppUrl) {
		toSerialize["tiny_app_url"] = o.TinyAppUrl
	}
	return toSerialize, nil
}

type NullableConsumerNotifyIstd struct {
	value *ConsumerNotifyIstd
	isSet bool
}

func (v NullableConsumerNotifyIstd) Get() *ConsumerNotifyIstd {
	return v.value
}

func (v *NullableConsumerNotifyIstd) Set(val *ConsumerNotifyIstd) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumerNotifyIstd) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumerNotifyIstd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumerNotifyIstd(val *ConsumerNotifyIstd) *NullableConsumerNotifyIstd {
	return &NullableConsumerNotifyIstd{value: val, isSet: true}
}

func (v NullableConsumerNotifyIstd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumerNotifyIstd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



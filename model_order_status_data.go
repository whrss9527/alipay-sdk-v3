/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderStatusData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderStatusData{}

// OrderStatusData struct for OrderStatusData
type OrderStatusData struct {
	// 申请单ID
	OrderId *string `json:"order_id,omitempty"`
	// 驳回原因
	RejectReason *string `json:"reject_reason,omitempty"`
	// 申请状态 AGREE、REJECT、EDIT、AUDIT
	Status *string `json:"status,omitempty"`
}

// NewOrderStatusData instantiates a new OrderStatusData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderStatusData() *OrderStatusData {
	this := OrderStatusData{}
	return &this
}

// NewOrderStatusDataWithDefaults instantiates a new OrderStatusData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderStatusDataWithDefaults() *OrderStatusData {
	this := OrderStatusData{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderStatusData) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusData) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderStatusData) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderStatusData) SetOrderId(v string) {
	o.OrderId = &v
}

// GetRejectReason returns the RejectReason field value if set, zero value otherwise.
func (o *OrderStatusData) GetRejectReason() string {
	if o == nil || IsNil(o.RejectReason) {
		var ret string
		return ret
	}
	return *o.RejectReason
}

// GetRejectReasonOk returns a tuple with the RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusData) GetRejectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RejectReason) {
		return nil, false
	}
	return o.RejectReason, true
}

// HasRejectReason returns a boolean if a field has been set.
func (o *OrderStatusData) HasRejectReason() bool {
	if o != nil && !IsNil(o.RejectReason) {
		return true
	}

	return false
}

// SetRejectReason gets a reference to the given string and assigns it to the RejectReason field.
func (o *OrderStatusData) SetRejectReason(v string) {
	o.RejectReason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrderStatusData) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusData) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrderStatusData) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OrderStatusData) SetStatus(v string) {
	o.Status = &v
}

func (o OrderStatusData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderStatusData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.RejectReason) {
		toSerialize["reject_reason"] = o.RejectReason
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableOrderStatusData struct {
	value *OrderStatusData
	isSet bool
}

func (v NullableOrderStatusData) Get() *OrderStatusData {
	return v.value
}

func (v *NullableOrderStatusData) Set(val *OrderStatusData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderStatusData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderStatusData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderStatusData(val *OrderStatusData) *NullableOrderStatusData {
	return &NullableOrderStatusData{value: val, isSet: true}
}

func (v NullableOrderStatusData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderStatusData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



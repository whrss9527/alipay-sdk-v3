/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ExpenseQuotaInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpenseQuotaInfo{}

// ExpenseQuotaInfo struct for ExpenseQuotaInfo
type ExpenseQuotaInfo struct {
	// 额度失效时间
	EffectiveEndDate *string `json:"effective_end_date,omitempty"`
	// 额度生效时间
	EffectiveStartDate *string `json:"effective_start_date,omitempty"`
	// 企业ID
	EnterpriseId *string `json:"enterprise_id,omitempty"`
	// 额度是否冻结，冻结后因公付不可用
	Freeze *bool `json:"freeze,omitempty"`
	// 额度所属者ID owner_type为EMPLOYEE时为员工支付宝ID owner_type为ENTERPRISE_PAY_UID时为员工企业码ID owner_type为PHONE时为员工手机号 owner_type为ENTERPRISE时为企业ID
	OwnerId *string `json:"owner_id,omitempty"`
	// owner_type为EMPLOYEE时为员工open_id owner_type为PHONE时为员工手机号 owner_type为ENTERPRISE_PAY_UID时为员工企业码ID
	OwnerOpenId *string `json:"owner_open_id,omitempty"`
	// 额度所属者id类型
	OwnerType *string `json:"owner_type,omitempty"`
	// 可用金额（单位分）
	QuotaAvailable *string `json:"quota_available,omitempty"`
	// 额度ID
	QuotaId *string `json:"quota_id,omitempty"`
	// 锁定金额（单位分）
	QuotaLocked *string `json:"quota_locked,omitempty"`
	// 总金额（单位分）
	QuotaTotal *string `json:"quota_total,omitempty"`
	// 额度类型
	QuotaType *string `json:"quota_type,omitempty"`
	// 已用金额（单位分）
	QuotaUsed *string `json:"quota_used,omitempty"`
	// 额度维度ID 当 target_type=EXPENSE_TYPE 时，值为 MEAL（工作餐） 当target_type=RULE_GROUP_AGGREGATION 时，值为费控规则聚合ID 当target_type=INSTITUTION 时，值为制度ID
	TargetId *string `json:"target_id,omitempty"`
	// 额度维度
	TargetType *string `json:"target_type,omitempty"`
}

// NewExpenseQuotaInfo instantiates a new ExpenseQuotaInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpenseQuotaInfo() *ExpenseQuotaInfo {
	this := ExpenseQuotaInfo{}
	return &this
}

// NewExpenseQuotaInfoWithDefaults instantiates a new ExpenseQuotaInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpenseQuotaInfoWithDefaults() *ExpenseQuotaInfo {
	this := ExpenseQuotaInfo{}
	return &this
}

// GetEffectiveEndDate returns the EffectiveEndDate field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetEffectiveEndDate() string {
	if o == nil || IsNil(o.EffectiveEndDate) {
		var ret string
		return ret
	}
	return *o.EffectiveEndDate
}

// GetEffectiveEndDateOk returns a tuple with the EffectiveEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetEffectiveEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveEndDate) {
		return nil, false
	}
	return o.EffectiveEndDate, true
}

// HasEffectiveEndDate returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasEffectiveEndDate() bool {
	if o != nil && !IsNil(o.EffectiveEndDate) {
		return true
	}

	return false
}

// SetEffectiveEndDate gets a reference to the given string and assigns it to the EffectiveEndDate field.
func (o *ExpenseQuotaInfo) SetEffectiveEndDate(v string) {
	o.EffectiveEndDate = &v
}

// GetEffectiveStartDate returns the EffectiveStartDate field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetEffectiveStartDate() string {
	if o == nil || IsNil(o.EffectiveStartDate) {
		var ret string
		return ret
	}
	return *o.EffectiveStartDate
}

// GetEffectiveStartDateOk returns a tuple with the EffectiveStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetEffectiveStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveStartDate) {
		return nil, false
	}
	return o.EffectiveStartDate, true
}

// HasEffectiveStartDate returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasEffectiveStartDate() bool {
	if o != nil && !IsNil(o.EffectiveStartDate) {
		return true
	}

	return false
}

// SetEffectiveStartDate gets a reference to the given string and assigns it to the EffectiveStartDate field.
func (o *ExpenseQuotaInfo) SetEffectiveStartDate(v string) {
	o.EffectiveStartDate = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetEnterpriseId() string {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret string
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetEnterpriseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given string and assigns it to the EnterpriseId field.
func (o *ExpenseQuotaInfo) SetEnterpriseId(v string) {
	o.EnterpriseId = &v
}

// GetFreeze returns the Freeze field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetFreeze() bool {
	if o == nil || IsNil(o.Freeze) {
		var ret bool
		return ret
	}
	return *o.Freeze
}

// GetFreezeOk returns a tuple with the Freeze field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetFreezeOk() (*bool, bool) {
	if o == nil || IsNil(o.Freeze) {
		return nil, false
	}
	return o.Freeze, true
}

// HasFreeze returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasFreeze() bool {
	if o != nil && !IsNil(o.Freeze) {
		return true
	}

	return false
}

// SetFreeze gets a reference to the given bool and assigns it to the Freeze field.
func (o *ExpenseQuotaInfo) SetFreeze(v bool) {
	o.Freeze = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ExpenseQuotaInfo) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetOwnerOpenId returns the OwnerOpenId field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetOwnerOpenId() string {
	if o == nil || IsNil(o.OwnerOpenId) {
		var ret string
		return ret
	}
	return *o.OwnerOpenId
}

// GetOwnerOpenIdOk returns a tuple with the OwnerOpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetOwnerOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerOpenId) {
		return nil, false
	}
	return o.OwnerOpenId, true
}

// HasOwnerOpenId returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasOwnerOpenId() bool {
	if o != nil && !IsNil(o.OwnerOpenId) {
		return true
	}

	return false
}

// SetOwnerOpenId gets a reference to the given string and assigns it to the OwnerOpenId field.
func (o *ExpenseQuotaInfo) SetOwnerOpenId(v string) {
	o.OwnerOpenId = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetOwnerType() string {
	if o == nil || IsNil(o.OwnerType) {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerType) {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasOwnerType() bool {
	if o != nil && !IsNil(o.OwnerType) {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *ExpenseQuotaInfo) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetQuotaAvailable returns the QuotaAvailable field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetQuotaAvailable() string {
	if o == nil || IsNil(o.QuotaAvailable) {
		var ret string
		return ret
	}
	return *o.QuotaAvailable
}

// GetQuotaAvailableOk returns a tuple with the QuotaAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetQuotaAvailableOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaAvailable) {
		return nil, false
	}
	return o.QuotaAvailable, true
}

// HasQuotaAvailable returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasQuotaAvailable() bool {
	if o != nil && !IsNil(o.QuotaAvailable) {
		return true
	}

	return false
}

// SetQuotaAvailable gets a reference to the given string and assigns it to the QuotaAvailable field.
func (o *ExpenseQuotaInfo) SetQuotaAvailable(v string) {
	o.QuotaAvailable = &v
}

// GetQuotaId returns the QuotaId field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetQuotaId() string {
	if o == nil || IsNil(o.QuotaId) {
		var ret string
		return ret
	}
	return *o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetQuotaIdOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaId) {
		return nil, false
	}
	return o.QuotaId, true
}

// HasQuotaId returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasQuotaId() bool {
	if o != nil && !IsNil(o.QuotaId) {
		return true
	}

	return false
}

// SetQuotaId gets a reference to the given string and assigns it to the QuotaId field.
func (o *ExpenseQuotaInfo) SetQuotaId(v string) {
	o.QuotaId = &v
}

// GetQuotaLocked returns the QuotaLocked field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetQuotaLocked() string {
	if o == nil || IsNil(o.QuotaLocked) {
		var ret string
		return ret
	}
	return *o.QuotaLocked
}

// GetQuotaLockedOk returns a tuple with the QuotaLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetQuotaLockedOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaLocked) {
		return nil, false
	}
	return o.QuotaLocked, true
}

// HasQuotaLocked returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasQuotaLocked() bool {
	if o != nil && !IsNil(o.QuotaLocked) {
		return true
	}

	return false
}

// SetQuotaLocked gets a reference to the given string and assigns it to the QuotaLocked field.
func (o *ExpenseQuotaInfo) SetQuotaLocked(v string) {
	o.QuotaLocked = &v
}

// GetQuotaTotal returns the QuotaTotal field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetQuotaTotal() string {
	if o == nil || IsNil(o.QuotaTotal) {
		var ret string
		return ret
	}
	return *o.QuotaTotal
}

// GetQuotaTotalOk returns a tuple with the QuotaTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetQuotaTotalOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaTotal) {
		return nil, false
	}
	return o.QuotaTotal, true
}

// HasQuotaTotal returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasQuotaTotal() bool {
	if o != nil && !IsNil(o.QuotaTotal) {
		return true
	}

	return false
}

// SetQuotaTotal gets a reference to the given string and assigns it to the QuotaTotal field.
func (o *ExpenseQuotaInfo) SetQuotaTotal(v string) {
	o.QuotaTotal = &v
}

// GetQuotaType returns the QuotaType field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetQuotaType() string {
	if o == nil || IsNil(o.QuotaType) {
		var ret string
		return ret
	}
	return *o.QuotaType
}

// GetQuotaTypeOk returns a tuple with the QuotaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetQuotaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaType) {
		return nil, false
	}
	return o.QuotaType, true
}

// HasQuotaType returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasQuotaType() bool {
	if o != nil && !IsNil(o.QuotaType) {
		return true
	}

	return false
}

// SetQuotaType gets a reference to the given string and assigns it to the QuotaType field.
func (o *ExpenseQuotaInfo) SetQuotaType(v string) {
	o.QuotaType = &v
}

// GetQuotaUsed returns the QuotaUsed field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetQuotaUsed() string {
	if o == nil || IsNil(o.QuotaUsed) {
		var ret string
		return ret
	}
	return *o.QuotaUsed
}

// GetQuotaUsedOk returns a tuple with the QuotaUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetQuotaUsedOk() (*string, bool) {
	if o == nil || IsNil(o.QuotaUsed) {
		return nil, false
	}
	return o.QuotaUsed, true
}

// HasQuotaUsed returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasQuotaUsed() bool {
	if o != nil && !IsNil(o.QuotaUsed) {
		return true
	}

	return false
}

// SetQuotaUsed gets a reference to the given string and assigns it to the QuotaUsed field.
func (o *ExpenseQuotaInfo) SetQuotaUsed(v string) {
	o.QuotaUsed = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *ExpenseQuotaInfo) SetTargetId(v string) {
	o.TargetId = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *ExpenseQuotaInfo) GetTargetType() string {
	if o == nil || IsNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseQuotaInfo) GetTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *ExpenseQuotaInfo) HasTargetType() bool {
	if o != nil && !IsNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *ExpenseQuotaInfo) SetTargetType(v string) {
	o.TargetType = &v
}

func (o ExpenseQuotaInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpenseQuotaInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EffectiveEndDate) {
		toSerialize["effective_end_date"] = o.EffectiveEndDate
	}
	if !IsNil(o.EffectiveStartDate) {
		toSerialize["effective_start_date"] = o.EffectiveStartDate
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if !IsNil(o.Freeze) {
		toSerialize["freeze"] = o.Freeze
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.OwnerOpenId) {
		toSerialize["owner_open_id"] = o.OwnerOpenId
	}
	if !IsNil(o.OwnerType) {
		toSerialize["owner_type"] = o.OwnerType
	}
	if !IsNil(o.QuotaAvailable) {
		toSerialize["quota_available"] = o.QuotaAvailable
	}
	if !IsNil(o.QuotaId) {
		toSerialize["quota_id"] = o.QuotaId
	}
	if !IsNil(o.QuotaLocked) {
		toSerialize["quota_locked"] = o.QuotaLocked
	}
	if !IsNil(o.QuotaTotal) {
		toSerialize["quota_total"] = o.QuotaTotal
	}
	if !IsNil(o.QuotaType) {
		toSerialize["quota_type"] = o.QuotaType
	}
	if !IsNil(o.QuotaUsed) {
		toSerialize["quota_used"] = o.QuotaUsed
	}
	if !IsNil(o.TargetId) {
		toSerialize["target_id"] = o.TargetId
	}
	if !IsNil(o.TargetType) {
		toSerialize["target_type"] = o.TargetType
	}
	return toSerialize, nil
}

type NullableExpenseQuotaInfo struct {
	value *ExpenseQuotaInfo
	isSet bool
}

func (v NullableExpenseQuotaInfo) Get() *ExpenseQuotaInfo {
	return v.value
}

func (v *NullableExpenseQuotaInfo) Set(val *ExpenseQuotaInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableExpenseQuotaInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableExpenseQuotaInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpenseQuotaInfo(val *ExpenseQuotaInfo) *NullableExpenseQuotaInfo {
	return &NullableExpenseQuotaInfo{value: val, isSet: true}
}

func (v NullableExpenseQuotaInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpenseQuotaInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

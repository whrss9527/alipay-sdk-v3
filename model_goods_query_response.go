/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the GoodsQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsQueryResponse{}

// GoodsQueryResponse struct for GoodsQueryResponse
type GoodsQueryResponse struct {
	// 支付宝内部商品唯一标识
	AlipayGoodsId *string `json:"alipay_goods_id,omitempty"`
	// 该商品的小程序购买链接
	BuyingUrl *string `json:"buying_url,omitempty"`
	// 商品辅助说明文案
	GoodsComment *string `json:"goods_comment,omitempty"`
	// 商品说明标签（如-随心退）
	GoodsDescriptionLabel *string `json:"goods_description_label,omitempty"`
	// 商品的唯一标识，同一个小部件下，该标识唯一，请开发者自行保证
	GoodsId *string `json:"goods_id,omitempty"`
	// 营销标签（如-限量特价），每个商品仅支持一个营销标签
	GoodsLabel *string `json:"goods_label,omitempty"`
	// 商品名称
	GoodsName *string `json:"goods_name,omitempty"`
	// 商品所属品类
	GoodsType *string `json:"goods_type,omitempty"`
	// 商品主图片地址
	MainPicUrl *string `json:"main_pic_url,omitempty"`
	// 小程序ID
	MiniAppId *string `json:"mini_app_id,omitempty"`
	// 商品排序，自然整数, 数字越小越靠前
	OrderNumber *string `json:"order_number,omitempty"`
	// 单位\"元\"的商品原价，传入数字，不需要传入\"元\"
	OriginalPrice *string `json:"original_price,omitempty"`
	// 品的售卖商家，即承接该品的小程序背后的商家。和mini_app_id要求对应
	Pid *string `json:"pid,omitempty"`
	// 投放城市的列表，详见https://www.mca.gov.cn/article/sj/xzqh/2020/2020/202007170301.html，有多个用英文,分隔。如果没有限制则不传入
	PublishCities *string `json:"publish_cities,omitempty"`
	// 剩余库存
	RemainingQuantity *int32 `json:"remaining_quantity,omitempty"`
	// 单位\"元\"的售价，传入数字，不需要传入\"元\"
	SellPrice *string `json:"sell_price,omitempty"`
	// 已售数量
	SoldQuantity *int32 `json:"sold_quantity,omitempty"`
	// 总库存量
	TotalQuantity *string `json:"total_quantity,omitempty"`
}

// NewGoodsQueryResponse instantiates a new GoodsQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsQueryResponse() *GoodsQueryResponse {
	this := GoodsQueryResponse{}
	return &this
}

// NewGoodsQueryResponseWithDefaults instantiates a new GoodsQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsQueryResponseWithDefaults() *GoodsQueryResponse {
	this := GoodsQueryResponse{}
	return &this
}

// GetAlipayGoodsId returns the AlipayGoodsId field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetAlipayGoodsId() string {
	if o == nil || IsNil(o.AlipayGoodsId) {
		var ret string
		return ret
	}
	return *o.AlipayGoodsId
}

// GetAlipayGoodsIdOk returns a tuple with the AlipayGoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetAlipayGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlipayGoodsId) {
		return nil, false
	}
	return o.AlipayGoodsId, true
}

// HasAlipayGoodsId returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasAlipayGoodsId() bool {
	if o != nil && !IsNil(o.AlipayGoodsId) {
		return true
	}

	return false
}

// SetAlipayGoodsId gets a reference to the given string and assigns it to the AlipayGoodsId field.
func (o *GoodsQueryResponse) SetAlipayGoodsId(v string) {
	o.AlipayGoodsId = &v
}

// GetBuyingUrl returns the BuyingUrl field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetBuyingUrl() string {
	if o == nil || IsNil(o.BuyingUrl) {
		var ret string
		return ret
	}
	return *o.BuyingUrl
}

// GetBuyingUrlOk returns a tuple with the BuyingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetBuyingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BuyingUrl) {
		return nil, false
	}
	return o.BuyingUrl, true
}

// HasBuyingUrl returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasBuyingUrl() bool {
	if o != nil && !IsNil(o.BuyingUrl) {
		return true
	}

	return false
}

// SetBuyingUrl gets a reference to the given string and assigns it to the BuyingUrl field.
func (o *GoodsQueryResponse) SetBuyingUrl(v string) {
	o.BuyingUrl = &v
}

// GetGoodsComment returns the GoodsComment field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetGoodsComment() string {
	if o == nil || IsNil(o.GoodsComment) {
		var ret string
		return ret
	}
	return *o.GoodsComment
}

// GetGoodsCommentOk returns a tuple with the GoodsComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetGoodsCommentOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsComment) {
		return nil, false
	}
	return o.GoodsComment, true
}

// HasGoodsComment returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasGoodsComment() bool {
	if o != nil && !IsNil(o.GoodsComment) {
		return true
	}

	return false
}

// SetGoodsComment gets a reference to the given string and assigns it to the GoodsComment field.
func (o *GoodsQueryResponse) SetGoodsComment(v string) {
	o.GoodsComment = &v
}

// GetGoodsDescriptionLabel returns the GoodsDescriptionLabel field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetGoodsDescriptionLabel() string {
	if o == nil || IsNil(o.GoodsDescriptionLabel) {
		var ret string
		return ret
	}
	return *o.GoodsDescriptionLabel
}

// GetGoodsDescriptionLabelOk returns a tuple with the GoodsDescriptionLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetGoodsDescriptionLabelOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsDescriptionLabel) {
		return nil, false
	}
	return o.GoodsDescriptionLabel, true
}

// HasGoodsDescriptionLabel returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasGoodsDescriptionLabel() bool {
	if o != nil && !IsNil(o.GoodsDescriptionLabel) {
		return true
	}

	return false
}

// SetGoodsDescriptionLabel gets a reference to the given string and assigns it to the GoodsDescriptionLabel field.
func (o *GoodsQueryResponse) SetGoodsDescriptionLabel(v string) {
	o.GoodsDescriptionLabel = &v
}

// GetGoodsId returns the GoodsId field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetGoodsId() string {
	if o == nil || IsNil(o.GoodsId) {
		var ret string
		return ret
	}
	return *o.GoodsId
}

// GetGoodsIdOk returns a tuple with the GoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsId) {
		return nil, false
	}
	return o.GoodsId, true
}

// HasGoodsId returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasGoodsId() bool {
	if o != nil && !IsNil(o.GoodsId) {
		return true
	}

	return false
}

// SetGoodsId gets a reference to the given string and assigns it to the GoodsId field.
func (o *GoodsQueryResponse) SetGoodsId(v string) {
	o.GoodsId = &v
}

// GetGoodsLabel returns the GoodsLabel field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetGoodsLabel() string {
	if o == nil || IsNil(o.GoodsLabel) {
		var ret string
		return ret
	}
	return *o.GoodsLabel
}

// GetGoodsLabelOk returns a tuple with the GoodsLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetGoodsLabelOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsLabel) {
		return nil, false
	}
	return o.GoodsLabel, true
}

// HasGoodsLabel returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasGoodsLabel() bool {
	if o != nil && !IsNil(o.GoodsLabel) {
		return true
	}

	return false
}

// SetGoodsLabel gets a reference to the given string and assigns it to the GoodsLabel field.
func (o *GoodsQueryResponse) SetGoodsLabel(v string) {
	o.GoodsLabel = &v
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *GoodsQueryResponse) SetGoodsName(v string) {
	o.GoodsName = &v
}

// GetGoodsType returns the GoodsType field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetGoodsType() string {
	if o == nil || IsNil(o.GoodsType) {
		var ret string
		return ret
	}
	return *o.GoodsType
}

// GetGoodsTypeOk returns a tuple with the GoodsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetGoodsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsType) {
		return nil, false
	}
	return o.GoodsType, true
}

// HasGoodsType returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasGoodsType() bool {
	if o != nil && !IsNil(o.GoodsType) {
		return true
	}

	return false
}

// SetGoodsType gets a reference to the given string and assigns it to the GoodsType field.
func (o *GoodsQueryResponse) SetGoodsType(v string) {
	o.GoodsType = &v
}

// GetMainPicUrl returns the MainPicUrl field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetMainPicUrl() string {
	if o == nil || IsNil(o.MainPicUrl) {
		var ret string
		return ret
	}
	return *o.MainPicUrl
}

// GetMainPicUrlOk returns a tuple with the MainPicUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetMainPicUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MainPicUrl) {
		return nil, false
	}
	return o.MainPicUrl, true
}

// HasMainPicUrl returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasMainPicUrl() bool {
	if o != nil && !IsNil(o.MainPicUrl) {
		return true
	}

	return false
}

// SetMainPicUrl gets a reference to the given string and assigns it to the MainPicUrl field.
func (o *GoodsQueryResponse) SetMainPicUrl(v string) {
	o.MainPicUrl = &v
}

// GetMiniAppId returns the MiniAppId field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetMiniAppId() string {
	if o == nil || IsNil(o.MiniAppId) {
		var ret string
		return ret
	}
	return *o.MiniAppId
}

// GetMiniAppIdOk returns a tuple with the MiniAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetMiniAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.MiniAppId) {
		return nil, false
	}
	return o.MiniAppId, true
}

// HasMiniAppId returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasMiniAppId() bool {
	if o != nil && !IsNil(o.MiniAppId) {
		return true
	}

	return false
}

// SetMiniAppId gets a reference to the given string and assigns it to the MiniAppId field.
func (o *GoodsQueryResponse) SetMiniAppId(v string) {
	o.MiniAppId = &v
}

// GetOrderNumber returns the OrderNumber field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetOrderNumber() string {
	if o == nil || IsNil(o.OrderNumber) {
		var ret string
		return ret
	}
	return *o.OrderNumber
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OrderNumber) {
		return nil, false
	}
	return o.OrderNumber, true
}

// HasOrderNumber returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasOrderNumber() bool {
	if o != nil && !IsNil(o.OrderNumber) {
		return true
	}

	return false
}

// SetOrderNumber gets a reference to the given string and assigns it to the OrderNumber field.
func (o *GoodsQueryResponse) SetOrderNumber(v string) {
	o.OrderNumber = &v
}

// GetOriginalPrice returns the OriginalPrice field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetOriginalPrice() string {
	if o == nil || IsNil(o.OriginalPrice) {
		var ret string
		return ret
	}
	return *o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetOriginalPriceOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalPrice) {
		return nil, false
	}
	return o.OriginalPrice, true
}

// HasOriginalPrice returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasOriginalPrice() bool {
	if o != nil && !IsNil(o.OriginalPrice) {
		return true
	}

	return false
}

// SetOriginalPrice gets a reference to the given string and assigns it to the OriginalPrice field.
func (o *GoodsQueryResponse) SetOriginalPrice(v string) {
	o.OriginalPrice = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetPid() string {
	if o == nil || IsNil(o.Pid) {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetPidOk() (*string, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *GoodsQueryResponse) SetPid(v string) {
	o.Pid = &v
}

// GetPublishCities returns the PublishCities field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetPublishCities() string {
	if o == nil || IsNil(o.PublishCities) {
		var ret string
		return ret
	}
	return *o.PublishCities
}

// GetPublishCitiesOk returns a tuple with the PublishCities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetPublishCitiesOk() (*string, bool) {
	if o == nil || IsNil(o.PublishCities) {
		return nil, false
	}
	return o.PublishCities, true
}

// HasPublishCities returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasPublishCities() bool {
	if o != nil && !IsNil(o.PublishCities) {
		return true
	}

	return false
}

// SetPublishCities gets a reference to the given string and assigns it to the PublishCities field.
func (o *GoodsQueryResponse) SetPublishCities(v string) {
	o.PublishCities = &v
}

// GetRemainingQuantity returns the RemainingQuantity field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetRemainingQuantity() int32 {
	if o == nil || IsNil(o.RemainingQuantity) {
		var ret int32
		return ret
	}
	return *o.RemainingQuantity
}

// GetRemainingQuantityOk returns a tuple with the RemainingQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetRemainingQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.RemainingQuantity) {
		return nil, false
	}
	return o.RemainingQuantity, true
}

// HasRemainingQuantity returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasRemainingQuantity() bool {
	if o != nil && !IsNil(o.RemainingQuantity) {
		return true
	}

	return false
}

// SetRemainingQuantity gets a reference to the given int32 and assigns it to the RemainingQuantity field.
func (o *GoodsQueryResponse) SetRemainingQuantity(v int32) {
	o.RemainingQuantity = &v
}

// GetSellPrice returns the SellPrice field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetSellPrice() string {
	if o == nil || IsNil(o.SellPrice) {
		var ret string
		return ret
	}
	return *o.SellPrice
}

// GetSellPriceOk returns a tuple with the SellPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetSellPriceOk() (*string, bool) {
	if o == nil || IsNil(o.SellPrice) {
		return nil, false
	}
	return o.SellPrice, true
}

// HasSellPrice returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasSellPrice() bool {
	if o != nil && !IsNil(o.SellPrice) {
		return true
	}

	return false
}

// SetSellPrice gets a reference to the given string and assigns it to the SellPrice field.
func (o *GoodsQueryResponse) SetSellPrice(v string) {
	o.SellPrice = &v
}

// GetSoldQuantity returns the SoldQuantity field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetSoldQuantity() int32 {
	if o == nil || IsNil(o.SoldQuantity) {
		var ret int32
		return ret
	}
	return *o.SoldQuantity
}

// GetSoldQuantityOk returns a tuple with the SoldQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetSoldQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.SoldQuantity) {
		return nil, false
	}
	return o.SoldQuantity, true
}

// HasSoldQuantity returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasSoldQuantity() bool {
	if o != nil && !IsNil(o.SoldQuantity) {
		return true
	}

	return false
}

// SetSoldQuantity gets a reference to the given int32 and assigns it to the SoldQuantity field.
func (o *GoodsQueryResponse) SetSoldQuantity(v int32) {
	o.SoldQuantity = &v
}

// GetTotalQuantity returns the TotalQuantity field value if set, zero value otherwise.
func (o *GoodsQueryResponse) GetTotalQuantity() string {
	if o == nil || IsNil(o.TotalQuantity) {
		var ret string
		return ret
	}
	return *o.TotalQuantity
}

// GetTotalQuantityOk returns a tuple with the TotalQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsQueryResponse) GetTotalQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.TotalQuantity) {
		return nil, false
	}
	return o.TotalQuantity, true
}

// HasTotalQuantity returns a boolean if a field has been set.
func (o *GoodsQueryResponse) HasTotalQuantity() bool {
	if o != nil && !IsNil(o.TotalQuantity) {
		return true
	}

	return false
}

// SetTotalQuantity gets a reference to the given string and assigns it to the TotalQuantity field.
func (o *GoodsQueryResponse) SetTotalQuantity(v string) {
	o.TotalQuantity = &v
}

func (o GoodsQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlipayGoodsId) {
		toSerialize["alipay_goods_id"] = o.AlipayGoodsId
	}
	if !IsNil(o.BuyingUrl) {
		toSerialize["buying_url"] = o.BuyingUrl
	}
	if !IsNil(o.GoodsComment) {
		toSerialize["goods_comment"] = o.GoodsComment
	}
	if !IsNil(o.GoodsDescriptionLabel) {
		toSerialize["goods_description_label"] = o.GoodsDescriptionLabel
	}
	if !IsNil(o.GoodsId) {
		toSerialize["goods_id"] = o.GoodsId
	}
	if !IsNil(o.GoodsLabel) {
		toSerialize["goods_label"] = o.GoodsLabel
	}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	if !IsNil(o.GoodsType) {
		toSerialize["goods_type"] = o.GoodsType
	}
	if !IsNil(o.MainPicUrl) {
		toSerialize["main_pic_url"] = o.MainPicUrl
	}
	if !IsNil(o.MiniAppId) {
		toSerialize["mini_app_id"] = o.MiniAppId
	}
	if !IsNil(o.OrderNumber) {
		toSerialize["order_number"] = o.OrderNumber
	}
	if !IsNil(o.OriginalPrice) {
		toSerialize["original_price"] = o.OriginalPrice
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.PublishCities) {
		toSerialize["publish_cities"] = o.PublishCities
	}
	if !IsNil(o.RemainingQuantity) {
		toSerialize["remaining_quantity"] = o.RemainingQuantity
	}
	if !IsNil(o.SellPrice) {
		toSerialize["sell_price"] = o.SellPrice
	}
	if !IsNil(o.SoldQuantity) {
		toSerialize["sold_quantity"] = o.SoldQuantity
	}
	if !IsNil(o.TotalQuantity) {
		toSerialize["total_quantity"] = o.TotalQuantity
	}
	return toSerialize, nil
}

type NullableGoodsQueryResponse struct {
	value *GoodsQueryResponse
	isSet bool
}

func (v NullableGoodsQueryResponse) Get() *GoodsQueryResponse {
	return v.value
}

func (v *NullableGoodsQueryResponse) Set(val *GoodsQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsQueryResponse(val *GoodsQueryResponse) *NullableGoodsQueryResponse {
	return &NullableGoodsQueryResponse{value: val, isSet: true}
}

func (v NullableGoodsQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

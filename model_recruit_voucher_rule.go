/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecruitVoucherRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecruitVoucherRule{}

// RecruitVoucherRule struct for RecruitVoucherRule
type RecruitVoucherRule struct {
	// 券面额（每张代金券可以抵扣的金额）的最大值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	AmountMax *string `json:"amount_max,omitempty"`
	// 券面额（每张代金券可以抵扣的金额）的最小值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	AmountMin *string `json:"amount_min,omitempty"`
	// 券优惠比例的最大值。20代表优惠比例最多是20%。券优惠券比例=券优惠面额/门槛金额。 浮点类型，取值范围为[1,100]，左右均是闭区间，小数点以后最多保留两位。 该字段为空时表示不限制。
	DenominationPercentMax *string `json:"denomination_percent_max,omitempty"`
	// 券优惠比例的最小值。10代表优惠比例最少是10%。券优惠券比例=券优惠面额/门槛金额。 浮点类型，取值范围为[1,100]，左右均是闭区间，小数点以后最多保留两位。 该字段为空时表示不限制。
	DenominationPercentMin *string `json:"denomination_percent_min,omitempty"`
	// 券门槛金额的最大值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	FloorAmountMax *string `json:"floor_amount_max,omitempty"`
	// 券门槛金额的最小值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	FloorAmountMin *string `json:"floor_amount_min,omitempty"`
	// 券原价的最大值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	OriginAmountMax *string `json:"origin_amount_max,omitempty"`
	// 券原价的最小值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	OriginAmountMin *string `json:"origin_amount_min,omitempty"`
	// 券发放结束时间的最大值。 格式为：yyyy-MM-dd HH:mm:ss 该字段为空时表示不限制。
	PublishEndTimeMax *string `json:"publish_end_time_max,omitempty"`
	// 券发放结束时间的最小值。 格式为：yyyy-MM-dd HH:mm:ss 该字段为空时表示不限制。
	PublishEndTimeMin *string `json:"publish_end_time_min,omitempty"`
	// 券发放开始时间的最大值。 格式为：yyyy-MM-dd HH:mm:ss 该字段为空时表示不限制。
	PublishStartTimeMax *string `json:"publish_start_time_max,omitempty"`
	// 券发放开始时间的最小值。 格式为：yyyy-MM-dd HH:mm:ss 该字段为空时表示不限制。
	PublishStartTimeMin *string `json:"publish_start_time_min,omitempty"`
	// 退券类型要求，列表，总共有两种类型： 过期退OVERDUE_REFUND 随时退CAN_REFUND 该字段为空时表示不限制。
	RefundType []string `json:"refund_type,omitempty"`
	// 用户购买优惠券需要支付的金额的最大值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	SaleAmountMax *string `json:"sale_amount_max,omitempty"`
	// 用户购买优惠券需要支付的金额的最小值。 币种为人民币，单位为元。小数点以后最多保留两位。 该字段为空时表示不限制。
	SaleAmountMin *string `json:"sale_amount_min,omitempty"`
	// 券核销渠道要求，列表，总共有两个渠道： 门店SHOP 小程序MINI_APP 该字段为空时表示不限制。
	UseChannel []string `json:"use_channel,omitempty"`
	// 券生效后至少N天内可以使用。比如：valid_days_after_receive_min=20代表 券生效后至少20天内可以使用。 该字段为空时表示不限制。
	ValidDaysAfterReceiveMin *int32 `json:"valid_days_after_receive_min,omitempty"`
	// 券活动类型。支持七种商家券类型和两种支付券类型。  枚举值： 商家券类型： ALL_FIX_ORDER_VOUCHER 全场满减券； ITEM_FIX_ORDER_VOUCHER 单品满减券； ALL_DISCOUNT_ORDER_VOUCHER 全场折扣券； ITEM_DISCOUNT_ORDER_VOUCHER 单品折扣券； ITEM_SPE_ORDER_VOUCHER 单品特价券； EXCHANGE_GROUP_BUY_ORDER_VOUCHER 兑换团购券； EXCHANGE_FIX_ORDER_VOUCHER 兑换代金券；  支付券类型： ALL_FIX_VOUCHER 全场满减券； ITEM_FIX_VOUCHER 单品满减券；  创建商家券参考https://opendocs.alipay.com/apis/01xm17 创建支付券参考https://opendocs.alipay.com/pre-apis/027185（仅供受邀用户使用） 不同的创建券的参数创建出不同类型的券：  1. 根据voucher_type区分满减券、折扣券、特价券、兑换券  2. 根据goods_name是否为空区分单品券、全场券（当voucher_type为满减券、折扣券、特价券）  3. 根据voucher_use_rule.exchange_voucher.biz_type区分团购券、代金券（当voucher_type为兑换券）
	VoucherActivityType *string `json:"voucher_activity_type,omitempty"`
	// 每人领取限制的最大值。 默认按照支付宝uid进行领取限制。 该字段为空时表示不限制。
	VoucherQuantityLimitPerUserMax *int32 `json:"voucher_quantity_limit_per_user_max,omitempty"`
	// 每人领取限制的最小值。 默认按照支付宝uid进行领取限制。 该字段为空时表示不限制。
	VoucherQuantityLimitPerUserMin *int32 `json:"voucher_quantity_limit_per_user_min,omitempty"`
	// 券库存数量的最大值。 该字段为空时表示不限制。
	VoucherQuantityMax *int32 `json:"voucher_quantity_max,omitempty"`
	// 券库存数量的最小值。 该字段为空时表示不限制。
	VoucherQuantityMin *int32 `json:"voucher_quantity_min,omitempty"`
	// 券可使用的开始时间的最小值。 格式为：yyyy-MM-dd HH:mm:ss 该字段为空时表示不限制。
	VoucherValidBeginTimeMin *string `json:"voucher_valid_begin_time_min,omitempty"`
	// 券可使用的结束时间的最大值。 格式为：yyyy-MM-dd HH:mm:ss 该字段为空时表示不限制。
	VoucherValidEndTimeMax *string `json:"voucher_valid_end_time_max,omitempty"`
}

// NewRecruitVoucherRule instantiates a new RecruitVoucherRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecruitVoucherRule() *RecruitVoucherRule {
	this := RecruitVoucherRule{}
	return &this
}

// NewRecruitVoucherRuleWithDefaults instantiates a new RecruitVoucherRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecruitVoucherRuleWithDefaults() *RecruitVoucherRule {
	this := RecruitVoucherRule{}
	return &this
}

// GetAmountMax returns the AmountMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetAmountMax() string {
	if o == nil || IsNil(o.AmountMax) {
		var ret string
		return ret
	}
	return *o.AmountMax
}

// GetAmountMaxOk returns a tuple with the AmountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetAmountMaxOk() (*string, bool) {
	if o == nil || IsNil(o.AmountMax) {
		return nil, false
	}
	return o.AmountMax, true
}

// HasAmountMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasAmountMax() bool {
	if o != nil && !IsNil(o.AmountMax) {
		return true
	}

	return false
}

// SetAmountMax gets a reference to the given string and assigns it to the AmountMax field.
func (o *RecruitVoucherRule) SetAmountMax(v string) {
	o.AmountMax = &v
}

// GetAmountMin returns the AmountMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetAmountMin() string {
	if o == nil || IsNil(o.AmountMin) {
		var ret string
		return ret
	}
	return *o.AmountMin
}

// GetAmountMinOk returns a tuple with the AmountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetAmountMinOk() (*string, bool) {
	if o == nil || IsNil(o.AmountMin) {
		return nil, false
	}
	return o.AmountMin, true
}

// HasAmountMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasAmountMin() bool {
	if o != nil && !IsNil(o.AmountMin) {
		return true
	}

	return false
}

// SetAmountMin gets a reference to the given string and assigns it to the AmountMin field.
func (o *RecruitVoucherRule) SetAmountMin(v string) {
	o.AmountMin = &v
}

// GetDenominationPercentMax returns the DenominationPercentMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetDenominationPercentMax() string {
	if o == nil || IsNil(o.DenominationPercentMax) {
		var ret string
		return ret
	}
	return *o.DenominationPercentMax
}

// GetDenominationPercentMaxOk returns a tuple with the DenominationPercentMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetDenominationPercentMaxOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationPercentMax) {
		return nil, false
	}
	return o.DenominationPercentMax, true
}

// HasDenominationPercentMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasDenominationPercentMax() bool {
	if o != nil && !IsNil(o.DenominationPercentMax) {
		return true
	}

	return false
}

// SetDenominationPercentMax gets a reference to the given string and assigns it to the DenominationPercentMax field.
func (o *RecruitVoucherRule) SetDenominationPercentMax(v string) {
	o.DenominationPercentMax = &v
}

// GetDenominationPercentMin returns the DenominationPercentMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetDenominationPercentMin() string {
	if o == nil || IsNil(o.DenominationPercentMin) {
		var ret string
		return ret
	}
	return *o.DenominationPercentMin
}

// GetDenominationPercentMinOk returns a tuple with the DenominationPercentMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetDenominationPercentMinOk() (*string, bool) {
	if o == nil || IsNil(o.DenominationPercentMin) {
		return nil, false
	}
	return o.DenominationPercentMin, true
}

// HasDenominationPercentMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasDenominationPercentMin() bool {
	if o != nil && !IsNil(o.DenominationPercentMin) {
		return true
	}

	return false
}

// SetDenominationPercentMin gets a reference to the given string and assigns it to the DenominationPercentMin field.
func (o *RecruitVoucherRule) SetDenominationPercentMin(v string) {
	o.DenominationPercentMin = &v
}

// GetFloorAmountMax returns the FloorAmountMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetFloorAmountMax() string {
	if o == nil || IsNil(o.FloorAmountMax) {
		var ret string
		return ret
	}
	return *o.FloorAmountMax
}

// GetFloorAmountMaxOk returns a tuple with the FloorAmountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetFloorAmountMaxOk() (*string, bool) {
	if o == nil || IsNil(o.FloorAmountMax) {
		return nil, false
	}
	return o.FloorAmountMax, true
}

// HasFloorAmountMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasFloorAmountMax() bool {
	if o != nil && !IsNil(o.FloorAmountMax) {
		return true
	}

	return false
}

// SetFloorAmountMax gets a reference to the given string and assigns it to the FloorAmountMax field.
func (o *RecruitVoucherRule) SetFloorAmountMax(v string) {
	o.FloorAmountMax = &v
}

// GetFloorAmountMin returns the FloorAmountMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetFloorAmountMin() string {
	if o == nil || IsNil(o.FloorAmountMin) {
		var ret string
		return ret
	}
	return *o.FloorAmountMin
}

// GetFloorAmountMinOk returns a tuple with the FloorAmountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetFloorAmountMinOk() (*string, bool) {
	if o == nil || IsNil(o.FloorAmountMin) {
		return nil, false
	}
	return o.FloorAmountMin, true
}

// HasFloorAmountMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasFloorAmountMin() bool {
	if o != nil && !IsNil(o.FloorAmountMin) {
		return true
	}

	return false
}

// SetFloorAmountMin gets a reference to the given string and assigns it to the FloorAmountMin field.
func (o *RecruitVoucherRule) SetFloorAmountMin(v string) {
	o.FloorAmountMin = &v
}

// GetOriginAmountMax returns the OriginAmountMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetOriginAmountMax() string {
	if o == nil || IsNil(o.OriginAmountMax) {
		var ret string
		return ret
	}
	return *o.OriginAmountMax
}

// GetOriginAmountMaxOk returns a tuple with the OriginAmountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetOriginAmountMaxOk() (*string, bool) {
	if o == nil || IsNil(o.OriginAmountMax) {
		return nil, false
	}
	return o.OriginAmountMax, true
}

// HasOriginAmountMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasOriginAmountMax() bool {
	if o != nil && !IsNil(o.OriginAmountMax) {
		return true
	}

	return false
}

// SetOriginAmountMax gets a reference to the given string and assigns it to the OriginAmountMax field.
func (o *RecruitVoucherRule) SetOriginAmountMax(v string) {
	o.OriginAmountMax = &v
}

// GetOriginAmountMin returns the OriginAmountMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetOriginAmountMin() string {
	if o == nil || IsNil(o.OriginAmountMin) {
		var ret string
		return ret
	}
	return *o.OriginAmountMin
}

// GetOriginAmountMinOk returns a tuple with the OriginAmountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetOriginAmountMinOk() (*string, bool) {
	if o == nil || IsNil(o.OriginAmountMin) {
		return nil, false
	}
	return o.OriginAmountMin, true
}

// HasOriginAmountMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasOriginAmountMin() bool {
	if o != nil && !IsNil(o.OriginAmountMin) {
		return true
	}

	return false
}

// SetOriginAmountMin gets a reference to the given string and assigns it to the OriginAmountMin field.
func (o *RecruitVoucherRule) SetOriginAmountMin(v string) {
	o.OriginAmountMin = &v
}

// GetPublishEndTimeMax returns the PublishEndTimeMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetPublishEndTimeMax() string {
	if o == nil || IsNil(o.PublishEndTimeMax) {
		var ret string
		return ret
	}
	return *o.PublishEndTimeMax
}

// GetPublishEndTimeMaxOk returns a tuple with the PublishEndTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetPublishEndTimeMaxOk() (*string, bool) {
	if o == nil || IsNil(o.PublishEndTimeMax) {
		return nil, false
	}
	return o.PublishEndTimeMax, true
}

// HasPublishEndTimeMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasPublishEndTimeMax() bool {
	if o != nil && !IsNil(o.PublishEndTimeMax) {
		return true
	}

	return false
}

// SetPublishEndTimeMax gets a reference to the given string and assigns it to the PublishEndTimeMax field.
func (o *RecruitVoucherRule) SetPublishEndTimeMax(v string) {
	o.PublishEndTimeMax = &v
}

// GetPublishEndTimeMin returns the PublishEndTimeMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetPublishEndTimeMin() string {
	if o == nil || IsNil(o.PublishEndTimeMin) {
		var ret string
		return ret
	}
	return *o.PublishEndTimeMin
}

// GetPublishEndTimeMinOk returns a tuple with the PublishEndTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetPublishEndTimeMinOk() (*string, bool) {
	if o == nil || IsNil(o.PublishEndTimeMin) {
		return nil, false
	}
	return o.PublishEndTimeMin, true
}

// HasPublishEndTimeMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasPublishEndTimeMin() bool {
	if o != nil && !IsNil(o.PublishEndTimeMin) {
		return true
	}

	return false
}

// SetPublishEndTimeMin gets a reference to the given string and assigns it to the PublishEndTimeMin field.
func (o *RecruitVoucherRule) SetPublishEndTimeMin(v string) {
	o.PublishEndTimeMin = &v
}

// GetPublishStartTimeMax returns the PublishStartTimeMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetPublishStartTimeMax() string {
	if o == nil || IsNil(o.PublishStartTimeMax) {
		var ret string
		return ret
	}
	return *o.PublishStartTimeMax
}

// GetPublishStartTimeMaxOk returns a tuple with the PublishStartTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetPublishStartTimeMaxOk() (*string, bool) {
	if o == nil || IsNil(o.PublishStartTimeMax) {
		return nil, false
	}
	return o.PublishStartTimeMax, true
}

// HasPublishStartTimeMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasPublishStartTimeMax() bool {
	if o != nil && !IsNil(o.PublishStartTimeMax) {
		return true
	}

	return false
}

// SetPublishStartTimeMax gets a reference to the given string and assigns it to the PublishStartTimeMax field.
func (o *RecruitVoucherRule) SetPublishStartTimeMax(v string) {
	o.PublishStartTimeMax = &v
}

// GetPublishStartTimeMin returns the PublishStartTimeMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetPublishStartTimeMin() string {
	if o == nil || IsNil(o.PublishStartTimeMin) {
		var ret string
		return ret
	}
	return *o.PublishStartTimeMin
}

// GetPublishStartTimeMinOk returns a tuple with the PublishStartTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetPublishStartTimeMinOk() (*string, bool) {
	if o == nil || IsNil(o.PublishStartTimeMin) {
		return nil, false
	}
	return o.PublishStartTimeMin, true
}

// HasPublishStartTimeMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasPublishStartTimeMin() bool {
	if o != nil && !IsNil(o.PublishStartTimeMin) {
		return true
	}

	return false
}

// SetPublishStartTimeMin gets a reference to the given string and assigns it to the PublishStartTimeMin field.
func (o *RecruitVoucherRule) SetPublishStartTimeMin(v string) {
	o.PublishStartTimeMin = &v
}

// GetRefundType returns the RefundType field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetRefundType() []string {
	if o == nil || IsNil(o.RefundType) {
		var ret []string
		return ret
	}
	return o.RefundType
}

// GetRefundTypeOk returns a tuple with the RefundType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetRefundTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.RefundType) {
		return nil, false
	}
	return o.RefundType, true
}

// HasRefundType returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasRefundType() bool {
	if o != nil && !IsNil(o.RefundType) {
		return true
	}

	return false
}

// SetRefundType gets a reference to the given []string and assigns it to the RefundType field.
func (o *RecruitVoucherRule) SetRefundType(v []string) {
	o.RefundType = v
}

// GetSaleAmountMax returns the SaleAmountMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetSaleAmountMax() string {
	if o == nil || IsNil(o.SaleAmountMax) {
		var ret string
		return ret
	}
	return *o.SaleAmountMax
}

// GetSaleAmountMaxOk returns a tuple with the SaleAmountMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetSaleAmountMaxOk() (*string, bool) {
	if o == nil || IsNil(o.SaleAmountMax) {
		return nil, false
	}
	return o.SaleAmountMax, true
}

// HasSaleAmountMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasSaleAmountMax() bool {
	if o != nil && !IsNil(o.SaleAmountMax) {
		return true
	}

	return false
}

// SetSaleAmountMax gets a reference to the given string and assigns it to the SaleAmountMax field.
func (o *RecruitVoucherRule) SetSaleAmountMax(v string) {
	o.SaleAmountMax = &v
}

// GetSaleAmountMin returns the SaleAmountMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetSaleAmountMin() string {
	if o == nil || IsNil(o.SaleAmountMin) {
		var ret string
		return ret
	}
	return *o.SaleAmountMin
}

// GetSaleAmountMinOk returns a tuple with the SaleAmountMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetSaleAmountMinOk() (*string, bool) {
	if o == nil || IsNil(o.SaleAmountMin) {
		return nil, false
	}
	return o.SaleAmountMin, true
}

// HasSaleAmountMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasSaleAmountMin() bool {
	if o != nil && !IsNil(o.SaleAmountMin) {
		return true
	}

	return false
}

// SetSaleAmountMin gets a reference to the given string and assigns it to the SaleAmountMin field.
func (o *RecruitVoucherRule) SetSaleAmountMin(v string) {
	o.SaleAmountMin = &v
}

// GetUseChannel returns the UseChannel field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetUseChannel() []string {
	if o == nil || IsNil(o.UseChannel) {
		var ret []string
		return ret
	}
	return o.UseChannel
}

// GetUseChannelOk returns a tuple with the UseChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetUseChannelOk() ([]string, bool) {
	if o == nil || IsNil(o.UseChannel) {
		return nil, false
	}
	return o.UseChannel, true
}

// HasUseChannel returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasUseChannel() bool {
	if o != nil && !IsNil(o.UseChannel) {
		return true
	}

	return false
}

// SetUseChannel gets a reference to the given []string and assigns it to the UseChannel field.
func (o *RecruitVoucherRule) SetUseChannel(v []string) {
	o.UseChannel = v
}

// GetValidDaysAfterReceiveMin returns the ValidDaysAfterReceiveMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetValidDaysAfterReceiveMin() int32 {
	if o == nil || IsNil(o.ValidDaysAfterReceiveMin) {
		var ret int32
		return ret
	}
	return *o.ValidDaysAfterReceiveMin
}

// GetValidDaysAfterReceiveMinOk returns a tuple with the ValidDaysAfterReceiveMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetValidDaysAfterReceiveMinOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidDaysAfterReceiveMin) {
		return nil, false
	}
	return o.ValidDaysAfterReceiveMin, true
}

// HasValidDaysAfterReceiveMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasValidDaysAfterReceiveMin() bool {
	if o != nil && !IsNil(o.ValidDaysAfterReceiveMin) {
		return true
	}

	return false
}

// SetValidDaysAfterReceiveMin gets a reference to the given int32 and assigns it to the ValidDaysAfterReceiveMin field.
func (o *RecruitVoucherRule) SetValidDaysAfterReceiveMin(v int32) {
	o.ValidDaysAfterReceiveMin = &v
}

// GetVoucherActivityType returns the VoucherActivityType field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherActivityType() string {
	if o == nil || IsNil(o.VoucherActivityType) {
		var ret string
		return ret
	}
	return *o.VoucherActivityType
}

// GetVoucherActivityTypeOk returns a tuple with the VoucherActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherActivityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherActivityType) {
		return nil, false
	}
	return o.VoucherActivityType, true
}

// HasVoucherActivityType returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherActivityType() bool {
	if o != nil && !IsNil(o.VoucherActivityType) {
		return true
	}

	return false
}

// SetVoucherActivityType gets a reference to the given string and assigns it to the VoucherActivityType field.
func (o *RecruitVoucherRule) SetVoucherActivityType(v string) {
	o.VoucherActivityType = &v
}

// GetVoucherQuantityLimitPerUserMax returns the VoucherQuantityLimitPerUserMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherQuantityLimitPerUserMax() int32 {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUserMax) {
		var ret int32
		return ret
	}
	return *o.VoucherQuantityLimitPerUserMax
}

// GetVoucherQuantityLimitPerUserMaxOk returns a tuple with the VoucherQuantityLimitPerUserMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherQuantityLimitPerUserMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUserMax) {
		return nil, false
	}
	return o.VoucherQuantityLimitPerUserMax, true
}

// HasVoucherQuantityLimitPerUserMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherQuantityLimitPerUserMax() bool {
	if o != nil && !IsNil(o.VoucherQuantityLimitPerUserMax) {
		return true
	}

	return false
}

// SetVoucherQuantityLimitPerUserMax gets a reference to the given int32 and assigns it to the VoucherQuantityLimitPerUserMax field.
func (o *RecruitVoucherRule) SetVoucherQuantityLimitPerUserMax(v int32) {
	o.VoucherQuantityLimitPerUserMax = &v
}

// GetVoucherQuantityLimitPerUserMin returns the VoucherQuantityLimitPerUserMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherQuantityLimitPerUserMin() int32 {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUserMin) {
		var ret int32
		return ret
	}
	return *o.VoucherQuantityLimitPerUserMin
}

// GetVoucherQuantityLimitPerUserMinOk returns a tuple with the VoucherQuantityLimitPerUserMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherQuantityLimitPerUserMinOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUserMin) {
		return nil, false
	}
	return o.VoucherQuantityLimitPerUserMin, true
}

// HasVoucherQuantityLimitPerUserMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherQuantityLimitPerUserMin() bool {
	if o != nil && !IsNil(o.VoucherQuantityLimitPerUserMin) {
		return true
	}

	return false
}

// SetVoucherQuantityLimitPerUserMin gets a reference to the given int32 and assigns it to the VoucherQuantityLimitPerUserMin field.
func (o *RecruitVoucherRule) SetVoucherQuantityLimitPerUserMin(v int32) {
	o.VoucherQuantityLimitPerUserMin = &v
}

// GetVoucherQuantityMax returns the VoucherQuantityMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherQuantityMax() int32 {
	if o == nil || IsNil(o.VoucherQuantityMax) {
		var ret int32
		return ret
	}
	return *o.VoucherQuantityMax
}

// GetVoucherQuantityMaxOk returns a tuple with the VoucherQuantityMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherQuantityMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherQuantityMax) {
		return nil, false
	}
	return o.VoucherQuantityMax, true
}

// HasVoucherQuantityMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherQuantityMax() bool {
	if o != nil && !IsNil(o.VoucherQuantityMax) {
		return true
	}

	return false
}

// SetVoucherQuantityMax gets a reference to the given int32 and assigns it to the VoucherQuantityMax field.
func (o *RecruitVoucherRule) SetVoucherQuantityMax(v int32) {
	o.VoucherQuantityMax = &v
}

// GetVoucherQuantityMin returns the VoucherQuantityMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherQuantityMin() int32 {
	if o == nil || IsNil(o.VoucherQuantityMin) {
		var ret int32
		return ret
	}
	return *o.VoucherQuantityMin
}

// GetVoucherQuantityMinOk returns a tuple with the VoucherQuantityMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherQuantityMinOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherQuantityMin) {
		return nil, false
	}
	return o.VoucherQuantityMin, true
}

// HasVoucherQuantityMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherQuantityMin() bool {
	if o != nil && !IsNil(o.VoucherQuantityMin) {
		return true
	}

	return false
}

// SetVoucherQuantityMin gets a reference to the given int32 and assigns it to the VoucherQuantityMin field.
func (o *RecruitVoucherRule) SetVoucherQuantityMin(v int32) {
	o.VoucherQuantityMin = &v
}

// GetVoucherValidBeginTimeMin returns the VoucherValidBeginTimeMin field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherValidBeginTimeMin() string {
	if o == nil || IsNil(o.VoucherValidBeginTimeMin) {
		var ret string
		return ret
	}
	return *o.VoucherValidBeginTimeMin
}

// GetVoucherValidBeginTimeMinOk returns a tuple with the VoucherValidBeginTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherValidBeginTimeMinOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherValidBeginTimeMin) {
		return nil, false
	}
	return o.VoucherValidBeginTimeMin, true
}

// HasVoucherValidBeginTimeMin returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherValidBeginTimeMin() bool {
	if o != nil && !IsNil(o.VoucherValidBeginTimeMin) {
		return true
	}

	return false
}

// SetVoucherValidBeginTimeMin gets a reference to the given string and assigns it to the VoucherValidBeginTimeMin field.
func (o *RecruitVoucherRule) SetVoucherValidBeginTimeMin(v string) {
	o.VoucherValidBeginTimeMin = &v
}

// GetVoucherValidEndTimeMax returns the VoucherValidEndTimeMax field value if set, zero value otherwise.
func (o *RecruitVoucherRule) GetVoucherValidEndTimeMax() string {
	if o == nil || IsNil(o.VoucherValidEndTimeMax) {
		var ret string
		return ret
	}
	return *o.VoucherValidEndTimeMax
}

// GetVoucherValidEndTimeMaxOk returns a tuple with the VoucherValidEndTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitVoucherRule) GetVoucherValidEndTimeMaxOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherValidEndTimeMax) {
		return nil, false
	}
	return o.VoucherValidEndTimeMax, true
}

// HasVoucherValidEndTimeMax returns a boolean if a field has been set.
func (o *RecruitVoucherRule) HasVoucherValidEndTimeMax() bool {
	if o != nil && !IsNil(o.VoucherValidEndTimeMax) {
		return true
	}

	return false
}

// SetVoucherValidEndTimeMax gets a reference to the given string and assigns it to the VoucherValidEndTimeMax field.
func (o *RecruitVoucherRule) SetVoucherValidEndTimeMax(v string) {
	o.VoucherValidEndTimeMax = &v
}

func (o RecruitVoucherRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecruitVoucherRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmountMax) {
		toSerialize["amount_max"] = o.AmountMax
	}
	if !IsNil(o.AmountMin) {
		toSerialize["amount_min"] = o.AmountMin
	}
	if !IsNil(o.DenominationPercentMax) {
		toSerialize["denomination_percent_max"] = o.DenominationPercentMax
	}
	if !IsNil(o.DenominationPercentMin) {
		toSerialize["denomination_percent_min"] = o.DenominationPercentMin
	}
	if !IsNil(o.FloorAmountMax) {
		toSerialize["floor_amount_max"] = o.FloorAmountMax
	}
	if !IsNil(o.FloorAmountMin) {
		toSerialize["floor_amount_min"] = o.FloorAmountMin
	}
	if !IsNil(o.OriginAmountMax) {
		toSerialize["origin_amount_max"] = o.OriginAmountMax
	}
	if !IsNil(o.OriginAmountMin) {
		toSerialize["origin_amount_min"] = o.OriginAmountMin
	}
	if !IsNil(o.PublishEndTimeMax) {
		toSerialize["publish_end_time_max"] = o.PublishEndTimeMax
	}
	if !IsNil(o.PublishEndTimeMin) {
		toSerialize["publish_end_time_min"] = o.PublishEndTimeMin
	}
	if !IsNil(o.PublishStartTimeMax) {
		toSerialize["publish_start_time_max"] = o.PublishStartTimeMax
	}
	if !IsNil(o.PublishStartTimeMin) {
		toSerialize["publish_start_time_min"] = o.PublishStartTimeMin
	}
	if !IsNil(o.RefundType) {
		toSerialize["refund_type"] = o.RefundType
	}
	if !IsNil(o.SaleAmountMax) {
		toSerialize["sale_amount_max"] = o.SaleAmountMax
	}
	if !IsNil(o.SaleAmountMin) {
		toSerialize["sale_amount_min"] = o.SaleAmountMin
	}
	if !IsNil(o.UseChannel) {
		toSerialize["use_channel"] = o.UseChannel
	}
	if !IsNil(o.ValidDaysAfterReceiveMin) {
		toSerialize["valid_days_after_receive_min"] = o.ValidDaysAfterReceiveMin
	}
	if !IsNil(o.VoucherActivityType) {
		toSerialize["voucher_activity_type"] = o.VoucherActivityType
	}
	if !IsNil(o.VoucherQuantityLimitPerUserMax) {
		toSerialize["voucher_quantity_limit_per_user_max"] = o.VoucherQuantityLimitPerUserMax
	}
	if !IsNil(o.VoucherQuantityLimitPerUserMin) {
		toSerialize["voucher_quantity_limit_per_user_min"] = o.VoucherQuantityLimitPerUserMin
	}
	if !IsNil(o.VoucherQuantityMax) {
		toSerialize["voucher_quantity_max"] = o.VoucherQuantityMax
	}
	if !IsNil(o.VoucherQuantityMin) {
		toSerialize["voucher_quantity_min"] = o.VoucherQuantityMin
	}
	if !IsNil(o.VoucherValidBeginTimeMin) {
		toSerialize["voucher_valid_begin_time_min"] = o.VoucherValidBeginTimeMin
	}
	if !IsNil(o.VoucherValidEndTimeMax) {
		toSerialize["voucher_valid_end_time_max"] = o.VoucherValidEndTimeMax
	}
	return toSerialize, nil
}

type NullableRecruitVoucherRule struct {
	value *RecruitVoucherRule
	isSet bool
}

func (v NullableRecruitVoucherRule) Get() *RecruitVoucherRule {
	return v.value
}

func (v *NullableRecruitVoucherRule) Set(val *RecruitVoucherRule) {
	v.value = val
	v.isSet = true
}

func (v NullableRecruitVoucherRule) IsSet() bool {
	return v.isSet
}

func (v *NullableRecruitVoucherRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecruitVoucherRule(val *RecruitVoucherRule) *NullableRecruitVoucherRule {
	return &NullableRecruitVoucherRule{value: val, isSet: true}
}

func (v NullableRecruitVoucherRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecruitVoucherRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



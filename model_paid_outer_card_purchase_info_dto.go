/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaidOuterCardPurchaseInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaidOuterCardPurchaseInfoDTO{}

// PaidOuterCardPurchaseInfoDTO struct for PaidOuterCardPurchaseInfoDTO
type PaidOuterCardPurchaseInfoDTO struct {
	// 用户购买、升级、降级、续费的操作时间。格式为：yyyy-MM-dd hh:mm:ss
	ActionDate *string `json:"action_date,omitempty"`
	// 支付宝交易号，由api: alipay.trade.create 返回
	AlipayTradeNo *string `json:"alipay_trade_no,omitempty"`
	// 商户订单号。与创建订单api：alipay.trade.create保持一致
	OutTradeNo *string `json:"out_trade_no,omitempty"`
	// 用户购买金额。当购买/升级/续费场景必填，单位元，精确到小数点后2位
	Price *string `json:"price,omitempty"`
	// 用户操作来源
	Source *string `json:"source,omitempty"`
}

// NewPaidOuterCardPurchaseInfoDTO instantiates a new PaidOuterCardPurchaseInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaidOuterCardPurchaseInfoDTO() *PaidOuterCardPurchaseInfoDTO {
	this := PaidOuterCardPurchaseInfoDTO{}
	return &this
}

// NewPaidOuterCardPurchaseInfoDTOWithDefaults instantiates a new PaidOuterCardPurchaseInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaidOuterCardPurchaseInfoDTOWithDefaults() *PaidOuterCardPurchaseInfoDTO {
	this := PaidOuterCardPurchaseInfoDTO{}
	return &this
}

// GetActionDate returns the ActionDate field value if set, zero value otherwise.
func (o *PaidOuterCardPurchaseInfoDTO) GetActionDate() string {
	if o == nil || IsNil(o.ActionDate) {
		var ret string
		return ret
	}
	return *o.ActionDate
}

// GetActionDateOk returns a tuple with the ActionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPurchaseInfoDTO) GetActionDateOk() (*string, bool) {
	if o == nil || IsNil(o.ActionDate) {
		return nil, false
	}
	return o.ActionDate, true
}

// HasActionDate returns a boolean if a field has been set.
func (o *PaidOuterCardPurchaseInfoDTO) HasActionDate() bool {
	if o != nil && !IsNil(o.ActionDate) {
		return true
	}

	return false
}

// SetActionDate gets a reference to the given string and assigns it to the ActionDate field.
func (o *PaidOuterCardPurchaseInfoDTO) SetActionDate(v string) {
	o.ActionDate = &v
}

// GetAlipayTradeNo returns the AlipayTradeNo field value if set, zero value otherwise.
func (o *PaidOuterCardPurchaseInfoDTO) GetAlipayTradeNo() string {
	if o == nil || IsNil(o.AlipayTradeNo) {
		var ret string
		return ret
	}
	return *o.AlipayTradeNo
}

// GetAlipayTradeNoOk returns a tuple with the AlipayTradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPurchaseInfoDTO) GetAlipayTradeNoOk() (*string, bool) {
	if o == nil || IsNil(o.AlipayTradeNo) {
		return nil, false
	}
	return o.AlipayTradeNo, true
}

// HasAlipayTradeNo returns a boolean if a field has been set.
func (o *PaidOuterCardPurchaseInfoDTO) HasAlipayTradeNo() bool {
	if o != nil && !IsNil(o.AlipayTradeNo) {
		return true
	}

	return false
}

// SetAlipayTradeNo gets a reference to the given string and assigns it to the AlipayTradeNo field.
func (o *PaidOuterCardPurchaseInfoDTO) SetAlipayTradeNo(v string) {
	o.AlipayTradeNo = &v
}

// GetOutTradeNo returns the OutTradeNo field value if set, zero value otherwise.
func (o *PaidOuterCardPurchaseInfoDTO) GetOutTradeNo() string {
	if o == nil || IsNil(o.OutTradeNo) {
		var ret string
		return ret
	}
	return *o.OutTradeNo
}

// GetOutTradeNoOk returns a tuple with the OutTradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPurchaseInfoDTO) GetOutTradeNoOk() (*string, bool) {
	if o == nil || IsNil(o.OutTradeNo) {
		return nil, false
	}
	return o.OutTradeNo, true
}

// HasOutTradeNo returns a boolean if a field has been set.
func (o *PaidOuterCardPurchaseInfoDTO) HasOutTradeNo() bool {
	if o != nil && !IsNil(o.OutTradeNo) {
		return true
	}

	return false
}

// SetOutTradeNo gets a reference to the given string and assigns it to the OutTradeNo field.
func (o *PaidOuterCardPurchaseInfoDTO) SetOutTradeNo(v string) {
	o.OutTradeNo = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PaidOuterCardPurchaseInfoDTO) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPurchaseInfoDTO) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PaidOuterCardPurchaseInfoDTO) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *PaidOuterCardPurchaseInfoDTO) SetPrice(v string) {
	o.Price = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PaidOuterCardPurchaseInfoDTO) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPurchaseInfoDTO) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PaidOuterCardPurchaseInfoDTO) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *PaidOuterCardPurchaseInfoDTO) SetSource(v string) {
	o.Source = &v
}

func (o PaidOuterCardPurchaseInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaidOuterCardPurchaseInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionDate) {
		toSerialize["action_date"] = o.ActionDate
	}
	if !IsNil(o.AlipayTradeNo) {
		toSerialize["alipay_trade_no"] = o.AlipayTradeNo
	}
	if !IsNil(o.OutTradeNo) {
		toSerialize["out_trade_no"] = o.OutTradeNo
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullablePaidOuterCardPurchaseInfoDTO struct {
	value *PaidOuterCardPurchaseInfoDTO
	isSet bool
}

func (v NullablePaidOuterCardPurchaseInfoDTO) Get() *PaidOuterCardPurchaseInfoDTO {
	return v.value
}

func (v *NullablePaidOuterCardPurchaseInfoDTO) Set(val *PaidOuterCardPurchaseInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePaidOuterCardPurchaseInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePaidOuterCardPurchaseInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaidOuterCardPurchaseInfoDTO(val *PaidOuterCardPurchaseInfoDTO) *NullablePaidOuterCardPurchaseInfoDTO {
	return &NullablePaidOuterCardPurchaseInfoDTO{value: val, isSet: true}
}

func (v NullablePaidOuterCardPurchaseInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaidOuterCardPurchaseInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



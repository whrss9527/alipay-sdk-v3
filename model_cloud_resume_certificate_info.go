/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloudResumeCertificateInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudResumeCertificateInfo{}

// CloudResumeCertificateInfo struct for CloudResumeCertificateInfo
type CloudResumeCertificateInfo struct {
	// 证书等级
	CertificateCertLevel *string `json:"certificate_cert_level,omitempty"`
	// 证书名称
	CertificateName *string `json:"certificate_name,omitempty"`
	// 发证机构
	CertificateSendCardAddress *string `json:"certificate_send_card_address,omitempty"`
	// UNPROMISED=未承诺 PROMISED=已承诺 VERFIED=已验真 UNVERIFIED=验证未通过
	CertificateVerifyStatus *string `json:"certificate_verify_status,omitempty"`
	// VALID=有效 INVALID=失效 UNKNOWN=未知
	InValidityPeriod *string `json:"in_validity_period,omitempty"`
}

// NewCloudResumeCertificateInfo instantiates a new CloudResumeCertificateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudResumeCertificateInfo() *CloudResumeCertificateInfo {
	this := CloudResumeCertificateInfo{}
	return &this
}

// NewCloudResumeCertificateInfoWithDefaults instantiates a new CloudResumeCertificateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudResumeCertificateInfoWithDefaults() *CloudResumeCertificateInfo {
	this := CloudResumeCertificateInfo{}
	return &this
}

// GetCertificateCertLevel returns the CertificateCertLevel field value if set, zero value otherwise.
func (o *CloudResumeCertificateInfo) GetCertificateCertLevel() string {
	if o == nil || IsNil(o.CertificateCertLevel) {
		var ret string
		return ret
	}
	return *o.CertificateCertLevel
}

// GetCertificateCertLevelOk returns a tuple with the CertificateCertLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResumeCertificateInfo) GetCertificateCertLevelOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateCertLevel) {
		return nil, false
	}
	return o.CertificateCertLevel, true
}

// HasCertificateCertLevel returns a boolean if a field has been set.
func (o *CloudResumeCertificateInfo) HasCertificateCertLevel() bool {
	if o != nil && !IsNil(o.CertificateCertLevel) {
		return true
	}

	return false
}

// SetCertificateCertLevel gets a reference to the given string and assigns it to the CertificateCertLevel field.
func (o *CloudResumeCertificateInfo) SetCertificateCertLevel(v string) {
	o.CertificateCertLevel = &v
}

// GetCertificateName returns the CertificateName field value if set, zero value otherwise.
func (o *CloudResumeCertificateInfo) GetCertificateName() string {
	if o == nil || IsNil(o.CertificateName) {
		var ret string
		return ret
	}
	return *o.CertificateName
}

// GetCertificateNameOk returns a tuple with the CertificateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResumeCertificateInfo) GetCertificateNameOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateName) {
		return nil, false
	}
	return o.CertificateName, true
}

// HasCertificateName returns a boolean if a field has been set.
func (o *CloudResumeCertificateInfo) HasCertificateName() bool {
	if o != nil && !IsNil(o.CertificateName) {
		return true
	}

	return false
}

// SetCertificateName gets a reference to the given string and assigns it to the CertificateName field.
func (o *CloudResumeCertificateInfo) SetCertificateName(v string) {
	o.CertificateName = &v
}

// GetCertificateSendCardAddress returns the CertificateSendCardAddress field value if set, zero value otherwise.
func (o *CloudResumeCertificateInfo) GetCertificateSendCardAddress() string {
	if o == nil || IsNil(o.CertificateSendCardAddress) {
		var ret string
		return ret
	}
	return *o.CertificateSendCardAddress
}

// GetCertificateSendCardAddressOk returns a tuple with the CertificateSendCardAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResumeCertificateInfo) GetCertificateSendCardAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateSendCardAddress) {
		return nil, false
	}
	return o.CertificateSendCardAddress, true
}

// HasCertificateSendCardAddress returns a boolean if a field has been set.
func (o *CloudResumeCertificateInfo) HasCertificateSendCardAddress() bool {
	if o != nil && !IsNil(o.CertificateSendCardAddress) {
		return true
	}

	return false
}

// SetCertificateSendCardAddress gets a reference to the given string and assigns it to the CertificateSendCardAddress field.
func (o *CloudResumeCertificateInfo) SetCertificateSendCardAddress(v string) {
	o.CertificateSendCardAddress = &v
}

// GetCertificateVerifyStatus returns the CertificateVerifyStatus field value if set, zero value otherwise.
func (o *CloudResumeCertificateInfo) GetCertificateVerifyStatus() string {
	if o == nil || IsNil(o.CertificateVerifyStatus) {
		var ret string
		return ret
	}
	return *o.CertificateVerifyStatus
}

// GetCertificateVerifyStatusOk returns a tuple with the CertificateVerifyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResumeCertificateInfo) GetCertificateVerifyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateVerifyStatus) {
		return nil, false
	}
	return o.CertificateVerifyStatus, true
}

// HasCertificateVerifyStatus returns a boolean if a field has been set.
func (o *CloudResumeCertificateInfo) HasCertificateVerifyStatus() bool {
	if o != nil && !IsNil(o.CertificateVerifyStatus) {
		return true
	}

	return false
}

// SetCertificateVerifyStatus gets a reference to the given string and assigns it to the CertificateVerifyStatus field.
func (o *CloudResumeCertificateInfo) SetCertificateVerifyStatus(v string) {
	o.CertificateVerifyStatus = &v
}

// GetInValidityPeriod returns the InValidityPeriod field value if set, zero value otherwise.
func (o *CloudResumeCertificateInfo) GetInValidityPeriod() string {
	if o == nil || IsNil(o.InValidityPeriod) {
		var ret string
		return ret
	}
	return *o.InValidityPeriod
}

// GetInValidityPeriodOk returns a tuple with the InValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResumeCertificateInfo) GetInValidityPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.InValidityPeriod) {
		return nil, false
	}
	return o.InValidityPeriod, true
}

// HasInValidityPeriod returns a boolean if a field has been set.
func (o *CloudResumeCertificateInfo) HasInValidityPeriod() bool {
	if o != nil && !IsNil(o.InValidityPeriod) {
		return true
	}

	return false
}

// SetInValidityPeriod gets a reference to the given string and assigns it to the InValidityPeriod field.
func (o *CloudResumeCertificateInfo) SetInValidityPeriod(v string) {
	o.InValidityPeriod = &v
}

func (o CloudResumeCertificateInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudResumeCertificateInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificateCertLevel) {
		toSerialize["certificate_cert_level"] = o.CertificateCertLevel
	}
	if !IsNil(o.CertificateName) {
		toSerialize["certificate_name"] = o.CertificateName
	}
	if !IsNil(o.CertificateSendCardAddress) {
		toSerialize["certificate_send_card_address"] = o.CertificateSendCardAddress
	}
	if !IsNil(o.CertificateVerifyStatus) {
		toSerialize["certificate_verify_status"] = o.CertificateVerifyStatus
	}
	if !IsNil(o.InValidityPeriod) {
		toSerialize["in_validity_period"] = o.InValidityPeriod
	}
	return toSerialize, nil
}

type NullableCloudResumeCertificateInfo struct {
	value *CloudResumeCertificateInfo
	isSet bool
}

func (v NullableCloudResumeCertificateInfo) Get() *CloudResumeCertificateInfo {
	return v.value
}

func (v *NullableCloudResumeCertificateInfo) Set(val *CloudResumeCertificateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudResumeCertificateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudResumeCertificateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudResumeCertificateInfo(val *CloudResumeCertificateInfo) *NullableCloudResumeCertificateInfo {
	return &NullableCloudResumeCertificateInfo{value: val, isSet: true}
}

func (v NullableCloudResumeCertificateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudResumeCertificateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



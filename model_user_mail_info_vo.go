/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserMailInfoVO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserMailInfoVO{}

// UserMailInfoVO struct for UserMailInfoVO
type UserMailInfoVO struct {
	// 收件人地址
	Address *string `json:"address,omitempty"`
	// 城市
	City *string `json:"city,omitempty"`
	// 国家
	Country *string `json:"country,omitempty"`
	// 县区
	CountyDistrict *string `json:"county_district,omitempty"`
	// 详细地址
	DetailAddress *string `json:"detail_address,omitempty"`
	// 邮件人的电子邮箱
	Email *string `json:"email,omitempty"`
	// 创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 修改时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 收件人信息ID
	Id *string `json:"id,omitempty"`
	// 收件人姓名
	Name *string `json:"name,omitempty"`
	// pid用于指定该地址归属的PID，应对集团模式的商户所设定,发票邮寄地址根据PID确定
	Pid *string `json:"pid,omitempty"`
	// 省份
	Province *string `json:"province,omitempty"`
	// 街道
	Street *string `json:"street,omitempty"`
	// 收件人电话
	Telephone *string `json:"telephone,omitempty"`
}

// NewUserMailInfoVO instantiates a new UserMailInfoVO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserMailInfoVO() *UserMailInfoVO {
	this := UserMailInfoVO{}
	return &this
}

// NewUserMailInfoVOWithDefaults instantiates a new UserMailInfoVO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserMailInfoVOWithDefaults() *UserMailInfoVO {
	this := UserMailInfoVO{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *UserMailInfoVO) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *UserMailInfoVO) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *UserMailInfoVO) SetCountry(v string) {
	o.Country = &v
}

// GetCountyDistrict returns the CountyDistrict field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetCountyDistrict() string {
	if o == nil || IsNil(o.CountyDistrict) {
		var ret string
		return ret
	}
	return *o.CountyDistrict
}

// GetCountyDistrictOk returns a tuple with the CountyDistrict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetCountyDistrictOk() (*string, bool) {
	if o == nil || IsNil(o.CountyDistrict) {
		return nil, false
	}
	return o.CountyDistrict, true
}

// HasCountyDistrict returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasCountyDistrict() bool {
	if o != nil && !IsNil(o.CountyDistrict) {
		return true
	}

	return false
}

// SetCountyDistrict gets a reference to the given string and assigns it to the CountyDistrict field.
func (o *UserMailInfoVO) SetCountyDistrict(v string) {
	o.CountyDistrict = &v
}

// GetDetailAddress returns the DetailAddress field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetDetailAddress() string {
	if o == nil || IsNil(o.DetailAddress) {
		var ret string
		return ret
	}
	return *o.DetailAddress
}

// GetDetailAddressOk returns a tuple with the DetailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetDetailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.DetailAddress) {
		return nil, false
	}
	return o.DetailAddress, true
}

// HasDetailAddress returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasDetailAddress() bool {
	if o != nil && !IsNil(o.DetailAddress) {
		return true
	}

	return false
}

// SetDetailAddress gets a reference to the given string and assigns it to the DetailAddress field.
func (o *UserMailInfoVO) SetDetailAddress(v string) {
	o.DetailAddress = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserMailInfoVO) SetEmail(v string) {
	o.Email = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *UserMailInfoVO) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *UserMailInfoVO) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserMailInfoVO) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserMailInfoVO) SetName(v string) {
	o.Name = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetPid() string {
	if o == nil || IsNil(o.Pid) {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetPidOk() (*string, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *UserMailInfoVO) SetPid(v string) {
	o.Pid = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetProvince() string {
	if o == nil || IsNil(o.Province) {
		var ret string
		return ret
	}
	return *o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetProvinceOk() (*string, bool) {
	if o == nil || IsNil(o.Province) {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasProvince() bool {
	if o != nil && !IsNil(o.Province) {
		return true
	}

	return false
}

// SetProvince gets a reference to the given string and assigns it to the Province field.
func (o *UserMailInfoVO) SetProvince(v string) {
	o.Province = &v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetStreet() string {
	if o == nil || IsNil(o.Street) {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetStreetOk() (*string, bool) {
	if o == nil || IsNil(o.Street) {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasStreet() bool {
	if o != nil && !IsNil(o.Street) {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *UserMailInfoVO) SetStreet(v string) {
	o.Street = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *UserMailInfoVO) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMailInfoVO) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *UserMailInfoVO) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *UserMailInfoVO) SetTelephone(v string) {
	o.Telephone = &v
}

func (o UserMailInfoVO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserMailInfoVO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.CountyDistrict) {
		toSerialize["county_district"] = o.CountyDistrict
	}
	if !IsNil(o.DetailAddress) {
		toSerialize["detail_address"] = o.DetailAddress
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.Province) {
		toSerialize["province"] = o.Province
	}
	if !IsNil(o.Street) {
		toSerialize["street"] = o.Street
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	return toSerialize, nil
}

type NullableUserMailInfoVO struct {
	value *UserMailInfoVO
	isSet bool
}

func (v NullableUserMailInfoVO) Get() *UserMailInfoVO {
	return v.value
}

func (v *NullableUserMailInfoVO) Set(val *UserMailInfoVO) {
	v.value = val
	v.isSet = true
}

func (v NullableUserMailInfoVO) IsSet() bool {
	return v.isSet
}

func (v *NullableUserMailInfoVO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserMailInfoVO(val *UserMailInfoVO) *NullableUserMailInfoVO {
	return &NullableUserMailInfoVO{value: val, isSet: true}
}

func (v NullableUserMailInfoVO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserMailInfoVO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



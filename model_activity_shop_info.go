/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ActivityShopInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityShopInfo{}

// ActivityShopInfo struct for ActivityShopInfo
type ActivityShopInfo struct {
	// 纬度，浮点型,小数点后最多保留6位
	Latitude *string `json:"latitude,omitempty"`
	// 经度，浮点型, 小数点后最多保留6位。
	Longitude *string `json:"longitude,omitempty"`
	// 支付宝侧蚂蚁店铺 id。
	ShopId *string `json:"shop_id,omitempty"`
	// 店铺名称。
	ShopName *string `json:"shop_name,omitempty"`
	// 门店类型 PAYMENT_SHOP 支付门店 REAL_SHOP 代运营商业关系门店
	ShopType *string `json:"shop_type,omitempty"`
}

// NewActivityShopInfo instantiates a new ActivityShopInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityShopInfo() *ActivityShopInfo {
	this := ActivityShopInfo{}
	return &this
}

// NewActivityShopInfoWithDefaults instantiates a new ActivityShopInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityShopInfoWithDefaults() *ActivityShopInfo {
	this := ActivityShopInfo{}
	return &this
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *ActivityShopInfo) GetLatitude() string {
	if o == nil || IsNil(o.Latitude) {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityShopInfo) GetLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *ActivityShopInfo) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *ActivityShopInfo) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *ActivityShopInfo) GetLongitude() string {
	if o == nil || IsNil(o.Longitude) {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityShopInfo) GetLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *ActivityShopInfo) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *ActivityShopInfo) SetLongitude(v string) {
	o.Longitude = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ActivityShopInfo) GetShopId() string {
	if o == nil || IsNil(o.ShopId) {
		var ret string
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityShopInfo) GetShopIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ActivityShopInfo) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given string and assigns it to the ShopId field.
func (o *ActivityShopInfo) SetShopId(v string) {
	o.ShopId = &v
}

// GetShopName returns the ShopName field value if set, zero value otherwise.
func (o *ActivityShopInfo) GetShopName() string {
	if o == nil || IsNil(o.ShopName) {
		var ret string
		return ret
	}
	return *o.ShopName
}

// GetShopNameOk returns a tuple with the ShopName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityShopInfo) GetShopNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopName) {
		return nil, false
	}
	return o.ShopName, true
}

// HasShopName returns a boolean if a field has been set.
func (o *ActivityShopInfo) HasShopName() bool {
	if o != nil && !IsNil(o.ShopName) {
		return true
	}

	return false
}

// SetShopName gets a reference to the given string and assigns it to the ShopName field.
func (o *ActivityShopInfo) SetShopName(v string) {
	o.ShopName = &v
}

// GetShopType returns the ShopType field value if set, zero value otherwise.
func (o *ActivityShopInfo) GetShopType() string {
	if o == nil || IsNil(o.ShopType) {
		var ret string
		return ret
	}
	return *o.ShopType
}

// GetShopTypeOk returns a tuple with the ShopType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityShopInfo) GetShopTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ShopType) {
		return nil, false
	}
	return o.ShopType, true
}

// HasShopType returns a boolean if a field has been set.
func (o *ActivityShopInfo) HasShopType() bool {
	if o != nil && !IsNil(o.ShopType) {
		return true
	}

	return false
}

// SetShopType gets a reference to the given string and assigns it to the ShopType field.
func (o *ActivityShopInfo) SetShopType(v string) {
	o.ShopType = &v
}

func (o ActivityShopInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityShopInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.ShopName) {
		toSerialize["shop_name"] = o.ShopName
	}
	if !IsNil(o.ShopType) {
		toSerialize["shop_type"] = o.ShopType
	}
	return toSerialize, nil
}

type NullableActivityShopInfo struct {
	value *ActivityShopInfo
	isSet bool
}

func (v NullableActivityShopInfo) Get() *ActivityShopInfo {
	return v.value
}

func (v *NullableActivityShopInfo) Set(val *ActivityShopInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityShopInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityShopInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityShopInfo(val *ActivityShopInfo) *NullableActivityShopInfo {
	return &NullableActivityShopInfo{value: val, isSet: true}
}

func (v NullableActivityShopInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityShopInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateFormConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateFormConfig{}

// TemplateFormConfig struct for TemplateFormConfig
type TemplateFormConfig struct {
	Fields *TemplateFormFields `json:"fields,omitempty"`
	// 入会时承接入会弹层的小程序appId
	OpenCardMiniAppId *string `json:"open_card_mini_app_id,omitempty"`
}

// NewTemplateFormConfig instantiates a new TemplateFormConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateFormConfig() *TemplateFormConfig {
	this := TemplateFormConfig{}
	return &this
}

// NewTemplateFormConfigWithDefaults instantiates a new TemplateFormConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateFormConfigWithDefaults() *TemplateFormConfig {
	this := TemplateFormConfig{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *TemplateFormConfig) GetFields() TemplateFormFields {
	if o == nil || IsNil(o.Fields) {
		var ret TemplateFormFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFormConfig) GetFieldsOk() (*TemplateFormFields, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *TemplateFormConfig) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given TemplateFormFields and assigns it to the Fields field.
func (o *TemplateFormConfig) SetFields(v TemplateFormFields) {
	o.Fields = &v
}

// GetOpenCardMiniAppId returns the OpenCardMiniAppId field value if set, zero value otherwise.
func (o *TemplateFormConfig) GetOpenCardMiniAppId() string {
	if o == nil || IsNil(o.OpenCardMiniAppId) {
		var ret string
		return ret
	}
	return *o.OpenCardMiniAppId
}

// GetOpenCardMiniAppIdOk returns a tuple with the OpenCardMiniAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFormConfig) GetOpenCardMiniAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenCardMiniAppId) {
		return nil, false
	}
	return o.OpenCardMiniAppId, true
}

// HasOpenCardMiniAppId returns a boolean if a field has been set.
func (o *TemplateFormConfig) HasOpenCardMiniAppId() bool {
	if o != nil && !IsNil(o.OpenCardMiniAppId) {
		return true
	}

	return false
}

// SetOpenCardMiniAppId gets a reference to the given string and assigns it to the OpenCardMiniAppId field.
func (o *TemplateFormConfig) SetOpenCardMiniAppId(v string) {
	o.OpenCardMiniAppId = &v
}

func (o TemplateFormConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateFormConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.OpenCardMiniAppId) {
		toSerialize["open_card_mini_app_id"] = o.OpenCardMiniAppId
	}
	return toSerialize, nil
}

type NullableTemplateFormConfig struct {
	value *TemplateFormConfig
	isSet bool
}

func (v NullableTemplateFormConfig) Get() *TemplateFormConfig {
	return v.value
}

func (v *NullableTemplateFormConfig) Set(val *TemplateFormConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateFormConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateFormConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateFormConfig(val *TemplateFormConfig) *NullableTemplateFormConfig {
	return &NullableTemplateFormConfig{value: val, isSet: true}
}

func (v NullableTemplateFormConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateFormConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoucherGoodsQuantitySpecificationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherGoodsQuantitySpecificationInfo{}

// VoucherGoodsQuantitySpecificationInfo struct for VoucherGoodsQuantitySpecificationInfo
type VoucherGoodsQuantitySpecificationInfo struct {
	// 定向类型用于规格设置，比如：FIX 表示 固定满X件，APPOINT 表示指定第N件
	DirectionalType *string `json:"directional_type,omitempty"`
	// 数量
	SpecificationQuantity *int32 `json:"specification_quantity,omitempty"`
	// 单位
	SpecificationUnit *string `json:"specification_unit,omitempty"`
}

// NewVoucherGoodsQuantitySpecificationInfo instantiates a new VoucherGoodsQuantitySpecificationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherGoodsQuantitySpecificationInfo() *VoucherGoodsQuantitySpecificationInfo {
	this := VoucherGoodsQuantitySpecificationInfo{}
	return &this
}

// NewVoucherGoodsQuantitySpecificationInfoWithDefaults instantiates a new VoucherGoodsQuantitySpecificationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherGoodsQuantitySpecificationInfoWithDefaults() *VoucherGoodsQuantitySpecificationInfo {
	this := VoucherGoodsQuantitySpecificationInfo{}
	return &this
}

// GetDirectionalType returns the DirectionalType field value if set, zero value otherwise.
func (o *VoucherGoodsQuantitySpecificationInfo) GetDirectionalType() string {
	if o == nil || IsNil(o.DirectionalType) {
		var ret string
		return ret
	}
	return *o.DirectionalType
}

// GetDirectionalTypeOk returns a tuple with the DirectionalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherGoodsQuantitySpecificationInfo) GetDirectionalTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DirectionalType) {
		return nil, false
	}
	return o.DirectionalType, true
}

// HasDirectionalType returns a boolean if a field has been set.
func (o *VoucherGoodsQuantitySpecificationInfo) HasDirectionalType() bool {
	if o != nil && !IsNil(o.DirectionalType) {
		return true
	}

	return false
}

// SetDirectionalType gets a reference to the given string and assigns it to the DirectionalType field.
func (o *VoucherGoodsQuantitySpecificationInfo) SetDirectionalType(v string) {
	o.DirectionalType = &v
}

// GetSpecificationQuantity returns the SpecificationQuantity field value if set, zero value otherwise.
func (o *VoucherGoodsQuantitySpecificationInfo) GetSpecificationQuantity() int32 {
	if o == nil || IsNil(o.SpecificationQuantity) {
		var ret int32
		return ret
	}
	return *o.SpecificationQuantity
}

// GetSpecificationQuantityOk returns a tuple with the SpecificationQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherGoodsQuantitySpecificationInfo) GetSpecificationQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.SpecificationQuantity) {
		return nil, false
	}
	return o.SpecificationQuantity, true
}

// HasSpecificationQuantity returns a boolean if a field has been set.
func (o *VoucherGoodsQuantitySpecificationInfo) HasSpecificationQuantity() bool {
	if o != nil && !IsNil(o.SpecificationQuantity) {
		return true
	}

	return false
}

// SetSpecificationQuantity gets a reference to the given int32 and assigns it to the SpecificationQuantity field.
func (o *VoucherGoodsQuantitySpecificationInfo) SetSpecificationQuantity(v int32) {
	o.SpecificationQuantity = &v
}

// GetSpecificationUnit returns the SpecificationUnit field value if set, zero value otherwise.
func (o *VoucherGoodsQuantitySpecificationInfo) GetSpecificationUnit() string {
	if o == nil || IsNil(o.SpecificationUnit) {
		var ret string
		return ret
	}
	return *o.SpecificationUnit
}

// GetSpecificationUnitOk returns a tuple with the SpecificationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherGoodsQuantitySpecificationInfo) GetSpecificationUnitOk() (*string, bool) {
	if o == nil || IsNil(o.SpecificationUnit) {
		return nil, false
	}
	return o.SpecificationUnit, true
}

// HasSpecificationUnit returns a boolean if a field has been set.
func (o *VoucherGoodsQuantitySpecificationInfo) HasSpecificationUnit() bool {
	if o != nil && !IsNil(o.SpecificationUnit) {
		return true
	}

	return false
}

// SetSpecificationUnit gets a reference to the given string and assigns it to the SpecificationUnit field.
func (o *VoucherGoodsQuantitySpecificationInfo) SetSpecificationUnit(v string) {
	o.SpecificationUnit = &v
}

func (o VoucherGoodsQuantitySpecificationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherGoodsQuantitySpecificationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DirectionalType) {
		toSerialize["directional_type"] = o.DirectionalType
	}
	if !IsNil(o.SpecificationQuantity) {
		toSerialize["specification_quantity"] = o.SpecificationQuantity
	}
	if !IsNil(o.SpecificationUnit) {
		toSerialize["specification_unit"] = o.SpecificationUnit
	}
	return toSerialize, nil
}

type NullableVoucherGoodsQuantitySpecificationInfo struct {
	value *VoucherGoodsQuantitySpecificationInfo
	isSet bool
}

func (v NullableVoucherGoodsQuantitySpecificationInfo) Get() *VoucherGoodsQuantitySpecificationInfo {
	return v.value
}

func (v *NullableVoucherGoodsQuantitySpecificationInfo) Set(val *VoucherGoodsQuantitySpecificationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherGoodsQuantitySpecificationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherGoodsQuantitySpecificationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherGoodsQuantitySpecificationInfo(val *VoucherGoodsQuantitySpecificationInfo) *NullableVoucherGoodsQuantitySpecificationInfo {
	return &NullableVoucherGoodsQuantitySpecificationInfo{value: val, isSet: true}
}

func (v NullableVoucherGoodsQuantitySpecificationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherGoodsQuantitySpecificationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherFileInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherFileInfo{}

// VoucherFileInfo struct for VoucherFileInfo
type VoucherFileInfo struct {
	// 发票文件下载
	FileDownloadUrl *string `json:"file_download_url,omitempty"`
	// 文件名
	FileName *string `json:"file_name,omitempty"`
	// 文件类型
	FileType *string `json:"file_type,omitempty"`
}

// NewVoucherFileInfo instantiates a new VoucherFileInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherFileInfo() *VoucherFileInfo {
	this := VoucherFileInfo{}
	return &this
}

// NewVoucherFileInfoWithDefaults instantiates a new VoucherFileInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherFileInfoWithDefaults() *VoucherFileInfo {
	this := VoucherFileInfo{}
	return &this
}

// GetFileDownloadUrl returns the FileDownloadUrl field value if set, zero value otherwise.
func (o *VoucherFileInfo) GetFileDownloadUrl() string {
	if o == nil || IsNil(o.FileDownloadUrl) {
		var ret string
		return ret
	}
	return *o.FileDownloadUrl
}

// GetFileDownloadUrlOk returns a tuple with the FileDownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherFileInfo) GetFileDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileDownloadUrl) {
		return nil, false
	}
	return o.FileDownloadUrl, true
}

// HasFileDownloadUrl returns a boolean if a field has been set.
func (o *VoucherFileInfo) HasFileDownloadUrl() bool {
	if o != nil && !IsNil(o.FileDownloadUrl) {
		return true
	}

	return false
}

// SetFileDownloadUrl gets a reference to the given string and assigns it to the FileDownloadUrl field.
func (o *VoucherFileInfo) SetFileDownloadUrl(v string) {
	o.FileDownloadUrl = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *VoucherFileInfo) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherFileInfo) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *VoucherFileInfo) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *VoucherFileInfo) SetFileName(v string) {
	o.FileName = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *VoucherFileInfo) GetFileType() string {
	if o == nil || IsNil(o.FileType) {
		var ret string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherFileInfo) GetFileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FileType) {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *VoucherFileInfo) HasFileType() bool {
	if o != nil && !IsNil(o.FileType) {
		return true
	}

	return false
}

// SetFileType gets a reference to the given string and assigns it to the FileType field.
func (o *VoucherFileInfo) SetFileType(v string) {
	o.FileType = &v
}

func (o VoucherFileInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherFileInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileDownloadUrl) {
		toSerialize["file_download_url"] = o.FileDownloadUrl
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileType) {
		toSerialize["file_type"] = o.FileType
	}
	return toSerialize, nil
}

type NullableVoucherFileInfo struct {
	value *VoucherFileInfo
	isSet bool
}

func (v NullableVoucherFileInfo) Get() *VoucherFileInfo {
	return v.value
}

func (v *NullableVoucherFileInfo) Set(val *VoucherFileInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherFileInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherFileInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherFileInfo(val *VoucherFileInfo) *NullableVoucherFileInfo {
	return &NullableVoucherFileInfo{value: val, isSet: true}
}

func (v NullableVoucherFileInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherFileInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

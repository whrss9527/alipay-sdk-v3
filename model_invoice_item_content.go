/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceItemContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceItemContent{}

// InvoiceItemContent struct for InvoiceItemContent
type InvoiceItemContent struct {
	// 价税合计。(等于sumPrice和tax之和)
	ItemAmount *string `json:"item_amount,omitempty"`
	// 发票项目名称（或商品名称）
	ItemName *string `json:"item_name,omitempty"`
	// 商品编号
	ItemNo *string `json:"item_no,omitempty"`
	// 单价，格式：100.00。新版电子发票，折扣行此参数不能传，非折扣行必传
	ItemPrice *string `json:"item_price,omitempty"`
	// 数量。新版电子发票，折扣行此参数不能传，非折扣行必传
	ItemQuantity *int32 `json:"item_quantity,omitempty"`
	// 单项总价，格式：100.00
	ItemSumPrice *string `json:"item_sum_price,omitempty"`
	// 税额
	ItemTaxPrice *string `json:"item_tax_price,omitempty"`
	// 税率
	ItemTaxRate *string `json:"item_tax_rate,omitempty"`
	// 台
	ItemUnit *string `json:"item_unit,omitempty"`
	// 发票行性质。0表示正常行，1表示折扣行，2表示被折扣行。比如充电器单价100元，折扣10元，则明细为2行，充电器行性质为2，折扣行性质为1。如果充电器没有折扣，则值应为0
	RowType *int32 `json:"row_type,omitempty"`
}

// NewInvoiceItemContent instantiates a new InvoiceItemContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItemContent() *InvoiceItemContent {
	this := InvoiceItemContent{}
	return &this
}

// NewInvoiceItemContentWithDefaults instantiates a new InvoiceItemContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemContentWithDefaults() *InvoiceItemContent {
	this := InvoiceItemContent{}
	return &this
}

// GetItemAmount returns the ItemAmount field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemAmount() string {
	if o == nil || IsNil(o.ItemAmount) {
		var ret string
		return ret
	}
	return *o.ItemAmount
}

// GetItemAmountOk returns a tuple with the ItemAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ItemAmount) {
		return nil, false
	}
	return o.ItemAmount, true
}

// HasItemAmount returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemAmount() bool {
	if o != nil && !IsNil(o.ItemAmount) {
		return true
	}

	return false
}

// SetItemAmount gets a reference to the given string and assigns it to the ItemAmount field.
func (o *InvoiceItemContent) SetItemAmount(v string) {
	o.ItemAmount = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemName() string {
	if o == nil || IsNil(o.ItemName) {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ItemName) {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemName() bool {
	if o != nil && !IsNil(o.ItemName) {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *InvoiceItemContent) SetItemName(v string) {
	o.ItemName = &v
}

// GetItemNo returns the ItemNo field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemNo() string {
	if o == nil || IsNil(o.ItemNo) {
		var ret string
		return ret
	}
	return *o.ItemNo
}

// GetItemNoOk returns a tuple with the ItemNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemNoOk() (*string, bool) {
	if o == nil || IsNil(o.ItemNo) {
		return nil, false
	}
	return o.ItemNo, true
}

// HasItemNo returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemNo() bool {
	if o != nil && !IsNil(o.ItemNo) {
		return true
	}

	return false
}

// SetItemNo gets a reference to the given string and assigns it to the ItemNo field.
func (o *InvoiceItemContent) SetItemNo(v string) {
	o.ItemNo = &v
}

// GetItemPrice returns the ItemPrice field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemPrice() string {
	if o == nil || IsNil(o.ItemPrice) {
		var ret string
		return ret
	}
	return *o.ItemPrice
}

// GetItemPriceOk returns a tuple with the ItemPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemPriceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemPrice) {
		return nil, false
	}
	return o.ItemPrice, true
}

// HasItemPrice returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemPrice() bool {
	if o != nil && !IsNil(o.ItemPrice) {
		return true
	}

	return false
}

// SetItemPrice gets a reference to the given string and assigns it to the ItemPrice field.
func (o *InvoiceItemContent) SetItemPrice(v string) {
	o.ItemPrice = &v
}

// GetItemQuantity returns the ItemQuantity field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemQuantity() int32 {
	if o == nil || IsNil(o.ItemQuantity) {
		var ret int32
		return ret
	}
	return *o.ItemQuantity
}

// GetItemQuantityOk returns a tuple with the ItemQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemQuantity) {
		return nil, false
	}
	return o.ItemQuantity, true
}

// HasItemQuantity returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemQuantity() bool {
	if o != nil && !IsNil(o.ItemQuantity) {
		return true
	}

	return false
}

// SetItemQuantity gets a reference to the given int32 and assigns it to the ItemQuantity field.
func (o *InvoiceItemContent) SetItemQuantity(v int32) {
	o.ItemQuantity = &v
}

// GetItemSumPrice returns the ItemSumPrice field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemSumPrice() string {
	if o == nil || IsNil(o.ItemSumPrice) {
		var ret string
		return ret
	}
	return *o.ItemSumPrice
}

// GetItemSumPriceOk returns a tuple with the ItemSumPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemSumPriceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSumPrice) {
		return nil, false
	}
	return o.ItemSumPrice, true
}

// HasItemSumPrice returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemSumPrice() bool {
	if o != nil && !IsNil(o.ItemSumPrice) {
		return true
	}

	return false
}

// SetItemSumPrice gets a reference to the given string and assigns it to the ItemSumPrice field.
func (o *InvoiceItemContent) SetItemSumPrice(v string) {
	o.ItemSumPrice = &v
}

// GetItemTaxPrice returns the ItemTaxPrice field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemTaxPrice() string {
	if o == nil || IsNil(o.ItemTaxPrice) {
		var ret string
		return ret
	}
	return *o.ItemTaxPrice
}

// GetItemTaxPriceOk returns a tuple with the ItemTaxPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemTaxPriceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemTaxPrice) {
		return nil, false
	}
	return o.ItemTaxPrice, true
}

// HasItemTaxPrice returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemTaxPrice() bool {
	if o != nil && !IsNil(o.ItemTaxPrice) {
		return true
	}

	return false
}

// SetItemTaxPrice gets a reference to the given string and assigns it to the ItemTaxPrice field.
func (o *InvoiceItemContent) SetItemTaxPrice(v string) {
	o.ItemTaxPrice = &v
}

// GetItemTaxRate returns the ItemTaxRate field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemTaxRate() string {
	if o == nil || IsNil(o.ItemTaxRate) {
		var ret string
		return ret
	}
	return *o.ItemTaxRate
}

// GetItemTaxRateOk returns a tuple with the ItemTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemTaxRateOk() (*string, bool) {
	if o == nil || IsNil(o.ItemTaxRate) {
		return nil, false
	}
	return o.ItemTaxRate, true
}

// HasItemTaxRate returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemTaxRate() bool {
	if o != nil && !IsNil(o.ItemTaxRate) {
		return true
	}

	return false
}

// SetItemTaxRate gets a reference to the given string and assigns it to the ItemTaxRate field.
func (o *InvoiceItemContent) SetItemTaxRate(v string) {
	o.ItemTaxRate = &v
}

// GetItemUnit returns the ItemUnit field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetItemUnit() string {
	if o == nil || IsNil(o.ItemUnit) {
		var ret string
		return ret
	}
	return *o.ItemUnit
}

// GetItemUnitOk returns a tuple with the ItemUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetItemUnitOk() (*string, bool) {
	if o == nil || IsNil(o.ItemUnit) {
		return nil, false
	}
	return o.ItemUnit, true
}

// HasItemUnit returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasItemUnit() bool {
	if o != nil && !IsNil(o.ItemUnit) {
		return true
	}

	return false
}

// SetItemUnit gets a reference to the given string and assigns it to the ItemUnit field.
func (o *InvoiceItemContent) SetItemUnit(v string) {
	o.ItemUnit = &v
}

// GetRowType returns the RowType field value if set, zero value otherwise.
func (o *InvoiceItemContent) GetRowType() int32 {
	if o == nil || IsNil(o.RowType) {
		var ret int32
		return ret
	}
	return *o.RowType
}

// GetRowTypeOk returns a tuple with the RowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemContent) GetRowTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.RowType) {
		return nil, false
	}
	return o.RowType, true
}

// HasRowType returns a boolean if a field has been set.
func (o *InvoiceItemContent) HasRowType() bool {
	if o != nil && !IsNil(o.RowType) {
		return true
	}

	return false
}

// SetRowType gets a reference to the given int32 and assigns it to the RowType field.
func (o *InvoiceItemContent) SetRowType(v int32) {
	o.RowType = &v
}

func (o InvoiceItemContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceItemContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemAmount) {
		toSerialize["item_amount"] = o.ItemAmount
	}
	if !IsNil(o.ItemName) {
		toSerialize["item_name"] = o.ItemName
	}
	if !IsNil(o.ItemNo) {
		toSerialize["item_no"] = o.ItemNo
	}
	if !IsNil(o.ItemPrice) {
		toSerialize["item_price"] = o.ItemPrice
	}
	if !IsNil(o.ItemQuantity) {
		toSerialize["item_quantity"] = o.ItemQuantity
	}
	if !IsNil(o.ItemSumPrice) {
		toSerialize["item_sum_price"] = o.ItemSumPrice
	}
	if !IsNil(o.ItemTaxPrice) {
		toSerialize["item_tax_price"] = o.ItemTaxPrice
	}
	if !IsNil(o.ItemTaxRate) {
		toSerialize["item_tax_rate"] = o.ItemTaxRate
	}
	if !IsNil(o.ItemUnit) {
		toSerialize["item_unit"] = o.ItemUnit
	}
	if !IsNil(o.RowType) {
		toSerialize["row_type"] = o.RowType
	}
	return toSerialize, nil
}

type NullableInvoiceItemContent struct {
	value *InvoiceItemContent
	isSet bool
}

func (v NullableInvoiceItemContent) Get() *InvoiceItemContent {
	return v.value
}

func (v *NullableInvoiceItemContent) Set(val *InvoiceItemContent) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceItemContent) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceItemContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceItemContent(val *InvoiceItemContent) *NullableInvoiceItemContent {
	return &NullableInvoiceItemContent{value: val, isSet: true}
}

func (v NullableInvoiceItemContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceItemContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



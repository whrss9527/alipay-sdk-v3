/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ZMGoOutDiscountInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZMGoOutDiscountInfo{}

// ZMGoOutDiscountInfo struct for ZMGoOutDiscountInfo
type ZMGoOutDiscountInfo struct {
	// 商户回传的优惠金额，如用户享受的红包金额，单位元
	DiscountAmount *string `json:"discount_amount,omitempty"`
	// 商户数据回传的优惠信息的名称
	DiscountName *string `json:"discount_name,omitempty"`
	// 优惠信息的类型。为枚举值，商户可任意选择一个值作为入参传入。可取值： (\"exclusiveBenefit\",\"专享优惠\"), (\"exclusiveDiscount\",\"专享折扣\"), (\"appreciationBenefit\", \"增值权益\"), (\"memberPoint\", \"会员积分\")
	DiscountType *string `json:"discount_type,omitempty"`
}

// NewZMGoOutDiscountInfo instantiates a new ZMGoOutDiscountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZMGoOutDiscountInfo() *ZMGoOutDiscountInfo {
	this := ZMGoOutDiscountInfo{}
	return &this
}

// NewZMGoOutDiscountInfoWithDefaults instantiates a new ZMGoOutDiscountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZMGoOutDiscountInfoWithDefaults() *ZMGoOutDiscountInfo {
	this := ZMGoOutDiscountInfo{}
	return &this
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *ZMGoOutDiscountInfo) GetDiscountAmount() string {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret string
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGoOutDiscountInfo) GetDiscountAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *ZMGoOutDiscountInfo) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given string and assigns it to the DiscountAmount field.
func (o *ZMGoOutDiscountInfo) SetDiscountAmount(v string) {
	o.DiscountAmount = &v
}

// GetDiscountName returns the DiscountName field value if set, zero value otherwise.
func (o *ZMGoOutDiscountInfo) GetDiscountName() string {
	if o == nil || IsNil(o.DiscountName) {
		var ret string
		return ret
	}
	return *o.DiscountName
}

// GetDiscountNameOk returns a tuple with the DiscountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGoOutDiscountInfo) GetDiscountNameOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountName) {
		return nil, false
	}
	return o.DiscountName, true
}

// HasDiscountName returns a boolean if a field has been set.
func (o *ZMGoOutDiscountInfo) HasDiscountName() bool {
	if o != nil && !IsNil(o.DiscountName) {
		return true
	}

	return false
}

// SetDiscountName gets a reference to the given string and assigns it to the DiscountName field.
func (o *ZMGoOutDiscountInfo) SetDiscountName(v string) {
	o.DiscountName = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *ZMGoOutDiscountInfo) GetDiscountType() string {
	if o == nil || IsNil(o.DiscountType) {
		var ret string
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGoOutDiscountInfo) GetDiscountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *ZMGoOutDiscountInfo) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given string and assigns it to the DiscountType field.
func (o *ZMGoOutDiscountInfo) SetDiscountType(v string) {
	o.DiscountType = &v
}

func (o ZMGoOutDiscountInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZMGoOutDiscountInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountName) {
		toSerialize["discount_name"] = o.DiscountName
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discount_type"] = o.DiscountType
	}
	return toSerialize, nil
}

type NullableZMGoOutDiscountInfo struct {
	value *ZMGoOutDiscountInfo
	isSet bool
}

func (v NullableZMGoOutDiscountInfo) Get() *ZMGoOutDiscountInfo {
	return v.value
}

func (v *NullableZMGoOutDiscountInfo) Set(val *ZMGoOutDiscountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableZMGoOutDiscountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableZMGoOutDiscountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZMGoOutDiscountInfo(val *ZMGoOutDiscountInfo) *NullableZMGoOutDiscountInfo {
	return &NullableZMGoOutDiscountInfo{value: val, isSet: true}
}

func (v NullableZMGoOutDiscountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZMGoOutDiscountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ActivityBaseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityBaseInfo{}

// ActivityBaseInfo struct for ActivityBaseInfo
type ActivityBaseInfo struct {
	// 活动id
	ActivityId *string `json:"activity_id,omitempty"`
	// 活动名称。
	ActivityName *string `json:"activity_name,omitempty"`
	// 活动操作状态。
	ActivityOperationStatus *string `json:"activity_operation_status,omitempty"`
	// 券活动产品类型
	ActivityProductType *string `json:"activity_product_type,omitempty"`
	// 活动状态 。 ACTIVE:活动已激活，表示活动已经生效，等到活动开始(publish_start_time)之后用户就可以参与活动。  PAUSE:活动已暂停，表示商户临时暂停该活动，该状态下用户不能参与活动。
	ActivityStatus     *string             `json:"activity_status,omitempty"`
	BelongMerchantInfo *BelongMerchantInfo `json:"belong_merchant_info,omitempty"`
	// 码模式。   MERCHANT_UPLOAD：商户上传自定义code，发券时系统随机选取上传的券code发放  MERCHANT_API：发奖时指定券码发奖，此模式无须提前上传券码。
	CodeMode *string `json:"code_mode,omitempty"`
	// 外部活动ID
	OutActivityId *string `json:"out_activity_id,omitempty"`
}

// NewActivityBaseInfo instantiates a new ActivityBaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityBaseInfo() *ActivityBaseInfo {
	this := ActivityBaseInfo{}
	return &this
}

// NewActivityBaseInfoWithDefaults instantiates a new ActivityBaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityBaseInfoWithDefaults() *ActivityBaseInfo {
	this := ActivityBaseInfo{}
	return &this
}

// GetActivityId returns the ActivityId field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetActivityId() string {
	if o == nil || IsNil(o.ActivityId) {
		var ret string
		return ret
	}
	return *o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetActivityIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityId) {
		return nil, false
	}
	return o.ActivityId, true
}

// HasActivityId returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasActivityId() bool {
	if o != nil && !IsNil(o.ActivityId) {
		return true
	}

	return false
}

// SetActivityId gets a reference to the given string and assigns it to the ActivityId field.
func (o *ActivityBaseInfo) SetActivityId(v string) {
	o.ActivityId = &v
}

// GetActivityName returns the ActivityName field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetActivityName() string {
	if o == nil || IsNil(o.ActivityName) {
		var ret string
		return ret
	}
	return *o.ActivityName
}

// GetActivityNameOk returns a tuple with the ActivityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetActivityNameOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityName) {
		return nil, false
	}
	return o.ActivityName, true
}

// HasActivityName returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasActivityName() bool {
	if o != nil && !IsNil(o.ActivityName) {
		return true
	}

	return false
}

// SetActivityName gets a reference to the given string and assigns it to the ActivityName field.
func (o *ActivityBaseInfo) SetActivityName(v string) {
	o.ActivityName = &v
}

// GetActivityOperationStatus returns the ActivityOperationStatus field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetActivityOperationStatus() string {
	if o == nil || IsNil(o.ActivityOperationStatus) {
		var ret string
		return ret
	}
	return *o.ActivityOperationStatus
}

// GetActivityOperationStatusOk returns a tuple with the ActivityOperationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetActivityOperationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityOperationStatus) {
		return nil, false
	}
	return o.ActivityOperationStatus, true
}

// HasActivityOperationStatus returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasActivityOperationStatus() bool {
	if o != nil && !IsNil(o.ActivityOperationStatus) {
		return true
	}

	return false
}

// SetActivityOperationStatus gets a reference to the given string and assigns it to the ActivityOperationStatus field.
func (o *ActivityBaseInfo) SetActivityOperationStatus(v string) {
	o.ActivityOperationStatus = &v
}

// GetActivityProductType returns the ActivityProductType field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetActivityProductType() string {
	if o == nil || IsNil(o.ActivityProductType) {
		var ret string
		return ret
	}
	return *o.ActivityProductType
}

// GetActivityProductTypeOk returns a tuple with the ActivityProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetActivityProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityProductType) {
		return nil, false
	}
	return o.ActivityProductType, true
}

// HasActivityProductType returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasActivityProductType() bool {
	if o != nil && !IsNil(o.ActivityProductType) {
		return true
	}

	return false
}

// SetActivityProductType gets a reference to the given string and assigns it to the ActivityProductType field.
func (o *ActivityBaseInfo) SetActivityProductType(v string) {
	o.ActivityProductType = &v
}

// GetActivityStatus returns the ActivityStatus field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetActivityStatus() string {
	if o == nil || IsNil(o.ActivityStatus) {
		var ret string
		return ret
	}
	return *o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetActivityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityStatus) {
		return nil, false
	}
	return o.ActivityStatus, true
}

// HasActivityStatus returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasActivityStatus() bool {
	if o != nil && !IsNil(o.ActivityStatus) {
		return true
	}

	return false
}

// SetActivityStatus gets a reference to the given string and assigns it to the ActivityStatus field.
func (o *ActivityBaseInfo) SetActivityStatus(v string) {
	o.ActivityStatus = &v
}

// GetBelongMerchantInfo returns the BelongMerchantInfo field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetBelongMerchantInfo() BelongMerchantInfo {
	if o == nil || IsNil(o.BelongMerchantInfo) {
		var ret BelongMerchantInfo
		return ret
	}
	return *o.BelongMerchantInfo
}

// GetBelongMerchantInfoOk returns a tuple with the BelongMerchantInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetBelongMerchantInfoOk() (*BelongMerchantInfo, bool) {
	if o == nil || IsNil(o.BelongMerchantInfo) {
		return nil, false
	}
	return o.BelongMerchantInfo, true
}

// HasBelongMerchantInfo returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasBelongMerchantInfo() bool {
	if o != nil && !IsNil(o.BelongMerchantInfo) {
		return true
	}

	return false
}

// SetBelongMerchantInfo gets a reference to the given BelongMerchantInfo and assigns it to the BelongMerchantInfo field.
func (o *ActivityBaseInfo) SetBelongMerchantInfo(v BelongMerchantInfo) {
	o.BelongMerchantInfo = &v
}

// GetCodeMode returns the CodeMode field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetCodeMode() string {
	if o == nil || IsNil(o.CodeMode) {
		var ret string
		return ret
	}
	return *o.CodeMode
}

// GetCodeModeOk returns a tuple with the CodeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetCodeModeOk() (*string, bool) {
	if o == nil || IsNil(o.CodeMode) {
		return nil, false
	}
	return o.CodeMode, true
}

// HasCodeMode returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasCodeMode() bool {
	if o != nil && !IsNil(o.CodeMode) {
		return true
	}

	return false
}

// SetCodeMode gets a reference to the given string and assigns it to the CodeMode field.
func (o *ActivityBaseInfo) SetCodeMode(v string) {
	o.CodeMode = &v
}

// GetOutActivityId returns the OutActivityId field value if set, zero value otherwise.
func (o *ActivityBaseInfo) GetOutActivityId() string {
	if o == nil || IsNil(o.OutActivityId) {
		var ret string
		return ret
	}
	return *o.OutActivityId
}

// GetOutActivityIdOk returns a tuple with the OutActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityBaseInfo) GetOutActivityIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutActivityId) {
		return nil, false
	}
	return o.OutActivityId, true
}

// HasOutActivityId returns a boolean if a field has been set.
func (o *ActivityBaseInfo) HasOutActivityId() bool {
	if o != nil && !IsNil(o.OutActivityId) {
		return true
	}

	return false
}

// SetOutActivityId gets a reference to the given string and assigns it to the OutActivityId field.
func (o *ActivityBaseInfo) SetOutActivityId(v string) {
	o.OutActivityId = &v
}

func (o ActivityBaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityBaseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivityId) {
		toSerialize["activity_id"] = o.ActivityId
	}
	if !IsNil(o.ActivityName) {
		toSerialize["activity_name"] = o.ActivityName
	}
	if !IsNil(o.ActivityOperationStatus) {
		toSerialize["activity_operation_status"] = o.ActivityOperationStatus
	}
	if !IsNil(o.ActivityProductType) {
		toSerialize["activity_product_type"] = o.ActivityProductType
	}
	if !IsNil(o.ActivityStatus) {
		toSerialize["activity_status"] = o.ActivityStatus
	}
	if !IsNil(o.BelongMerchantInfo) {
		toSerialize["belong_merchant_info"] = o.BelongMerchantInfo
	}
	if !IsNil(o.CodeMode) {
		toSerialize["code_mode"] = o.CodeMode
	}
	if !IsNil(o.OutActivityId) {
		toSerialize["out_activity_id"] = o.OutActivityId
	}
	return toSerialize, nil
}

type NullableActivityBaseInfo struct {
	value *ActivityBaseInfo
	isSet bool
}

func (v NullableActivityBaseInfo) Get() *ActivityBaseInfo {
	return v.value
}

func (v *NullableActivityBaseInfo) Set(val *ActivityBaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityBaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityBaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityBaseInfo(val *ActivityBaseInfo) *NullableActivityBaseInfo {
	return &NullableActivityBaseInfo{value: val, isSet: true}
}

func (v NullableActivityBaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityBaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

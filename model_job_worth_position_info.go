/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the JobWorthPositionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobWorthPositionInfo{}

// JobWorthPositionInfo struct for JobWorthPositionInfo
type JobWorthPositionInfo struct {
	// 职位要求-年龄要求 无要求（不传）、28岁以上(OVER28)、40岁以下(BELOW40)、25岁～35岁(25TO35)
	Age *string `json:"age,omitempty"`
	// 福利，现有标签，最多5个标签，使用英文,分割 参考 https://www.yuque.com/docs/share/805e9840-ae9d-499c-b566-46b3b8c9fb2d?# 《4.1 服务端接入----职位传入接口》的1.3.1.1
	Benefit *string `json:"benefit,omitempty"`
	// 技能、证书等要求，比如学历、健康证、普通话或其他技能证书等
	Certifications *string `json:"certifications,omitempty"`
	// 发布企业统一社会信用代码
	CompanyCertificate *string `json:"company_certificate,omitempty"`
	// 上传的aftsid
	CompanyLogoAftsId *string `json:"company_logo_afts_id,omitempty"`
	// 企业工商全称
	CompanyName *string `json:"company_name,omitempty"`
	// 招聘人数
	Count *int32 `json:"count,omitempty"`
	// 学历要求,HIGHSCHOOL_AND_BELOW（高中及以下），POLYTECHNIC（中专），COLLEGE（大专），BACHELOR（本科），MASTER（硕士），DOCTOR_AND_ABOVE（博士及以上）
	Education *string `json:"education,omitempty"`
	// 无要求（不传）、男或者女
	Gender *string `json:"gender,omitempty"`
	// 合作方岗位id自定义保持唯一性
	KaPositionId *string `json:"ka_position_id,omitempty"`
	// 长文本描述
	PositionDesc *string `json:"position_desc,omitempty"`
	// 工作证岗位库的职位主键，只有更新职位信息时需要传入。第一次传入岗位后返回
	PositionId *string `json:"position_id,omitempty"`
	// 岗位对应的行业id，字段参考https://www.yuque.com/docs/share/805e9840-ae9d-499c-b566-46b3b8c9fb2d?# 《4.1 服务端接入----职位传入接口》的1.3.1.2
	PositionJobId *string `json:"position_job_id,omitempty"`
	// 岗位对应的职业名称
	PositionJobName *string `json:"position_job_name,omitempty"`
	// 岗位对应的职业id，字段参考https://www.yuque.com/docs/share/805e9840-ae9d-499c-b566-46b3b8c9fb2d?# 《4.1 服务端接入----职位传入接口》的1.3.1.2
	PositionProfessionId *string `json:"position_profession_id,omitempty"`
	// 岗位属性：全职(FULL_TIME)或者兼职(PART_TIME)
	PositionProperty *string `json:"position_property,omitempty"`
	// 职位的状态，只有上架(UNCHECK)和下架(OFFLINE)两种
	PositionStatus *string `json:"position_status,omitempty"`
	// 短文本描述
	PositionTitle *string `json:"position_title,omitempty"`
	// 薪水范围，不能低于salary_min
	SalaryMax *string `json:"salary_max,omitempty"`
	// 薪水范围，不能高于salary_max
	SalaryMin *string `json:"salary_min,omitempty"`
	// 薪资类型：日结(DAY)、月结(MONTH)、周结(WEEK)、完工结(DONE)、其他(OTHER)
	SalaryType *string `json:"salary_type,omitempty"`
	// 薪资单位，元/日(DAY)、元/次(TIME)、元/月(MONTH)、元/小时(HOUR)、元/件 (NUM)、元/周 (WEEK)、其他 (OTHER)
	SalaryUnit *string `json:"salary_unit,omitempty"`
	// 岗位需要的技能标签，最多5个，使用英文逗号分割
	SkillTag *string `json:"skill_tag,omitempty"`
	// 职位跳转链接，当前只支持支付宝小程序，也就是alipays://platformapi/ 开头
	SkipUrl *string `json:"skip_url,omitempty"`
	// 高德city code，例：北京010，线上工作9999 参考https://www.yuque.com/docs/share/805e9840-ae9d-499c-b566-46b3b8c9fb2d?# 《4.1 服务端接入----职位传入接口》的1.3.1.3
	WorkCity *string `json:"work_city,omitempty"`
	// 经纬度，前面是经度，后面是纬度，使用英文逗号隔开
	WorkLongitude *string `json:"work_longitude,omitempty"`
	// 工作地所在的区县,使用高德的adcode，例：朝阳区110105 参考https://www.yuque.com/docs/share/805e9840-ae9d-499c-b566-46b3b8c9fb2d?# 《4.1 服务端接入----职位传入接口》的1.3.1.2
	WorkRegion *string `json:"work_region,omitempty"`
	// 工作年限，1年以下（ONE）、1～3年（THREE）、3～5年（FIVE）、5～10年（TEN）、10年以上（OVER_TEN）
	WorkYear *string `json:"work_year,omitempty"`
}

// NewJobWorthPositionInfo instantiates a new JobWorthPositionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobWorthPositionInfo() *JobWorthPositionInfo {
	this := JobWorthPositionInfo{}
	return &this
}

// NewJobWorthPositionInfoWithDefaults instantiates a new JobWorthPositionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobWorthPositionInfoWithDefaults() *JobWorthPositionInfo {
	this := JobWorthPositionInfo{}
	return &this
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetAge() string {
	if o == nil || IsNil(o.Age) {
		var ret string
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetAgeOk() (*string, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given string and assigns it to the Age field.
func (o *JobWorthPositionInfo) SetAge(v string) {
	o.Age = &v
}

// GetBenefit returns the Benefit field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetBenefit() string {
	if o == nil || IsNil(o.Benefit) {
		var ret string
		return ret
	}
	return *o.Benefit
}

// GetBenefitOk returns a tuple with the Benefit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetBenefitOk() (*string, bool) {
	if o == nil || IsNil(o.Benefit) {
		return nil, false
	}
	return o.Benefit, true
}

// HasBenefit returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasBenefit() bool {
	if o != nil && !IsNil(o.Benefit) {
		return true
	}

	return false
}

// SetBenefit gets a reference to the given string and assigns it to the Benefit field.
func (o *JobWorthPositionInfo) SetBenefit(v string) {
	o.Benefit = &v
}

// GetCertifications returns the Certifications field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetCertifications() string {
	if o == nil || IsNil(o.Certifications) {
		var ret string
		return ret
	}
	return *o.Certifications
}

// GetCertificationsOk returns a tuple with the Certifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetCertificationsOk() (*string, bool) {
	if o == nil || IsNil(o.Certifications) {
		return nil, false
	}
	return o.Certifications, true
}

// HasCertifications returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasCertifications() bool {
	if o != nil && !IsNil(o.Certifications) {
		return true
	}

	return false
}

// SetCertifications gets a reference to the given string and assigns it to the Certifications field.
func (o *JobWorthPositionInfo) SetCertifications(v string) {
	o.Certifications = &v
}

// GetCompanyCertificate returns the CompanyCertificate field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetCompanyCertificate() string {
	if o == nil || IsNil(o.CompanyCertificate) {
		var ret string
		return ret
	}
	return *o.CompanyCertificate
}

// GetCompanyCertificateOk returns a tuple with the CompanyCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetCompanyCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyCertificate) {
		return nil, false
	}
	return o.CompanyCertificate, true
}

// HasCompanyCertificate returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasCompanyCertificate() bool {
	if o != nil && !IsNil(o.CompanyCertificate) {
		return true
	}

	return false
}

// SetCompanyCertificate gets a reference to the given string and assigns it to the CompanyCertificate field.
func (o *JobWorthPositionInfo) SetCompanyCertificate(v string) {
	o.CompanyCertificate = &v
}

// GetCompanyLogoAftsId returns the CompanyLogoAftsId field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetCompanyLogoAftsId() string {
	if o == nil || IsNil(o.CompanyLogoAftsId) {
		var ret string
		return ret
	}
	return *o.CompanyLogoAftsId
}

// GetCompanyLogoAftsIdOk returns a tuple with the CompanyLogoAftsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetCompanyLogoAftsIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyLogoAftsId) {
		return nil, false
	}
	return o.CompanyLogoAftsId, true
}

// HasCompanyLogoAftsId returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasCompanyLogoAftsId() bool {
	if o != nil && !IsNil(o.CompanyLogoAftsId) {
		return true
	}

	return false
}

// SetCompanyLogoAftsId gets a reference to the given string and assigns it to the CompanyLogoAftsId field.
func (o *JobWorthPositionInfo) SetCompanyLogoAftsId(v string) {
	o.CompanyLogoAftsId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *JobWorthPositionInfo) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *JobWorthPositionInfo) SetCount(v int32) {
	o.Count = &v
}

// GetEducation returns the Education field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetEducation() string {
	if o == nil || IsNil(o.Education) {
		var ret string
		return ret
	}
	return *o.Education
}

// GetEducationOk returns a tuple with the Education field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetEducationOk() (*string, bool) {
	if o == nil || IsNil(o.Education) {
		return nil, false
	}
	return o.Education, true
}

// HasEducation returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasEducation() bool {
	if o != nil && !IsNil(o.Education) {
		return true
	}

	return false
}

// SetEducation gets a reference to the given string and assigns it to the Education field.
func (o *JobWorthPositionInfo) SetEducation(v string) {
	o.Education = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *JobWorthPositionInfo) SetGender(v string) {
	o.Gender = &v
}

// GetKaPositionId returns the KaPositionId field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetKaPositionId() string {
	if o == nil || IsNil(o.KaPositionId) {
		var ret string
		return ret
	}
	return *o.KaPositionId
}

// GetKaPositionIdOk returns a tuple with the KaPositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetKaPositionIdOk() (*string, bool) {
	if o == nil || IsNil(o.KaPositionId) {
		return nil, false
	}
	return o.KaPositionId, true
}

// HasKaPositionId returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasKaPositionId() bool {
	if o != nil && !IsNil(o.KaPositionId) {
		return true
	}

	return false
}

// SetKaPositionId gets a reference to the given string and assigns it to the KaPositionId field.
func (o *JobWorthPositionInfo) SetKaPositionId(v string) {
	o.KaPositionId = &v
}

// GetPositionDesc returns the PositionDesc field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionDesc() string {
	if o == nil || IsNil(o.PositionDesc) {
		var ret string
		return ret
	}
	return *o.PositionDesc
}

// GetPositionDescOk returns a tuple with the PositionDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionDescOk() (*string, bool) {
	if o == nil || IsNil(o.PositionDesc) {
		return nil, false
	}
	return o.PositionDesc, true
}

// HasPositionDesc returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionDesc() bool {
	if o != nil && !IsNil(o.PositionDesc) {
		return true
	}

	return false
}

// SetPositionDesc gets a reference to the given string and assigns it to the PositionDesc field.
func (o *JobWorthPositionInfo) SetPositionDesc(v string) {
	o.PositionDesc = &v
}

// GetPositionId returns the PositionId field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionId() string {
	if o == nil || IsNil(o.PositionId) {
		var ret string
		return ret
	}
	return *o.PositionId
}

// GetPositionIdOk returns a tuple with the PositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PositionId) {
		return nil, false
	}
	return o.PositionId, true
}

// HasPositionId returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionId() bool {
	if o != nil && !IsNil(o.PositionId) {
		return true
	}

	return false
}

// SetPositionId gets a reference to the given string and assigns it to the PositionId field.
func (o *JobWorthPositionInfo) SetPositionId(v string) {
	o.PositionId = &v
}

// GetPositionJobId returns the PositionJobId field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionJobId() string {
	if o == nil || IsNil(o.PositionJobId) {
		var ret string
		return ret
	}
	return *o.PositionJobId
}

// GetPositionJobIdOk returns a tuple with the PositionJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.PositionJobId) {
		return nil, false
	}
	return o.PositionJobId, true
}

// HasPositionJobId returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionJobId() bool {
	if o != nil && !IsNil(o.PositionJobId) {
		return true
	}

	return false
}

// SetPositionJobId gets a reference to the given string and assigns it to the PositionJobId field.
func (o *JobWorthPositionInfo) SetPositionJobId(v string) {
	o.PositionJobId = &v
}

// GetPositionJobName returns the PositionJobName field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionJobName() string {
	if o == nil || IsNil(o.PositionJobName) {
		var ret string
		return ret
	}
	return *o.PositionJobName
}

// GetPositionJobNameOk returns a tuple with the PositionJobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.PositionJobName) {
		return nil, false
	}
	return o.PositionJobName, true
}

// HasPositionJobName returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionJobName() bool {
	if o != nil && !IsNil(o.PositionJobName) {
		return true
	}

	return false
}

// SetPositionJobName gets a reference to the given string and assigns it to the PositionJobName field.
func (o *JobWorthPositionInfo) SetPositionJobName(v string) {
	o.PositionJobName = &v
}

// GetPositionProfessionId returns the PositionProfessionId field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionProfessionId() string {
	if o == nil || IsNil(o.PositionProfessionId) {
		var ret string
		return ret
	}
	return *o.PositionProfessionId
}

// GetPositionProfessionIdOk returns a tuple with the PositionProfessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionProfessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PositionProfessionId) {
		return nil, false
	}
	return o.PositionProfessionId, true
}

// HasPositionProfessionId returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionProfessionId() bool {
	if o != nil && !IsNil(o.PositionProfessionId) {
		return true
	}

	return false
}

// SetPositionProfessionId gets a reference to the given string and assigns it to the PositionProfessionId field.
func (o *JobWorthPositionInfo) SetPositionProfessionId(v string) {
	o.PositionProfessionId = &v
}

// GetPositionProperty returns the PositionProperty field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionProperty() string {
	if o == nil || IsNil(o.PositionProperty) {
		var ret string
		return ret
	}
	return *o.PositionProperty
}

// GetPositionPropertyOk returns a tuple with the PositionProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.PositionProperty) {
		return nil, false
	}
	return o.PositionProperty, true
}

// HasPositionProperty returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionProperty() bool {
	if o != nil && !IsNil(o.PositionProperty) {
		return true
	}

	return false
}

// SetPositionProperty gets a reference to the given string and assigns it to the PositionProperty field.
func (o *JobWorthPositionInfo) SetPositionProperty(v string) {
	o.PositionProperty = &v
}

// GetPositionStatus returns the PositionStatus field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionStatus() string {
	if o == nil || IsNil(o.PositionStatus) {
		var ret string
		return ret
	}
	return *o.PositionStatus
}

// GetPositionStatusOk returns a tuple with the PositionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PositionStatus) {
		return nil, false
	}
	return o.PositionStatus, true
}

// HasPositionStatus returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionStatus() bool {
	if o != nil && !IsNil(o.PositionStatus) {
		return true
	}

	return false
}

// SetPositionStatus gets a reference to the given string and assigns it to the PositionStatus field.
func (o *JobWorthPositionInfo) SetPositionStatus(v string) {
	o.PositionStatus = &v
}

// GetPositionTitle returns the PositionTitle field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetPositionTitle() string {
	if o == nil || IsNil(o.PositionTitle) {
		var ret string
		return ret
	}
	return *o.PositionTitle
}

// GetPositionTitleOk returns a tuple with the PositionTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetPositionTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PositionTitle) {
		return nil, false
	}
	return o.PositionTitle, true
}

// HasPositionTitle returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasPositionTitle() bool {
	if o != nil && !IsNil(o.PositionTitle) {
		return true
	}

	return false
}

// SetPositionTitle gets a reference to the given string and assigns it to the PositionTitle field.
func (o *JobWorthPositionInfo) SetPositionTitle(v string) {
	o.PositionTitle = &v
}

// GetSalaryMax returns the SalaryMax field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetSalaryMax() string {
	if o == nil || IsNil(o.SalaryMax) {
		var ret string
		return ret
	}
	return *o.SalaryMax
}

// GetSalaryMaxOk returns a tuple with the SalaryMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetSalaryMaxOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryMax) {
		return nil, false
	}
	return o.SalaryMax, true
}

// HasSalaryMax returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasSalaryMax() bool {
	if o != nil && !IsNil(o.SalaryMax) {
		return true
	}

	return false
}

// SetSalaryMax gets a reference to the given string and assigns it to the SalaryMax field.
func (o *JobWorthPositionInfo) SetSalaryMax(v string) {
	o.SalaryMax = &v
}

// GetSalaryMin returns the SalaryMin field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetSalaryMin() string {
	if o == nil || IsNil(o.SalaryMin) {
		var ret string
		return ret
	}
	return *o.SalaryMin
}

// GetSalaryMinOk returns a tuple with the SalaryMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetSalaryMinOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryMin) {
		return nil, false
	}
	return o.SalaryMin, true
}

// HasSalaryMin returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasSalaryMin() bool {
	if o != nil && !IsNil(o.SalaryMin) {
		return true
	}

	return false
}

// SetSalaryMin gets a reference to the given string and assigns it to the SalaryMin field.
func (o *JobWorthPositionInfo) SetSalaryMin(v string) {
	o.SalaryMin = &v
}

// GetSalaryType returns the SalaryType field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetSalaryType() string {
	if o == nil || IsNil(o.SalaryType) {
		var ret string
		return ret
	}
	return *o.SalaryType
}

// GetSalaryTypeOk returns a tuple with the SalaryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetSalaryTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryType) {
		return nil, false
	}
	return o.SalaryType, true
}

// HasSalaryType returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasSalaryType() bool {
	if o != nil && !IsNil(o.SalaryType) {
		return true
	}

	return false
}

// SetSalaryType gets a reference to the given string and assigns it to the SalaryType field.
func (o *JobWorthPositionInfo) SetSalaryType(v string) {
	o.SalaryType = &v
}

// GetSalaryUnit returns the SalaryUnit field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetSalaryUnit() string {
	if o == nil || IsNil(o.SalaryUnit) {
		var ret string
		return ret
	}
	return *o.SalaryUnit
}

// GetSalaryUnitOk returns a tuple with the SalaryUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetSalaryUnitOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryUnit) {
		return nil, false
	}
	return o.SalaryUnit, true
}

// HasSalaryUnit returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasSalaryUnit() bool {
	if o != nil && !IsNil(o.SalaryUnit) {
		return true
	}

	return false
}

// SetSalaryUnit gets a reference to the given string and assigns it to the SalaryUnit field.
func (o *JobWorthPositionInfo) SetSalaryUnit(v string) {
	o.SalaryUnit = &v
}

// GetSkillTag returns the SkillTag field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetSkillTag() string {
	if o == nil || IsNil(o.SkillTag) {
		var ret string
		return ret
	}
	return *o.SkillTag
}

// GetSkillTagOk returns a tuple with the SkillTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetSkillTagOk() (*string, bool) {
	if o == nil || IsNil(o.SkillTag) {
		return nil, false
	}
	return o.SkillTag, true
}

// HasSkillTag returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasSkillTag() bool {
	if o != nil && !IsNil(o.SkillTag) {
		return true
	}

	return false
}

// SetSkillTag gets a reference to the given string and assigns it to the SkillTag field.
func (o *JobWorthPositionInfo) SetSkillTag(v string) {
	o.SkillTag = &v
}

// GetSkipUrl returns the SkipUrl field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetSkipUrl() string {
	if o == nil || IsNil(o.SkipUrl) {
		var ret string
		return ret
	}
	return *o.SkipUrl
}

// GetSkipUrlOk returns a tuple with the SkipUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetSkipUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SkipUrl) {
		return nil, false
	}
	return o.SkipUrl, true
}

// HasSkipUrl returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasSkipUrl() bool {
	if o != nil && !IsNil(o.SkipUrl) {
		return true
	}

	return false
}

// SetSkipUrl gets a reference to the given string and assigns it to the SkipUrl field.
func (o *JobWorthPositionInfo) SetSkipUrl(v string) {
	o.SkipUrl = &v
}

// GetWorkCity returns the WorkCity field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetWorkCity() string {
	if o == nil || IsNil(o.WorkCity) {
		var ret string
		return ret
	}
	return *o.WorkCity
}

// GetWorkCityOk returns a tuple with the WorkCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetWorkCityOk() (*string, bool) {
	if o == nil || IsNil(o.WorkCity) {
		return nil, false
	}
	return o.WorkCity, true
}

// HasWorkCity returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasWorkCity() bool {
	if o != nil && !IsNil(o.WorkCity) {
		return true
	}

	return false
}

// SetWorkCity gets a reference to the given string and assigns it to the WorkCity field.
func (o *JobWorthPositionInfo) SetWorkCity(v string) {
	o.WorkCity = &v
}

// GetWorkLongitude returns the WorkLongitude field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetWorkLongitude() string {
	if o == nil || IsNil(o.WorkLongitude) {
		var ret string
		return ret
	}
	return *o.WorkLongitude
}

// GetWorkLongitudeOk returns a tuple with the WorkLongitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetWorkLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.WorkLongitude) {
		return nil, false
	}
	return o.WorkLongitude, true
}

// HasWorkLongitude returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasWorkLongitude() bool {
	if o != nil && !IsNil(o.WorkLongitude) {
		return true
	}

	return false
}

// SetWorkLongitude gets a reference to the given string and assigns it to the WorkLongitude field.
func (o *JobWorthPositionInfo) SetWorkLongitude(v string) {
	o.WorkLongitude = &v
}

// GetWorkRegion returns the WorkRegion field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetWorkRegion() string {
	if o == nil || IsNil(o.WorkRegion) {
		var ret string
		return ret
	}
	return *o.WorkRegion
}

// GetWorkRegionOk returns a tuple with the WorkRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetWorkRegionOk() (*string, bool) {
	if o == nil || IsNil(o.WorkRegion) {
		return nil, false
	}
	return o.WorkRegion, true
}

// HasWorkRegion returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasWorkRegion() bool {
	if o != nil && !IsNil(o.WorkRegion) {
		return true
	}

	return false
}

// SetWorkRegion gets a reference to the given string and assigns it to the WorkRegion field.
func (o *JobWorthPositionInfo) SetWorkRegion(v string) {
	o.WorkRegion = &v
}

// GetWorkYear returns the WorkYear field value if set, zero value otherwise.
func (o *JobWorthPositionInfo) GetWorkYear() string {
	if o == nil || IsNil(o.WorkYear) {
		var ret string
		return ret
	}
	return *o.WorkYear
}

// GetWorkYearOk returns a tuple with the WorkYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthPositionInfo) GetWorkYearOk() (*string, bool) {
	if o == nil || IsNil(o.WorkYear) {
		return nil, false
	}
	return o.WorkYear, true
}

// HasWorkYear returns a boolean if a field has been set.
func (o *JobWorthPositionInfo) HasWorkYear() bool {
	if o != nil && !IsNil(o.WorkYear) {
		return true
	}

	return false
}

// SetWorkYear gets a reference to the given string and assigns it to the WorkYear field.
func (o *JobWorthPositionInfo) SetWorkYear(v string) {
	o.WorkYear = &v
}

func (o JobWorthPositionInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobWorthPositionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if !IsNil(o.Benefit) {
		toSerialize["benefit"] = o.Benefit
	}
	if !IsNil(o.Certifications) {
		toSerialize["certifications"] = o.Certifications
	}
	if !IsNil(o.CompanyCertificate) {
		toSerialize["company_certificate"] = o.CompanyCertificate
	}
	if !IsNil(o.CompanyLogoAftsId) {
		toSerialize["company_logo_afts_id"] = o.CompanyLogoAftsId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Education) {
		toSerialize["education"] = o.Education
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.KaPositionId) {
		toSerialize["ka_position_id"] = o.KaPositionId
	}
	if !IsNil(o.PositionDesc) {
		toSerialize["position_desc"] = o.PositionDesc
	}
	if !IsNil(o.PositionId) {
		toSerialize["position_id"] = o.PositionId
	}
	if !IsNil(o.PositionJobId) {
		toSerialize["position_job_id"] = o.PositionJobId
	}
	if !IsNil(o.PositionJobName) {
		toSerialize["position_job_name"] = o.PositionJobName
	}
	if !IsNil(o.PositionProfessionId) {
		toSerialize["position_profession_id"] = o.PositionProfessionId
	}
	if !IsNil(o.PositionProperty) {
		toSerialize["position_property"] = o.PositionProperty
	}
	if !IsNil(o.PositionStatus) {
		toSerialize["position_status"] = o.PositionStatus
	}
	if !IsNil(o.PositionTitle) {
		toSerialize["position_title"] = o.PositionTitle
	}
	if !IsNil(o.SalaryMax) {
		toSerialize["salary_max"] = o.SalaryMax
	}
	if !IsNil(o.SalaryMin) {
		toSerialize["salary_min"] = o.SalaryMin
	}
	if !IsNil(o.SalaryType) {
		toSerialize["salary_type"] = o.SalaryType
	}
	if !IsNil(o.SalaryUnit) {
		toSerialize["salary_unit"] = o.SalaryUnit
	}
	if !IsNil(o.SkillTag) {
		toSerialize["skill_tag"] = o.SkillTag
	}
	if !IsNil(o.SkipUrl) {
		toSerialize["skip_url"] = o.SkipUrl
	}
	if !IsNil(o.WorkCity) {
		toSerialize["work_city"] = o.WorkCity
	}
	if !IsNil(o.WorkLongitude) {
		toSerialize["work_longitude"] = o.WorkLongitude
	}
	if !IsNil(o.WorkRegion) {
		toSerialize["work_region"] = o.WorkRegion
	}
	if !IsNil(o.WorkYear) {
		toSerialize["work_year"] = o.WorkYear
	}
	return toSerialize, nil
}

type NullableJobWorthPositionInfo struct {
	value *JobWorthPositionInfo
	isSet bool
}

func (v NullableJobWorthPositionInfo) Get() *JobWorthPositionInfo {
	return v.value
}

func (v *NullableJobWorthPositionInfo) Set(val *JobWorthPositionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableJobWorthPositionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableJobWorthPositionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobWorthPositionInfo(val *JobWorthPositionInfo) *NullableJobWorthPositionInfo {
	return &NullableJobWorthPositionInfo{value: val, isSet: true}
}

func (v NullableJobWorthPositionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobWorthPositionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AttachmentDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentDetail{}

// AttachmentDetail struct for AttachmentDetail
type AttachmentDetail struct {
	// 创建流程时指定的附件code，可能为空。（身份证正反面的固定code：正面：ESIGN_IDCARD，背面：ESIGN_BACK_IDCARD）
	Code *string `json:"code,omitempty"`
	// 附件文件名
	FileName *string `json:"file_name,omitempty"`
	// 附件下载地址
	FileUrl *string `json:"file_url,omitempty"`
}

// NewAttachmentDetail instantiates a new AttachmentDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentDetail() *AttachmentDetail {
	this := AttachmentDetail{}
	return &this
}

// NewAttachmentDetailWithDefaults instantiates a new AttachmentDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentDetailWithDefaults() *AttachmentDetail {
	this := AttachmentDetail{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AttachmentDetail) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetail) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AttachmentDetail) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AttachmentDetail) SetCode(v string) {
	o.Code = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *AttachmentDetail) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetail) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *AttachmentDetail) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *AttachmentDetail) SetFileName(v string) {
	o.FileName = &v
}

// GetFileUrl returns the FileUrl field value if set, zero value otherwise.
func (o *AttachmentDetail) GetFileUrl() string {
	if o == nil || IsNil(o.FileUrl) {
		var ret string
		return ret
	}
	return *o.FileUrl
}

// GetFileUrlOk returns a tuple with the FileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentDetail) GetFileUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileUrl) {
		return nil, false
	}
	return o.FileUrl, true
}

// HasFileUrl returns a boolean if a field has been set.
func (o *AttachmentDetail) HasFileUrl() bool {
	if o != nil && !IsNil(o.FileUrl) {
		return true
	}

	return false
}

// SetFileUrl gets a reference to the given string and assigns it to the FileUrl field.
func (o *AttachmentDetail) SetFileUrl(v string) {
	o.FileUrl = &v
}

func (o AttachmentDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileUrl) {
		toSerialize["file_url"] = o.FileUrl
	}
	return toSerialize, nil
}

type NullableAttachmentDetail struct {
	value *AttachmentDetail
	isSet bool
}

func (v NullableAttachmentDetail) Get() *AttachmentDetail {
	return v.value
}

func (v *NullableAttachmentDetail) Set(val *AttachmentDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentDetail(val *AttachmentDetail) *NullableAttachmentDetail {
	return &NullableAttachmentDetail{value: val, isSet: true}
}

func (v NullableAttachmentDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



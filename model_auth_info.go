/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AuthInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthInfo{}

// AuthInfo struct for AuthInfo
type AuthInfo struct {
	// 授权号
	AuthCode *string `json:"auth_code,omitempty"`
	// 授权类型
	AuthType *string `json:"auth_type,omitempty"`
}

// NewAuthInfo instantiates a new AuthInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthInfo() *AuthInfo {
	this := AuthInfo{}
	return &this
}

// NewAuthInfoWithDefaults instantiates a new AuthInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthInfoWithDefaults() *AuthInfo {
	this := AuthInfo{}
	return &this
}

// GetAuthCode returns the AuthCode field value if set, zero value otherwise.
func (o *AuthInfo) GetAuthCode() string {
	if o == nil || IsNil(o.AuthCode) {
		var ret string
		return ret
	}
	return *o.AuthCode
}

// GetAuthCodeOk returns a tuple with the AuthCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthInfo) GetAuthCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthCode) {
		return nil, false
	}
	return o.AuthCode, true
}

// HasAuthCode returns a boolean if a field has been set.
func (o *AuthInfo) HasAuthCode() bool {
	if o != nil && !IsNil(o.AuthCode) {
		return true
	}

	return false
}

// SetAuthCode gets a reference to the given string and assigns it to the AuthCode field.
func (o *AuthInfo) SetAuthCode(v string) {
	o.AuthCode = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *AuthInfo) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthInfo) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *AuthInfo) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *AuthInfo) SetAuthType(v string) {
	o.AuthType = &v
}

func (o AuthInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthCode) {
		toSerialize["auth_code"] = o.AuthCode
	}
	if !IsNil(o.AuthType) {
		toSerialize["auth_type"] = o.AuthType
	}
	return toSerialize, nil
}

type NullableAuthInfo struct {
	value *AuthInfo
	isSet bool
}

func (v NullableAuthInfo) Get() *AuthInfo {
	return v.value
}

func (v *NullableAuthInfo) Set(val *AuthInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthInfo(val *AuthInfo) *NullableAuthInfo {
	return &NullableAuthInfo{value: val, isSet: true}
}

func (v NullableAuthInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExchangeVoucherModify type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangeVoucherModify{}

// ExchangeVoucherModify struct for ExchangeVoucherModify
type ExchangeVoucherModify struct {
	// 领(购)券详情页链接，从支付宝公域跳转到服务商(商户)自定义领(购)券详情页。
	VoucherDetailUrl *string `json:"voucher_detail_url,omitempty"`
	// 对消费者展示的券(商品)名称。
	VoucherName *string `json:"voucher_name,omitempty"`
}

// NewExchangeVoucherModify instantiates a new ExchangeVoucherModify object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeVoucherModify() *ExchangeVoucherModify {
	this := ExchangeVoucherModify{}
	return &this
}

// NewExchangeVoucherModifyWithDefaults instantiates a new ExchangeVoucherModify object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeVoucherModifyWithDefaults() *ExchangeVoucherModify {
	this := ExchangeVoucherModify{}
	return &this
}

// GetVoucherDetailUrl returns the VoucherDetailUrl field value if set, zero value otherwise.
func (o *ExchangeVoucherModify) GetVoucherDetailUrl() string {
	if o == nil || IsNil(o.VoucherDetailUrl) {
		var ret string
		return ret
	}
	return *o.VoucherDetailUrl
}

// GetVoucherDetailUrlOk returns a tuple with the VoucherDetailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeVoucherModify) GetVoucherDetailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherDetailUrl) {
		return nil, false
	}
	return o.VoucherDetailUrl, true
}

// HasVoucherDetailUrl returns a boolean if a field has been set.
func (o *ExchangeVoucherModify) HasVoucherDetailUrl() bool {
	if o != nil && !IsNil(o.VoucherDetailUrl) {
		return true
	}

	return false
}

// SetVoucherDetailUrl gets a reference to the given string and assigns it to the VoucherDetailUrl field.
func (o *ExchangeVoucherModify) SetVoucherDetailUrl(v string) {
	o.VoucherDetailUrl = &v
}

// GetVoucherName returns the VoucherName field value if set, zero value otherwise.
func (o *ExchangeVoucherModify) GetVoucherName() string {
	if o == nil || IsNil(o.VoucherName) {
		var ret string
		return ret
	}
	return *o.VoucherName
}

// GetVoucherNameOk returns a tuple with the VoucherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeVoucherModify) GetVoucherNameOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherName) {
		return nil, false
	}
	return o.VoucherName, true
}

// HasVoucherName returns a boolean if a field has been set.
func (o *ExchangeVoucherModify) HasVoucherName() bool {
	if o != nil && !IsNil(o.VoucherName) {
		return true
	}

	return false
}

// SetVoucherName gets a reference to the given string and assigns it to the VoucherName field.
func (o *ExchangeVoucherModify) SetVoucherName(v string) {
	o.VoucherName = &v
}

func (o ExchangeVoucherModify) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangeVoucherModify) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VoucherDetailUrl) {
		toSerialize["voucher_detail_url"] = o.VoucherDetailUrl
	}
	if !IsNil(o.VoucherName) {
		toSerialize["voucher_name"] = o.VoucherName
	}
	return toSerialize, nil
}

type NullableExchangeVoucherModify struct {
	value *ExchangeVoucherModify
	isSet bool
}

func (v NullableExchangeVoucherModify) Get() *ExchangeVoucherModify {
	return v.value
}

func (v *NullableExchangeVoucherModify) Set(val *ExchangeVoucherModify) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeVoucherModify) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeVoucherModify) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeVoucherModify(val *ExchangeVoucherModify) *NullableExchangeVoucherModify {
	return &NullableExchangeVoucherModify{value: val, isSet: true}
}

func (v NullableExchangeVoucherModify) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeVoucherModify) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



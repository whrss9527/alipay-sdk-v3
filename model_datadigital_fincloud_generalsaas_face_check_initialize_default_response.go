/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
	"fmt"
)

// DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse struct for DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse
type DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse struct {
	CommonErrorType                                                     *CommonErrorType
	DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel *DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CommonErrorType
	err = json.Unmarshal(data, &dst.CommonErrorType)
	if err == nil {
		jsonCommonErrorType, _ := json.Marshal(dst.CommonErrorType)
		if string(jsonCommonErrorType) == "{}" { // empty struct
			dst.CommonErrorType = nil
		} else {
			return nil // data stored in dst.CommonErrorType, return on the first match
		}
	} else {
		dst.CommonErrorType = nil
	}

	// try to unmarshal JSON data into DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel
	err = json.Unmarshal(data, &dst.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel)
	if err == nil {
		jsonDatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel, _ := json.Marshal(dst.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel)
		if string(jsonDatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel) == "{}" { // empty struct
			dst.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel = nil
		} else {
			return nil // data stored in dst.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel, return on the first match
		}
	} else {
		dst.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) MarshalJSON() ([]byte, error) {
	if src.CommonErrorType != nil {
		return json.Marshal(&src.CommonErrorType)
	}

	if src.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel != nil {
		return json.Marshal(&src.DatadigitalFincloudGeneralsaasFaceCheckInitializeErrorResponseModel)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse struct {
	value *DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse
	isSet bool
}

func (v NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) Get() *DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse {
	return v.value
}

func (v *NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) Set(val *DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse(val *DatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) *NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse {
	return &NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse{value: val, isSet: true}
}

func (v NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatadigitalFincloudGeneralsaasFaceCheckInitializeDefaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

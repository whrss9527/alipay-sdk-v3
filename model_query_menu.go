/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the QueryMenu type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryMenu{}

// QueryMenu struct for QueryMenu
type QueryMenu struct {
	// 一级菜单列表
	Button []ButtonObject `json:"button,omitempty"`
	// 标签规则项列表
	LabelRule []QueryLabelRule `json:"label_rule,omitempty"`
	// 菜单唯一id
	MenuKey *string `json:"menu_key,omitempty"`
	// 菜单类型，icon：icon型菜单，text：文本型菜单
	Type *string `json:"type,omitempty"`
}

// NewQueryMenu instantiates a new QueryMenu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryMenu() *QueryMenu {
	this := QueryMenu{}
	return &this
}

// NewQueryMenuWithDefaults instantiates a new QueryMenu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryMenuWithDefaults() *QueryMenu {
	this := QueryMenu{}
	return &this
}

// GetButton returns the Button field value if set, zero value otherwise.
func (o *QueryMenu) GetButton() []ButtonObject {
	if o == nil || IsNil(o.Button) {
		var ret []ButtonObject
		return ret
	}
	return o.Button
}

// GetButtonOk returns a tuple with the Button field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMenu) GetButtonOk() ([]ButtonObject, bool) {
	if o == nil || IsNil(o.Button) {
		return nil, false
	}
	return o.Button, true
}

// HasButton returns a boolean if a field has been set.
func (o *QueryMenu) HasButton() bool {
	if o != nil && !IsNil(o.Button) {
		return true
	}

	return false
}

// SetButton gets a reference to the given []ButtonObject and assigns it to the Button field.
func (o *QueryMenu) SetButton(v []ButtonObject) {
	o.Button = v
}

// GetLabelRule returns the LabelRule field value if set, zero value otherwise.
func (o *QueryMenu) GetLabelRule() []QueryLabelRule {
	if o == nil || IsNil(o.LabelRule) {
		var ret []QueryLabelRule
		return ret
	}
	return o.LabelRule
}

// GetLabelRuleOk returns a tuple with the LabelRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMenu) GetLabelRuleOk() ([]QueryLabelRule, bool) {
	if o == nil || IsNil(o.LabelRule) {
		return nil, false
	}
	return o.LabelRule, true
}

// HasLabelRule returns a boolean if a field has been set.
func (o *QueryMenu) HasLabelRule() bool {
	if o != nil && !IsNil(o.LabelRule) {
		return true
	}

	return false
}

// SetLabelRule gets a reference to the given []QueryLabelRule and assigns it to the LabelRule field.
func (o *QueryMenu) SetLabelRule(v []QueryLabelRule) {
	o.LabelRule = v
}

// GetMenuKey returns the MenuKey field value if set, zero value otherwise.
func (o *QueryMenu) GetMenuKey() string {
	if o == nil || IsNil(o.MenuKey) {
		var ret string
		return ret
	}
	return *o.MenuKey
}

// GetMenuKeyOk returns a tuple with the MenuKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMenu) GetMenuKeyOk() (*string, bool) {
	if o == nil || IsNil(o.MenuKey) {
		return nil, false
	}
	return o.MenuKey, true
}

// HasMenuKey returns a boolean if a field has been set.
func (o *QueryMenu) HasMenuKey() bool {
	if o != nil && !IsNil(o.MenuKey) {
		return true
	}

	return false
}

// SetMenuKey gets a reference to the given string and assigns it to the MenuKey field.
func (o *QueryMenu) SetMenuKey(v string) {
	o.MenuKey = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QueryMenu) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMenu) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QueryMenu) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QueryMenu) SetType(v string) {
	o.Type = &v
}

func (o QueryMenu) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryMenu) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Button) {
		toSerialize["button"] = o.Button
	}
	if !IsNil(o.LabelRule) {
		toSerialize["label_rule"] = o.LabelRule
	}
	if !IsNil(o.MenuKey) {
		toSerialize["menu_key"] = o.MenuKey
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableQueryMenu struct {
	value *QueryMenu
	isSet bool
}

func (v NullableQueryMenu) Get() *QueryMenu {
	return v.value
}

func (v *NullableQueryMenu) Set(val *QueryMenu) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryMenu) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryMenu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryMenu(val *QueryMenu) *NullableQueryMenu {
	return &NullableQueryMenu{value: val, isSet: true}
}

func (v NullableQueryMenu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryMenu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

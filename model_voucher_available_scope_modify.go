/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherAvailableScopeModify type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherAvailableScopeModify{}

// VoucherAvailableScopeModify struct for VoucherAvailableScopeModify
type VoucherAvailableScopeModify struct {
	// 可用范围修改类型。
	ModifyType                    *string                              `json:"modify_type,omitempty"`
	OrderVoucherAvailableCityCode *OrderVoucherAvailableCityCodeModify `json:"order_voucher_available_city_code,omitempty"`
	OrderVoucherAvailableShop     *OrderVoucherAvailableShopModify     `json:"order_voucher_available_shop,omitempty"`
}

// NewVoucherAvailableScopeModify instantiates a new VoucherAvailableScopeModify object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherAvailableScopeModify() *VoucherAvailableScopeModify {
	this := VoucherAvailableScopeModify{}
	return &this
}

// NewVoucherAvailableScopeModifyWithDefaults instantiates a new VoucherAvailableScopeModify object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherAvailableScopeModifyWithDefaults() *VoucherAvailableScopeModify {
	this := VoucherAvailableScopeModify{}
	return &this
}

// GetModifyType returns the ModifyType field value if set, zero value otherwise.
func (o *VoucherAvailableScopeModify) GetModifyType() string {
	if o == nil || IsNil(o.ModifyType) {
		var ret string
		return ret
	}
	return *o.ModifyType
}

// GetModifyTypeOk returns a tuple with the ModifyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableScopeModify) GetModifyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ModifyType) {
		return nil, false
	}
	return o.ModifyType, true
}

// HasModifyType returns a boolean if a field has been set.
func (o *VoucherAvailableScopeModify) HasModifyType() bool {
	if o != nil && !IsNil(o.ModifyType) {
		return true
	}

	return false
}

// SetModifyType gets a reference to the given string and assigns it to the ModifyType field.
func (o *VoucherAvailableScopeModify) SetModifyType(v string) {
	o.ModifyType = &v
}

// GetOrderVoucherAvailableCityCode returns the OrderVoucherAvailableCityCode field value if set, zero value otherwise.
func (o *VoucherAvailableScopeModify) GetOrderVoucherAvailableCityCode() OrderVoucherAvailableCityCodeModify {
	if o == nil || IsNil(o.OrderVoucherAvailableCityCode) {
		var ret OrderVoucherAvailableCityCodeModify
		return ret
	}
	return *o.OrderVoucherAvailableCityCode
}

// GetOrderVoucherAvailableCityCodeOk returns a tuple with the OrderVoucherAvailableCityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableScopeModify) GetOrderVoucherAvailableCityCodeOk() (*OrderVoucherAvailableCityCodeModify, bool) {
	if o == nil || IsNil(o.OrderVoucherAvailableCityCode) {
		return nil, false
	}
	return o.OrderVoucherAvailableCityCode, true
}

// HasOrderVoucherAvailableCityCode returns a boolean if a field has been set.
func (o *VoucherAvailableScopeModify) HasOrderVoucherAvailableCityCode() bool {
	if o != nil && !IsNil(o.OrderVoucherAvailableCityCode) {
		return true
	}

	return false
}

// SetOrderVoucherAvailableCityCode gets a reference to the given OrderVoucherAvailableCityCodeModify and assigns it to the OrderVoucherAvailableCityCode field.
func (o *VoucherAvailableScopeModify) SetOrderVoucherAvailableCityCode(v OrderVoucherAvailableCityCodeModify) {
	o.OrderVoucherAvailableCityCode = &v
}

// GetOrderVoucherAvailableShop returns the OrderVoucherAvailableShop field value if set, zero value otherwise.
func (o *VoucherAvailableScopeModify) GetOrderVoucherAvailableShop() OrderVoucherAvailableShopModify {
	if o == nil || IsNil(o.OrderVoucherAvailableShop) {
		var ret OrderVoucherAvailableShopModify
		return ret
	}
	return *o.OrderVoucherAvailableShop
}

// GetOrderVoucherAvailableShopOk returns a tuple with the OrderVoucherAvailableShop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableScopeModify) GetOrderVoucherAvailableShopOk() (*OrderVoucherAvailableShopModify, bool) {
	if o == nil || IsNil(o.OrderVoucherAvailableShop) {
		return nil, false
	}
	return o.OrderVoucherAvailableShop, true
}

// HasOrderVoucherAvailableShop returns a boolean if a field has been set.
func (o *VoucherAvailableScopeModify) HasOrderVoucherAvailableShop() bool {
	if o != nil && !IsNil(o.OrderVoucherAvailableShop) {
		return true
	}

	return false
}

// SetOrderVoucherAvailableShop gets a reference to the given OrderVoucherAvailableShopModify and assigns it to the OrderVoucherAvailableShop field.
func (o *VoucherAvailableScopeModify) SetOrderVoucherAvailableShop(v OrderVoucherAvailableShopModify) {
	o.OrderVoucherAvailableShop = &v
}

func (o VoucherAvailableScopeModify) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherAvailableScopeModify) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ModifyType) {
		toSerialize["modify_type"] = o.ModifyType
	}
	if !IsNil(o.OrderVoucherAvailableCityCode) {
		toSerialize["order_voucher_available_city_code"] = o.OrderVoucherAvailableCityCode
	}
	if !IsNil(o.OrderVoucherAvailableShop) {
		toSerialize["order_voucher_available_shop"] = o.OrderVoucherAvailableShop
	}
	return toSerialize, nil
}

type NullableVoucherAvailableScopeModify struct {
	value *VoucherAvailableScopeModify
	isSet bool
}

func (v NullableVoucherAvailableScopeModify) Get() *VoucherAvailableScopeModify {
	return v.value
}

func (v *NullableVoucherAvailableScopeModify) Set(val *VoucherAvailableScopeModify) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherAvailableScopeModify) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherAvailableScopeModify) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherAvailableScopeModify(val *VoucherAvailableScopeModify) *NullableVoucherAvailableScopeModify {
	return &NullableVoucherAvailableScopeModify{value: val, isSet: true}
}

func (v NullableVoucherAvailableScopeModify) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherAvailableScopeModify) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

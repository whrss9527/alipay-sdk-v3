/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaidOuterCardPriceDetailDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaidOuterCardPriceDetailDTO{}

// PaidOuterCardPriceDetailDTO struct for PaidOuterCardPriceDetailDTO
type PaidOuterCardPriceDetailDTO struct {
	// 方案描述
	Desc *string `json:"desc,omitempty"`
	// 售卖具体金额。单位为元。支持两位小数。
	Price *string `json:"price,omitempty"`
	// 售卖金额类型
	PriceType *string `json:"price_type,omitempty"`
	// 价值。单位为元。支持两位小数
	Worth *string `json:"worth,omitempty"`
}

// NewPaidOuterCardPriceDetailDTO instantiates a new PaidOuterCardPriceDetailDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaidOuterCardPriceDetailDTO() *PaidOuterCardPriceDetailDTO {
	this := PaidOuterCardPriceDetailDTO{}
	return &this
}

// NewPaidOuterCardPriceDetailDTOWithDefaults instantiates a new PaidOuterCardPriceDetailDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaidOuterCardPriceDetailDTOWithDefaults() *PaidOuterCardPriceDetailDTO {
	this := PaidOuterCardPriceDetailDTO{}
	return &this
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *PaidOuterCardPriceDetailDTO) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPriceDetailDTO) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *PaidOuterCardPriceDetailDTO) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *PaidOuterCardPriceDetailDTO) SetDesc(v string) {
	o.Desc = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PaidOuterCardPriceDetailDTO) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPriceDetailDTO) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PaidOuterCardPriceDetailDTO) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *PaidOuterCardPriceDetailDTO) SetPrice(v string) {
	o.Price = &v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *PaidOuterCardPriceDetailDTO) GetPriceType() string {
	if o == nil || IsNil(o.PriceType) {
		var ret string
		return ret
	}
	return *o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPriceDetailDTO) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *PaidOuterCardPriceDetailDTO) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *PaidOuterCardPriceDetailDTO) SetPriceType(v string) {
	o.PriceType = &v
}

// GetWorth returns the Worth field value if set, zero value otherwise.
func (o *PaidOuterCardPriceDetailDTO) GetWorth() string {
	if o == nil || IsNil(o.Worth) {
		var ret string
		return ret
	}
	return *o.Worth
}

// GetWorthOk returns a tuple with the Worth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaidOuterCardPriceDetailDTO) GetWorthOk() (*string, bool) {
	if o == nil || IsNil(o.Worth) {
		return nil, false
	}
	return o.Worth, true
}

// HasWorth returns a boolean if a field has been set.
func (o *PaidOuterCardPriceDetailDTO) HasWorth() bool {
	if o != nil && !IsNil(o.Worth) {
		return true
	}

	return false
}

// SetWorth gets a reference to the given string and assigns it to the Worth field.
func (o *PaidOuterCardPriceDetailDTO) SetWorth(v string) {
	o.Worth = &v
}

func (o PaidOuterCardPriceDetailDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaidOuterCardPriceDetailDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceType) {
		toSerialize["price_type"] = o.PriceType
	}
	if !IsNil(o.Worth) {
		toSerialize["worth"] = o.Worth
	}
	return toSerialize, nil
}

type NullablePaidOuterCardPriceDetailDTO struct {
	value *PaidOuterCardPriceDetailDTO
	isSet bool
}

func (v NullablePaidOuterCardPriceDetailDTO) Get() *PaidOuterCardPriceDetailDTO {
	return v.value
}

func (v *NullablePaidOuterCardPriceDetailDTO) Set(val *PaidOuterCardPriceDetailDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePaidOuterCardPriceDetailDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePaidOuterCardPriceDetailDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaidOuterCardPriceDetailDTO(val *PaidOuterCardPriceDetailDTO) *NullablePaidOuterCardPriceDetailDTO {
	return &NullablePaidOuterCardPriceDetailDTO{value: val, isSet: true}
}

func (v NullablePaidOuterCardPriceDetailDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaidOuterCardPriceDetailDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



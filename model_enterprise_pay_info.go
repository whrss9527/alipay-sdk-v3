/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnterprisePayInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnterprisePayInfo{}

// EnterprisePayInfo struct for EnterprisePayInfo
type EnterprisePayInfo struct {
	// 因公付业务信息
	BizInfo *string `json:"biz_info,omitempty"`
	// 开票金额
	InvoiceAmount *string `json:"invoice_amount,omitempty"`
	// 是否包含因公付资产
	IsUseEnterprisePay *bool `json:"is_use_enterprise_pay,omitempty"`
}

// NewEnterprisePayInfo instantiates a new EnterprisePayInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterprisePayInfo() *EnterprisePayInfo {
	this := EnterprisePayInfo{}
	return &this
}

// NewEnterprisePayInfoWithDefaults instantiates a new EnterprisePayInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterprisePayInfoWithDefaults() *EnterprisePayInfo {
	this := EnterprisePayInfo{}
	return &this
}

// GetBizInfo returns the BizInfo field value if set, zero value otherwise.
func (o *EnterprisePayInfo) GetBizInfo() string {
	if o == nil || IsNil(o.BizInfo) {
		var ret string
		return ret
	}
	return *o.BizInfo
}

// GetBizInfoOk returns a tuple with the BizInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterprisePayInfo) GetBizInfoOk() (*string, bool) {
	if o == nil || IsNil(o.BizInfo) {
		return nil, false
	}
	return o.BizInfo, true
}

// HasBizInfo returns a boolean if a field has been set.
func (o *EnterprisePayInfo) HasBizInfo() bool {
	if o != nil && !IsNil(o.BizInfo) {
		return true
	}

	return false
}

// SetBizInfo gets a reference to the given string and assigns it to the BizInfo field.
func (o *EnterprisePayInfo) SetBizInfo(v string) {
	o.BizInfo = &v
}

// GetInvoiceAmount returns the InvoiceAmount field value if set, zero value otherwise.
func (o *EnterprisePayInfo) GetInvoiceAmount() string {
	if o == nil || IsNil(o.InvoiceAmount) {
		var ret string
		return ret
	}
	return *o.InvoiceAmount
}

// GetInvoiceAmountOk returns a tuple with the InvoiceAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterprisePayInfo) GetInvoiceAmountOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceAmount) {
		return nil, false
	}
	return o.InvoiceAmount, true
}

// HasInvoiceAmount returns a boolean if a field has been set.
func (o *EnterprisePayInfo) HasInvoiceAmount() bool {
	if o != nil && !IsNil(o.InvoiceAmount) {
		return true
	}

	return false
}

// SetInvoiceAmount gets a reference to the given string and assigns it to the InvoiceAmount field.
func (o *EnterprisePayInfo) SetInvoiceAmount(v string) {
	o.InvoiceAmount = &v
}

// GetIsUseEnterprisePay returns the IsUseEnterprisePay field value if set, zero value otherwise.
func (o *EnterprisePayInfo) GetIsUseEnterprisePay() bool {
	if o == nil || IsNil(o.IsUseEnterprisePay) {
		var ret bool
		return ret
	}
	return *o.IsUseEnterprisePay
}

// GetIsUseEnterprisePayOk returns a tuple with the IsUseEnterprisePay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterprisePayInfo) GetIsUseEnterprisePayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseEnterprisePay) {
		return nil, false
	}
	return o.IsUseEnterprisePay, true
}

// HasIsUseEnterprisePay returns a boolean if a field has been set.
func (o *EnterprisePayInfo) HasIsUseEnterprisePay() bool {
	if o != nil && !IsNil(o.IsUseEnterprisePay) {
		return true
	}

	return false
}

// SetIsUseEnterprisePay gets a reference to the given bool and assigns it to the IsUseEnterprisePay field.
func (o *EnterprisePayInfo) SetIsUseEnterprisePay(v bool) {
	o.IsUseEnterprisePay = &v
}

func (o EnterprisePayInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterprisePayInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BizInfo) {
		toSerialize["biz_info"] = o.BizInfo
	}
	if !IsNil(o.InvoiceAmount) {
		toSerialize["invoice_amount"] = o.InvoiceAmount
	}
	if !IsNil(o.IsUseEnterprisePay) {
		toSerialize["is_use_enterprise_pay"] = o.IsUseEnterprisePay
	}
	return toSerialize, nil
}

type NullableEnterprisePayInfo struct {
	value *EnterprisePayInfo
	isSet bool
}

func (v NullableEnterprisePayInfo) Get() *EnterprisePayInfo {
	return v.value
}

func (v *NullableEnterprisePayInfo) Set(val *EnterprisePayInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterprisePayInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterprisePayInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterprisePayInfo(val *EnterprisePayInfo) *NullableEnterprisePayInfo {
	return &NullableEnterprisePayInfo{value: val, isSet: true}
}

func (v NullableEnterprisePayInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterprisePayInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



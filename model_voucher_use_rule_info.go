/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherUseRuleInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherUseRuleInfo{}

// VoucherUseRuleInfo struct for VoucherUseRuleInfo
type VoucherUseRuleInfo struct {
	// 核销次数限制。
	QuantityLimitPerUser *int32 `json:"quantity_limit_per_user,omitempty"`
	// 周期限领配置,限制每人在固定周期内领取张数(voucher_quantity_limit_per_user),默认LIFE_CYCLE
	QuantityLimitPerUserPeriodType *string `json:"quantity_limit_per_user_period_type,omitempty"`
	// 券最大核销次数。
	VoucherMaxUseTimes *int32 `json:"voucher_max_use_times,omitempty"`
	// 自定义扩展信息
	VoucherUseExtInfo  *string             `json:"voucher_use_ext_info,omitempty"`
	VoucherUseTimeInfo *VoucherUseTimeInfo `json:"voucher_use_time_info,omitempty"`
}

// NewVoucherUseRuleInfo instantiates a new VoucherUseRuleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherUseRuleInfo() *VoucherUseRuleInfo {
	this := VoucherUseRuleInfo{}
	return &this
}

// NewVoucherUseRuleInfoWithDefaults instantiates a new VoucherUseRuleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherUseRuleInfoWithDefaults() *VoucherUseRuleInfo {
	this := VoucherUseRuleInfo{}
	return &this
}

// GetQuantityLimitPerUser returns the QuantityLimitPerUser field value if set, zero value otherwise.
func (o *VoucherUseRuleInfo) GetQuantityLimitPerUser() int32 {
	if o == nil || IsNil(o.QuantityLimitPerUser) {
		var ret int32
		return ret
	}
	return *o.QuantityLimitPerUser
}

// GetQuantityLimitPerUserOk returns a tuple with the QuantityLimitPerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseRuleInfo) GetQuantityLimitPerUserOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityLimitPerUser) {
		return nil, false
	}
	return o.QuantityLimitPerUser, true
}

// HasQuantityLimitPerUser returns a boolean if a field has been set.
func (o *VoucherUseRuleInfo) HasQuantityLimitPerUser() bool {
	if o != nil && !IsNil(o.QuantityLimitPerUser) {
		return true
	}

	return false
}

// SetQuantityLimitPerUser gets a reference to the given int32 and assigns it to the QuantityLimitPerUser field.
func (o *VoucherUseRuleInfo) SetQuantityLimitPerUser(v int32) {
	o.QuantityLimitPerUser = &v
}

// GetQuantityLimitPerUserPeriodType returns the QuantityLimitPerUserPeriodType field value if set, zero value otherwise.
func (o *VoucherUseRuleInfo) GetQuantityLimitPerUserPeriodType() string {
	if o == nil || IsNil(o.QuantityLimitPerUserPeriodType) {
		var ret string
		return ret
	}
	return *o.QuantityLimitPerUserPeriodType
}

// GetQuantityLimitPerUserPeriodTypeOk returns a tuple with the QuantityLimitPerUserPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseRuleInfo) GetQuantityLimitPerUserPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QuantityLimitPerUserPeriodType) {
		return nil, false
	}
	return o.QuantityLimitPerUserPeriodType, true
}

// HasQuantityLimitPerUserPeriodType returns a boolean if a field has been set.
func (o *VoucherUseRuleInfo) HasQuantityLimitPerUserPeriodType() bool {
	if o != nil && !IsNil(o.QuantityLimitPerUserPeriodType) {
		return true
	}

	return false
}

// SetQuantityLimitPerUserPeriodType gets a reference to the given string and assigns it to the QuantityLimitPerUserPeriodType field.
func (o *VoucherUseRuleInfo) SetQuantityLimitPerUserPeriodType(v string) {
	o.QuantityLimitPerUserPeriodType = &v
}

// GetVoucherMaxUseTimes returns the VoucherMaxUseTimes field value if set, zero value otherwise.
func (o *VoucherUseRuleInfo) GetVoucherMaxUseTimes() int32 {
	if o == nil || IsNil(o.VoucherMaxUseTimes) {
		var ret int32
		return ret
	}
	return *o.VoucherMaxUseTimes
}

// GetVoucherMaxUseTimesOk returns a tuple with the VoucherMaxUseTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseRuleInfo) GetVoucherMaxUseTimesOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherMaxUseTimes) {
		return nil, false
	}
	return o.VoucherMaxUseTimes, true
}

// HasVoucherMaxUseTimes returns a boolean if a field has been set.
func (o *VoucherUseRuleInfo) HasVoucherMaxUseTimes() bool {
	if o != nil && !IsNil(o.VoucherMaxUseTimes) {
		return true
	}

	return false
}

// SetVoucherMaxUseTimes gets a reference to the given int32 and assigns it to the VoucherMaxUseTimes field.
func (o *VoucherUseRuleInfo) SetVoucherMaxUseTimes(v int32) {
	o.VoucherMaxUseTimes = &v
}

// GetVoucherUseExtInfo returns the VoucherUseExtInfo field value if set, zero value otherwise.
func (o *VoucherUseRuleInfo) GetVoucherUseExtInfo() string {
	if o == nil || IsNil(o.VoucherUseExtInfo) {
		var ret string
		return ret
	}
	return *o.VoucherUseExtInfo
}

// GetVoucherUseExtInfoOk returns a tuple with the VoucherUseExtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseRuleInfo) GetVoucherUseExtInfoOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherUseExtInfo) {
		return nil, false
	}
	return o.VoucherUseExtInfo, true
}

// HasVoucherUseExtInfo returns a boolean if a field has been set.
func (o *VoucherUseRuleInfo) HasVoucherUseExtInfo() bool {
	if o != nil && !IsNil(o.VoucherUseExtInfo) {
		return true
	}

	return false
}

// SetVoucherUseExtInfo gets a reference to the given string and assigns it to the VoucherUseExtInfo field.
func (o *VoucherUseRuleInfo) SetVoucherUseExtInfo(v string) {
	o.VoucherUseExtInfo = &v
}

// GetVoucherUseTimeInfo returns the VoucherUseTimeInfo field value if set, zero value otherwise.
func (o *VoucherUseRuleInfo) GetVoucherUseTimeInfo() VoucherUseTimeInfo {
	if o == nil || IsNil(o.VoucherUseTimeInfo) {
		var ret VoucherUseTimeInfo
		return ret
	}
	return *o.VoucherUseTimeInfo
}

// GetVoucherUseTimeInfoOk returns a tuple with the VoucherUseTimeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseRuleInfo) GetVoucherUseTimeInfoOk() (*VoucherUseTimeInfo, bool) {
	if o == nil || IsNil(o.VoucherUseTimeInfo) {
		return nil, false
	}
	return o.VoucherUseTimeInfo, true
}

// HasVoucherUseTimeInfo returns a boolean if a field has been set.
func (o *VoucherUseRuleInfo) HasVoucherUseTimeInfo() bool {
	if o != nil && !IsNil(o.VoucherUseTimeInfo) {
		return true
	}

	return false
}

// SetVoucherUseTimeInfo gets a reference to the given VoucherUseTimeInfo and assigns it to the VoucherUseTimeInfo field.
func (o *VoucherUseRuleInfo) SetVoucherUseTimeInfo(v VoucherUseTimeInfo) {
	o.VoucherUseTimeInfo = &v
}

func (o VoucherUseRuleInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherUseRuleInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuantityLimitPerUser) {
		toSerialize["quantity_limit_per_user"] = o.QuantityLimitPerUser
	}
	if !IsNil(o.QuantityLimitPerUserPeriodType) {
		toSerialize["quantity_limit_per_user_period_type"] = o.QuantityLimitPerUserPeriodType
	}
	if !IsNil(o.VoucherMaxUseTimes) {
		toSerialize["voucher_max_use_times"] = o.VoucherMaxUseTimes
	}
	if !IsNil(o.VoucherUseExtInfo) {
		toSerialize["voucher_use_ext_info"] = o.VoucherUseExtInfo
	}
	if !IsNil(o.VoucherUseTimeInfo) {
		toSerialize["voucher_use_time_info"] = o.VoucherUseTimeInfo
	}
	return toSerialize, nil
}

type NullableVoucherUseRuleInfo struct {
	value *VoucherUseRuleInfo
	isSet bool
}

func (v NullableVoucherUseRuleInfo) Get() *VoucherUseRuleInfo {
	return v.value
}

func (v *NullableVoucherUseRuleInfo) Set(val *VoucherUseRuleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherUseRuleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherUseRuleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherUseRuleInfo(val *VoucherUseRuleInfo) *NullableVoucherUseRuleInfo {
	return &NullableVoucherUseRuleInfo{value: val, isSet: true}
}

func (v NullableVoucherUseRuleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherUseRuleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AttachmentExplainBean type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentExplainBean{}

// AttachmentExplainBean struct for AttachmentExplainBean
type AttachmentExplainBean struct {
	// 页面展示的任务描（collect_attachement值为true时必填）
	Description *string `json:"description,omitempty"`
	// 附件列表，用于定义每个附件code的描述及页面展示顺序
	Details []DetailBean `json:"details,omitempty"`
	// 页面展示的任务标题（collect_attachement值为true时必填）
	Title *string `json:"title,omitempty"`
}

// NewAttachmentExplainBean instantiates a new AttachmentExplainBean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentExplainBean() *AttachmentExplainBean {
	this := AttachmentExplainBean{}
	return &this
}

// NewAttachmentExplainBeanWithDefaults instantiates a new AttachmentExplainBean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentExplainBeanWithDefaults() *AttachmentExplainBean {
	this := AttachmentExplainBean{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AttachmentExplainBean) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplainBean) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AttachmentExplainBean) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AttachmentExplainBean) SetDescription(v string) {
	o.Description = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AttachmentExplainBean) GetDetails() []DetailBean {
	if o == nil || IsNil(o.Details) {
		var ret []DetailBean
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplainBean) GetDetailsOk() ([]DetailBean, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *AttachmentExplainBean) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []DetailBean and assigns it to the Details field.
func (o *AttachmentExplainBean) SetDetails(v []DetailBean) {
	o.Details = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AttachmentExplainBean) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplainBean) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AttachmentExplainBean) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AttachmentExplainBean) SetTitle(v string) {
	o.Title = &v
}

func (o AttachmentExplainBean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentExplainBean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAttachmentExplainBean struct {
	value *AttachmentExplainBean
	isSet bool
}

func (v NullableAttachmentExplainBean) Get() *AttachmentExplainBean {
	return v.value
}

func (v *NullableAttachmentExplainBean) Set(val *AttachmentExplainBean) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentExplainBean) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentExplainBean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentExplainBean(val *AttachmentExplainBean) *NullableAttachmentExplainBean {
	return &NullableAttachmentExplainBean{value: val, isSet: true}
}

func (v NullableAttachmentExplainBean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentExplainBean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



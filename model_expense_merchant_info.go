/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ExpenseMerchantInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpenseMerchantInfo{}

// ExpenseMerchantInfo struct for ExpenseMerchantInfo
type ExpenseMerchantInfo struct {
	// 商户名称
	MerchantName *string `json:"merchant_name,omitempty"`
	// 商户ID
	Pid *string `json:"pid,omitempty"`
	// 商户ID
	RoleId *string `json:"role_id,omitempty"`
	// 角色类型 0-直连商户 1-间联商户
	RoleType *string `json:"role_type,omitempty"`
	// 门店ID
	ShopId *string `json:"shop_id,omitempty"`
	// 门店名称
	ShopName *string `json:"shop_name,omitempty"`
}

// NewExpenseMerchantInfo instantiates a new ExpenseMerchantInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpenseMerchantInfo() *ExpenseMerchantInfo {
	this := ExpenseMerchantInfo{}
	return &this
}

// NewExpenseMerchantInfoWithDefaults instantiates a new ExpenseMerchantInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpenseMerchantInfoWithDefaults() *ExpenseMerchantInfo {
	this := ExpenseMerchantInfo{}
	return &this
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise.
func (o *ExpenseMerchantInfo) GetMerchantName() string {
	if o == nil || IsNil(o.MerchantName) {
		var ret string
		return ret
	}
	return *o.MerchantName
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseMerchantInfo) GetMerchantNameOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantName) {
		return nil, false
	}
	return o.MerchantName, true
}

// HasMerchantName returns a boolean if a field has been set.
func (o *ExpenseMerchantInfo) HasMerchantName() bool {
	if o != nil && !IsNil(o.MerchantName) {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given string and assigns it to the MerchantName field.
func (o *ExpenseMerchantInfo) SetMerchantName(v string) {
	o.MerchantName = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *ExpenseMerchantInfo) GetPid() string {
	if o == nil || IsNil(o.Pid) {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseMerchantInfo) GetPidOk() (*string, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *ExpenseMerchantInfo) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *ExpenseMerchantInfo) SetPid(v string) {
	o.Pid = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *ExpenseMerchantInfo) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseMerchantInfo) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *ExpenseMerchantInfo) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *ExpenseMerchantInfo) SetRoleId(v string) {
	o.RoleId = &v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *ExpenseMerchantInfo) GetRoleType() string {
	if o == nil || IsNil(o.RoleType) {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseMerchantInfo) GetRoleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoleType) {
		return nil, false
	}
	return o.RoleType, true
}

// HasRoleType returns a boolean if a field has been set.
func (o *ExpenseMerchantInfo) HasRoleType() bool {
	if o != nil && !IsNil(o.RoleType) {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *ExpenseMerchantInfo) SetRoleType(v string) {
	o.RoleType = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ExpenseMerchantInfo) GetShopId() string {
	if o == nil || IsNil(o.ShopId) {
		var ret string
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseMerchantInfo) GetShopIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ExpenseMerchantInfo) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given string and assigns it to the ShopId field.
func (o *ExpenseMerchantInfo) SetShopId(v string) {
	o.ShopId = &v
}

// GetShopName returns the ShopName field value if set, zero value otherwise.
func (o *ExpenseMerchantInfo) GetShopName() string {
	if o == nil || IsNil(o.ShopName) {
		var ret string
		return ret
	}
	return *o.ShopName
}

// GetShopNameOk returns a tuple with the ShopName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseMerchantInfo) GetShopNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopName) {
		return nil, false
	}
	return o.ShopName, true
}

// HasShopName returns a boolean if a field has been set.
func (o *ExpenseMerchantInfo) HasShopName() bool {
	if o != nil && !IsNil(o.ShopName) {
		return true
	}

	return false
}

// SetShopName gets a reference to the given string and assigns it to the ShopName field.
func (o *ExpenseMerchantInfo) SetShopName(v string) {
	o.ShopName = &v
}

func (o ExpenseMerchantInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpenseMerchantInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MerchantName) {
		toSerialize["merchant_name"] = o.MerchantName
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.RoleId) {
		toSerialize["role_id"] = o.RoleId
	}
	if !IsNil(o.RoleType) {
		toSerialize["role_type"] = o.RoleType
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.ShopName) {
		toSerialize["shop_name"] = o.ShopName
	}
	return toSerialize, nil
}

type NullableExpenseMerchantInfo struct {
	value *ExpenseMerchantInfo
	isSet bool
}

func (v NullableExpenseMerchantInfo) Get() *ExpenseMerchantInfo {
	return v.value
}

func (v *NullableExpenseMerchantInfo) Set(val *ExpenseMerchantInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableExpenseMerchantInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableExpenseMerchantInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpenseMerchantInfo(val *ExpenseMerchantInfo) *NullableExpenseMerchantInfo {
	return &NullableExpenseMerchantInfo{value: val, isSet: true}
}

func (v NullableExpenseMerchantInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpenseMerchantInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

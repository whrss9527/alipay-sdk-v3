/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SpecialVoucher type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecialVoucher{}

// SpecialVoucher struct for SpecialVoucher
type SpecialVoucher struct {
	// 门槛金额。说明：该字段可不填，认为无门槛;
	FloorAmount *string `json:"floor_amount,omitempty"`
	// 商品名称。
	GoodsName *string `json:"goods_name,omitempty"`
	// 原价。 限制： 币种为人民币，单位为元。小数点以后最多保留两位; 取值范围:0.1<=x<=9999。
	OriginAmount *string `json:"origin_amount,omitempty"`
	// 特价，即：原价-特价=优惠金额。
	SpecialAmount *string `json:"special_amount,omitempty"`
}

// NewSpecialVoucher instantiates a new SpecialVoucher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecialVoucher() *SpecialVoucher {
	this := SpecialVoucher{}
	return &this
}

// NewSpecialVoucherWithDefaults instantiates a new SpecialVoucher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecialVoucherWithDefaults() *SpecialVoucher {
	this := SpecialVoucher{}
	return &this
}

// GetFloorAmount returns the FloorAmount field value if set, zero value otherwise.
func (o *SpecialVoucher) GetFloorAmount() string {
	if o == nil || IsNil(o.FloorAmount) {
		var ret string
		return ret
	}
	return *o.FloorAmount
}

// GetFloorAmountOk returns a tuple with the FloorAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecialVoucher) GetFloorAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FloorAmount) {
		return nil, false
	}
	return o.FloorAmount, true
}

// HasFloorAmount returns a boolean if a field has been set.
func (o *SpecialVoucher) HasFloorAmount() bool {
	if o != nil && !IsNil(o.FloorAmount) {
		return true
	}

	return false
}

// SetFloorAmount gets a reference to the given string and assigns it to the FloorAmount field.
func (o *SpecialVoucher) SetFloorAmount(v string) {
	o.FloorAmount = &v
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *SpecialVoucher) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecialVoucher) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *SpecialVoucher) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *SpecialVoucher) SetGoodsName(v string) {
	o.GoodsName = &v
}

// GetOriginAmount returns the OriginAmount field value if set, zero value otherwise.
func (o *SpecialVoucher) GetOriginAmount() string {
	if o == nil || IsNil(o.OriginAmount) {
		var ret string
		return ret
	}
	return *o.OriginAmount
}

// GetOriginAmountOk returns a tuple with the OriginAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecialVoucher) GetOriginAmountOk() (*string, bool) {
	if o == nil || IsNil(o.OriginAmount) {
		return nil, false
	}
	return o.OriginAmount, true
}

// HasOriginAmount returns a boolean if a field has been set.
func (o *SpecialVoucher) HasOriginAmount() bool {
	if o != nil && !IsNil(o.OriginAmount) {
		return true
	}

	return false
}

// SetOriginAmount gets a reference to the given string and assigns it to the OriginAmount field.
func (o *SpecialVoucher) SetOriginAmount(v string) {
	o.OriginAmount = &v
}

// GetSpecialAmount returns the SpecialAmount field value if set, zero value otherwise.
func (o *SpecialVoucher) GetSpecialAmount() string {
	if o == nil || IsNil(o.SpecialAmount) {
		var ret string
		return ret
	}
	return *o.SpecialAmount
}

// GetSpecialAmountOk returns a tuple with the SpecialAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecialVoucher) GetSpecialAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SpecialAmount) {
		return nil, false
	}
	return o.SpecialAmount, true
}

// HasSpecialAmount returns a boolean if a field has been set.
func (o *SpecialVoucher) HasSpecialAmount() bool {
	if o != nil && !IsNil(o.SpecialAmount) {
		return true
	}

	return false
}

// SetSpecialAmount gets a reference to the given string and assigns it to the SpecialAmount field.
func (o *SpecialVoucher) SetSpecialAmount(v string) {
	o.SpecialAmount = &v
}

func (o SpecialVoucher) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecialVoucher) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FloorAmount) {
		toSerialize["floor_amount"] = o.FloorAmount
	}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	if !IsNil(o.OriginAmount) {
		toSerialize["origin_amount"] = o.OriginAmount
	}
	if !IsNil(o.SpecialAmount) {
		toSerialize["special_amount"] = o.SpecialAmount
	}
	return toSerialize, nil
}

type NullableSpecialVoucher struct {
	value *SpecialVoucher
	isSet bool
}

func (v NullableSpecialVoucher) Get() *SpecialVoucher {
	return v.value
}

func (v *NullableSpecialVoucher) Set(val *SpecialVoucher) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecialVoucher) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecialVoucher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecialVoucher(val *SpecialVoucher) *NullableSpecialVoucher {
	return &NullableSpecialVoucher{value: val, isSet: true}
}

func (v NullableSpecialVoucher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecialVoucher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



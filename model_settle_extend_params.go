/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the SettleExtendParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettleExtendParams{}

// SettleExtendParams struct for SettleExtendParams
type SettleExtendParams struct {
	// \"冻结分账场景下生效，其他场景传入无效。代表该交易分账是否完结，可选值：true/false，不传默认为false。true：代表分账完结，则本次分账处理完成后会把该笔交易的剩余冻结金额全额解冻。false：代表分账未完结。\"
	RoyaltyFinish *string `json:"royalty_finish,omitempty"`
}

// NewSettleExtendParams instantiates a new SettleExtendParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettleExtendParams() *SettleExtendParams {
	this := SettleExtendParams{}
	return &this
}

// NewSettleExtendParamsWithDefaults instantiates a new SettleExtendParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettleExtendParamsWithDefaults() *SettleExtendParams {
	this := SettleExtendParams{}
	return &this
}

// GetRoyaltyFinish returns the RoyaltyFinish field value if set, zero value otherwise.
func (o *SettleExtendParams) GetRoyaltyFinish() string {
	if o == nil || IsNil(o.RoyaltyFinish) {
		var ret string
		return ret
	}
	return *o.RoyaltyFinish
}

// GetRoyaltyFinishOk returns a tuple with the RoyaltyFinish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleExtendParams) GetRoyaltyFinishOk() (*string, bool) {
	if o == nil || IsNil(o.RoyaltyFinish) {
		return nil, false
	}
	return o.RoyaltyFinish, true
}

// HasRoyaltyFinish returns a boolean if a field has been set.
func (o *SettleExtendParams) HasRoyaltyFinish() bool {
	if o != nil && !IsNil(o.RoyaltyFinish) {
		return true
	}

	return false
}

// SetRoyaltyFinish gets a reference to the given string and assigns it to the RoyaltyFinish field.
func (o *SettleExtendParams) SetRoyaltyFinish(v string) {
	o.RoyaltyFinish = &v
}

func (o SettleExtendParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettleExtendParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoyaltyFinish) {
		toSerialize["royalty_finish"] = o.RoyaltyFinish
	}
	return toSerialize, nil
}

type NullableSettleExtendParams struct {
	value *SettleExtendParams
	isSet bool
}

func (v NullableSettleExtendParams) Get() *SettleExtendParams {
	return v.value
}

func (v *NullableSettleExtendParams) Set(val *SettleExtendParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSettleExtendParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSettleExtendParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettleExtendParams(val *SettleExtendParams) *NullableSettleExtendParams {
	return &NullableSettleExtendParams{value: val, isSet: true}
}

func (v NullableSettleExtendParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettleExtendParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SpuDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpuDetail{}

// SpuDetail struct for SpuDetail
type SpuDetail struct {
	// 商品品牌
	Brand *string `json:"brand,omitempty"`
	// 商品类目
	Category *string `json:"category,omitempty"`
	// 商品规格
	Dimension *string `json:"dimension,omitempty"`
	// 商品图片地址
	Icon *string `json:"icon,omitempty"`
	// 商品链接
	LinkUrl *string `json:"link_url,omitempty"`
	// 商品ID
	SpuId *string `json:"spu_id,omitempty"`
	// 商品名称
	Title *string `json:"title,omitempty"`
}

// NewSpuDetail instantiates a new SpuDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpuDetail() *SpuDetail {
	this := SpuDetail{}
	return &this
}

// NewSpuDetailWithDefaults instantiates a new SpuDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpuDetailWithDefaults() *SpuDetail {
	this := SpuDetail{}
	return &this
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *SpuDetail) GetBrand() string {
	if o == nil || IsNil(o.Brand) {
		var ret string
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetBrandOk() (*string, bool) {
	if o == nil || IsNil(o.Brand) {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *SpuDetail) HasBrand() bool {
	if o != nil && !IsNil(o.Brand) {
		return true
	}

	return false
}

// SetBrand gets a reference to the given string and assigns it to the Brand field.
func (o *SpuDetail) SetBrand(v string) {
	o.Brand = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SpuDetail) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SpuDetail) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *SpuDetail) SetCategory(v string) {
	o.Category = &v
}

// GetDimension returns the Dimension field value if set, zero value otherwise.
func (o *SpuDetail) GetDimension() string {
	if o == nil || IsNil(o.Dimension) {
		var ret string
		return ret
	}
	return *o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetDimensionOk() (*string, bool) {
	if o == nil || IsNil(o.Dimension) {
		return nil, false
	}
	return o.Dimension, true
}

// HasDimension returns a boolean if a field has been set.
func (o *SpuDetail) HasDimension() bool {
	if o != nil && !IsNil(o.Dimension) {
		return true
	}

	return false
}

// SetDimension gets a reference to the given string and assigns it to the Dimension field.
func (o *SpuDetail) SetDimension(v string) {
	o.Dimension = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *SpuDetail) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *SpuDetail) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *SpuDetail) SetIcon(v string) {
	o.Icon = &v
}

// GetLinkUrl returns the LinkUrl field value if set, zero value otherwise.
func (o *SpuDetail) GetLinkUrl() string {
	if o == nil || IsNil(o.LinkUrl) {
		var ret string
		return ret
	}
	return *o.LinkUrl
}

// GetLinkUrlOk returns a tuple with the LinkUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetLinkUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LinkUrl) {
		return nil, false
	}
	return o.LinkUrl, true
}

// HasLinkUrl returns a boolean if a field has been set.
func (o *SpuDetail) HasLinkUrl() bool {
	if o != nil && !IsNil(o.LinkUrl) {
		return true
	}

	return false
}

// SetLinkUrl gets a reference to the given string and assigns it to the LinkUrl field.
func (o *SpuDetail) SetLinkUrl(v string) {
	o.LinkUrl = &v
}

// GetSpuId returns the SpuId field value if set, zero value otherwise.
func (o *SpuDetail) GetSpuId() string {
	if o == nil || IsNil(o.SpuId) {
		var ret string
		return ret
	}
	return *o.SpuId
}

// GetSpuIdOk returns a tuple with the SpuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetSpuIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpuId) {
		return nil, false
	}
	return o.SpuId, true
}

// HasSpuId returns a boolean if a field has been set.
func (o *SpuDetail) HasSpuId() bool {
	if o != nil && !IsNil(o.SpuId) {
		return true
	}

	return false
}

// SetSpuId gets a reference to the given string and assigns it to the SpuId field.
func (o *SpuDetail) SetSpuId(v string) {
	o.SpuId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SpuDetail) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuDetail) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SpuDetail) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SpuDetail) SetTitle(v string) {
	o.Title = &v
}

func (o SpuDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpuDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Brand) {
		toSerialize["brand"] = o.Brand
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Dimension) {
		toSerialize["dimension"] = o.Dimension
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.LinkUrl) {
		toSerialize["link_url"] = o.LinkUrl
	}
	if !IsNil(o.SpuId) {
		toSerialize["spu_id"] = o.SpuId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableSpuDetail struct {
	value *SpuDetail
	isSet bool
}

func (v NullableSpuDetail) Get() *SpuDetail {
	return v.value
}

func (v *NullableSpuDetail) Set(val *SpuDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableSpuDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableSpuDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpuDetail(val *SpuDetail) *NullableSpuDetail {
	return &NullableSpuDetail{value: val, isSet: true}
}

func (v NullableSpuDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpuDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



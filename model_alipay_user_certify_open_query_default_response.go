/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// AlipayUserCertifyOpenQueryDefaultResponse struct for AlipayUserCertifyOpenQueryDefaultResponse
type AlipayUserCertifyOpenQueryDefaultResponse struct {
	AlipayUserCertifyOpenQueryErrorResponseModel *AlipayUserCertifyOpenQueryErrorResponseModel
	CommonErrorType *CommonErrorType
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *AlipayUserCertifyOpenQueryDefaultResponse) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AlipayUserCertifyOpenQueryErrorResponseModel
	err = json.Unmarshal(data, &dst.AlipayUserCertifyOpenQueryErrorResponseModel);
	if err == nil {
		jsonAlipayUserCertifyOpenQueryErrorResponseModel, _ := json.Marshal(dst.AlipayUserCertifyOpenQueryErrorResponseModel)
		if string(jsonAlipayUserCertifyOpenQueryErrorResponseModel) == "{}" { // empty struct
			dst.AlipayUserCertifyOpenQueryErrorResponseModel = nil
		} else {
			return nil // data stored in dst.AlipayUserCertifyOpenQueryErrorResponseModel, return on the first match
		}
	} else {
		dst.AlipayUserCertifyOpenQueryErrorResponseModel = nil
	}

	// try to unmarshal JSON data into CommonErrorType
	err = json.Unmarshal(data, &dst.CommonErrorType);
	if err == nil {
		jsonCommonErrorType, _ := json.Marshal(dst.CommonErrorType)
		if string(jsonCommonErrorType) == "{}" { // empty struct
			dst.CommonErrorType = nil
		} else {
			return nil // data stored in dst.CommonErrorType, return on the first match
		}
	} else {
		dst.CommonErrorType = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(AlipayUserCertifyOpenQueryDefaultResponse)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *AlipayUserCertifyOpenQueryDefaultResponse) MarshalJSON() ([]byte, error) {
	if src.AlipayUserCertifyOpenQueryErrorResponseModel != nil {
		return json.Marshal(&src.AlipayUserCertifyOpenQueryErrorResponseModel)
	}

	if src.CommonErrorType != nil {
		return json.Marshal(&src.CommonErrorType)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableAlipayUserCertifyOpenQueryDefaultResponse struct {
	value *AlipayUserCertifyOpenQueryDefaultResponse
	isSet bool
}

func (v NullableAlipayUserCertifyOpenQueryDefaultResponse) Get() *AlipayUserCertifyOpenQueryDefaultResponse {
	return v.value
}

func (v *NullableAlipayUserCertifyOpenQueryDefaultResponse) Set(val *AlipayUserCertifyOpenQueryDefaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAlipayUserCertifyOpenQueryDefaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAlipayUserCertifyOpenQueryDefaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlipayUserCertifyOpenQueryDefaultResponse(val *AlipayUserCertifyOpenQueryDefaultResponse) *NullableAlipayUserCertifyOpenQueryDefaultResponse {
	return &NullableAlipayUserCertifyOpenQueryDefaultResponse{value: val, isSet: true}
}

func (v NullableAlipayUserCertifyOpenQueryDefaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlipayUserCertifyOpenQueryDefaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



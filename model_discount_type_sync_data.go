/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DiscountTypeSyncData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscountTypeSyncData{}

// DiscountTypeSyncData struct for DiscountTypeSyncData
type DiscountTypeSyncData struct {
	// 商户回传的优惠金额，如用户享受的红包金额，单位元
	DiscountAmount *string `json:"discount_amount,omitempty"`
	// 商户数据回传的优惠信息的名称。
	DiscountDesc *string `json:"discount_desc,omitempty"`
}

// NewDiscountTypeSyncData instantiates a new DiscountTypeSyncData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscountTypeSyncData() *DiscountTypeSyncData {
	this := DiscountTypeSyncData{}
	return &this
}

// NewDiscountTypeSyncDataWithDefaults instantiates a new DiscountTypeSyncData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountTypeSyncDataWithDefaults() *DiscountTypeSyncData {
	this := DiscountTypeSyncData{}
	return &this
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *DiscountTypeSyncData) GetDiscountAmount() string {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret string
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountTypeSyncData) GetDiscountAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *DiscountTypeSyncData) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given string and assigns it to the DiscountAmount field.
func (o *DiscountTypeSyncData) SetDiscountAmount(v string) {
	o.DiscountAmount = &v
}

// GetDiscountDesc returns the DiscountDesc field value if set, zero value otherwise.
func (o *DiscountTypeSyncData) GetDiscountDesc() string {
	if o == nil || IsNil(o.DiscountDesc) {
		var ret string
		return ret
	}
	return *o.DiscountDesc
}

// GetDiscountDescOk returns a tuple with the DiscountDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountTypeSyncData) GetDiscountDescOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountDesc) {
		return nil, false
	}
	return o.DiscountDesc, true
}

// HasDiscountDesc returns a boolean if a field has been set.
func (o *DiscountTypeSyncData) HasDiscountDesc() bool {
	if o != nil && !IsNil(o.DiscountDesc) {
		return true
	}

	return false
}

// SetDiscountDesc gets a reference to the given string and assigns it to the DiscountDesc field.
func (o *DiscountTypeSyncData) SetDiscountDesc(v string) {
	o.DiscountDesc = &v
}

func (o DiscountTypeSyncData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscountTypeSyncData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountDesc) {
		toSerialize["discount_desc"] = o.DiscountDesc
	}
	return toSerialize, nil
}

type NullableDiscountTypeSyncData struct {
	value *DiscountTypeSyncData
	isSet bool
}

func (v NullableDiscountTypeSyncData) Get() *DiscountTypeSyncData {
	return v.value
}

func (v *NullableDiscountTypeSyncData) Set(val *DiscountTypeSyncData) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscountTypeSyncData) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscountTypeSyncData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscountTypeSyncData(val *DiscountTypeSyncData) *NullableDiscountTypeSyncData {
	return &NullableDiscountTypeSyncData{value: val, isSet: true}
}

func (v NullableDiscountTypeSyncData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscountTypeSyncData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



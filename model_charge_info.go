/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChargeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargeInfo{}

// ChargeInfo struct for ChargeInfo
type ChargeInfo struct {
	// 实收费用
	ChargeFee *string `json:"charge_fee,omitempty"`
	// 收单手续费trade，花呗分期手续hbfq，其他手续费charge
	ChargeType *string `json:"charge_type,omitempty"`
	// 是否合约指定收费账号出资，值为\"Y\"或\"N\"
	IsRatingOnSwitch *string `json:"is_rating_on_switch,omitempty"`
	// 是否收款账号出资，值为\"Y\"或\"N\"
	IsRatingOnTradeReceiver *string `json:"is_rating_on_trade_receiver,omitempty"`
	// 原始费用
	OriginalChargeFee *string `json:"original_charge_fee,omitempty"`
	// 组合支付收费明细
	SubFeeDetailList []SubFee `json:"sub_fee_detail_list,omitempty"`
	// 签约费率
	SwitchFeeRate *string `json:"switch_fee_rate,omitempty"`
}

// NewChargeInfo instantiates a new ChargeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargeInfo() *ChargeInfo {
	this := ChargeInfo{}
	return &this
}

// NewChargeInfoWithDefaults instantiates a new ChargeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargeInfoWithDefaults() *ChargeInfo {
	this := ChargeInfo{}
	return &this
}

// GetChargeFee returns the ChargeFee field value if set, zero value otherwise.
func (o *ChargeInfo) GetChargeFee() string {
	if o == nil || IsNil(o.ChargeFee) {
		var ret string
		return ret
	}
	return *o.ChargeFee
}

// GetChargeFeeOk returns a tuple with the ChargeFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetChargeFeeOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeFee) {
		return nil, false
	}
	return o.ChargeFee, true
}

// HasChargeFee returns a boolean if a field has been set.
func (o *ChargeInfo) HasChargeFee() bool {
	if o != nil && !IsNil(o.ChargeFee) {
		return true
	}

	return false
}

// SetChargeFee gets a reference to the given string and assigns it to the ChargeFee field.
func (o *ChargeInfo) SetChargeFee(v string) {
	o.ChargeFee = &v
}

// GetChargeType returns the ChargeType field value if set, zero value otherwise.
func (o *ChargeInfo) GetChargeType() string {
	if o == nil || IsNil(o.ChargeType) {
		var ret string
		return ret
	}
	return *o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetChargeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeType) {
		return nil, false
	}
	return o.ChargeType, true
}

// HasChargeType returns a boolean if a field has been set.
func (o *ChargeInfo) HasChargeType() bool {
	if o != nil && !IsNil(o.ChargeType) {
		return true
	}

	return false
}

// SetChargeType gets a reference to the given string and assigns it to the ChargeType field.
func (o *ChargeInfo) SetChargeType(v string) {
	o.ChargeType = &v
}

// GetIsRatingOnSwitch returns the IsRatingOnSwitch field value if set, zero value otherwise.
func (o *ChargeInfo) GetIsRatingOnSwitch() string {
	if o == nil || IsNil(o.IsRatingOnSwitch) {
		var ret string
		return ret
	}
	return *o.IsRatingOnSwitch
}

// GetIsRatingOnSwitchOk returns a tuple with the IsRatingOnSwitch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetIsRatingOnSwitchOk() (*string, bool) {
	if o == nil || IsNil(o.IsRatingOnSwitch) {
		return nil, false
	}
	return o.IsRatingOnSwitch, true
}

// HasIsRatingOnSwitch returns a boolean if a field has been set.
func (o *ChargeInfo) HasIsRatingOnSwitch() bool {
	if o != nil && !IsNil(o.IsRatingOnSwitch) {
		return true
	}

	return false
}

// SetIsRatingOnSwitch gets a reference to the given string and assigns it to the IsRatingOnSwitch field.
func (o *ChargeInfo) SetIsRatingOnSwitch(v string) {
	o.IsRatingOnSwitch = &v
}

// GetIsRatingOnTradeReceiver returns the IsRatingOnTradeReceiver field value if set, zero value otherwise.
func (o *ChargeInfo) GetIsRatingOnTradeReceiver() string {
	if o == nil || IsNil(o.IsRatingOnTradeReceiver) {
		var ret string
		return ret
	}
	return *o.IsRatingOnTradeReceiver
}

// GetIsRatingOnTradeReceiverOk returns a tuple with the IsRatingOnTradeReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetIsRatingOnTradeReceiverOk() (*string, bool) {
	if o == nil || IsNil(o.IsRatingOnTradeReceiver) {
		return nil, false
	}
	return o.IsRatingOnTradeReceiver, true
}

// HasIsRatingOnTradeReceiver returns a boolean if a field has been set.
func (o *ChargeInfo) HasIsRatingOnTradeReceiver() bool {
	if o != nil && !IsNil(o.IsRatingOnTradeReceiver) {
		return true
	}

	return false
}

// SetIsRatingOnTradeReceiver gets a reference to the given string and assigns it to the IsRatingOnTradeReceiver field.
func (o *ChargeInfo) SetIsRatingOnTradeReceiver(v string) {
	o.IsRatingOnTradeReceiver = &v
}

// GetOriginalChargeFee returns the OriginalChargeFee field value if set, zero value otherwise.
func (o *ChargeInfo) GetOriginalChargeFee() string {
	if o == nil || IsNil(o.OriginalChargeFee) {
		var ret string
		return ret
	}
	return *o.OriginalChargeFee
}

// GetOriginalChargeFeeOk returns a tuple with the OriginalChargeFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetOriginalChargeFeeOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalChargeFee) {
		return nil, false
	}
	return o.OriginalChargeFee, true
}

// HasOriginalChargeFee returns a boolean if a field has been set.
func (o *ChargeInfo) HasOriginalChargeFee() bool {
	if o != nil && !IsNil(o.OriginalChargeFee) {
		return true
	}

	return false
}

// SetOriginalChargeFee gets a reference to the given string and assigns it to the OriginalChargeFee field.
func (o *ChargeInfo) SetOriginalChargeFee(v string) {
	o.OriginalChargeFee = &v
}

// GetSubFeeDetailList returns the SubFeeDetailList field value if set, zero value otherwise.
func (o *ChargeInfo) GetSubFeeDetailList() []SubFee {
	if o == nil || IsNil(o.SubFeeDetailList) {
		var ret []SubFee
		return ret
	}
	return o.SubFeeDetailList
}

// GetSubFeeDetailListOk returns a tuple with the SubFeeDetailList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetSubFeeDetailListOk() ([]SubFee, bool) {
	if o == nil || IsNil(o.SubFeeDetailList) {
		return nil, false
	}
	return o.SubFeeDetailList, true
}

// HasSubFeeDetailList returns a boolean if a field has been set.
func (o *ChargeInfo) HasSubFeeDetailList() bool {
	if o != nil && !IsNil(o.SubFeeDetailList) {
		return true
	}

	return false
}

// SetSubFeeDetailList gets a reference to the given []SubFee and assigns it to the SubFeeDetailList field.
func (o *ChargeInfo) SetSubFeeDetailList(v []SubFee) {
	o.SubFeeDetailList = v
}

// GetSwitchFeeRate returns the SwitchFeeRate field value if set, zero value otherwise.
func (o *ChargeInfo) GetSwitchFeeRate() string {
	if o == nil || IsNil(o.SwitchFeeRate) {
		var ret string
		return ret
	}
	return *o.SwitchFeeRate
}

// GetSwitchFeeRateOk returns a tuple with the SwitchFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeInfo) GetSwitchFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.SwitchFeeRate) {
		return nil, false
	}
	return o.SwitchFeeRate, true
}

// HasSwitchFeeRate returns a boolean if a field has been set.
func (o *ChargeInfo) HasSwitchFeeRate() bool {
	if o != nil && !IsNil(o.SwitchFeeRate) {
		return true
	}

	return false
}

// SetSwitchFeeRate gets a reference to the given string and assigns it to the SwitchFeeRate field.
func (o *ChargeInfo) SetSwitchFeeRate(v string) {
	o.SwitchFeeRate = &v
}

func (o ChargeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChargeFee) {
		toSerialize["charge_fee"] = o.ChargeFee
	}
	if !IsNil(o.ChargeType) {
		toSerialize["charge_type"] = o.ChargeType
	}
	if !IsNil(o.IsRatingOnSwitch) {
		toSerialize["is_rating_on_switch"] = o.IsRatingOnSwitch
	}
	if !IsNil(o.IsRatingOnTradeReceiver) {
		toSerialize["is_rating_on_trade_receiver"] = o.IsRatingOnTradeReceiver
	}
	if !IsNil(o.OriginalChargeFee) {
		toSerialize["original_charge_fee"] = o.OriginalChargeFee
	}
	if !IsNil(o.SubFeeDetailList) {
		toSerialize["sub_fee_detail_list"] = o.SubFeeDetailList
	}
	if !IsNil(o.SwitchFeeRate) {
		toSerialize["switch_fee_rate"] = o.SwitchFeeRate
	}
	return toSerialize, nil
}

type NullableChargeInfo struct {
	value *ChargeInfo
	isSet bool
}

func (v NullableChargeInfo) Get() *ChargeInfo {
	return v.value
}

func (v *NullableChargeInfo) Set(val *ChargeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableChargeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableChargeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargeInfo(val *ChargeInfo) *NullableChargeInfo {
	return &NullableChargeInfo{value: val, isSet: true}
}

func (v NullableChargeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



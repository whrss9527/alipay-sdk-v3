/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the MemberStatusRespDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberStatusRespDTO{}

// MemberStatusRespDTO struct for MemberStatusRespDTO
type MemberStatusRespDTO struct {
	// 用户支付宝会员openid
	OpenId *string `json:"open_id,omitempty"`
	// 员工当前状态： 邀请中（PROCESSING）、正常（NORMAL）、不在企业中（OUT）
	Status *string `json:"status,omitempty"`
	// 用户支付宝2088会员号
	UserId *string `json:"user_id,omitempty"`
}

// NewMemberStatusRespDTO instantiates a new MemberStatusRespDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberStatusRespDTO() *MemberStatusRespDTO {
	this := MemberStatusRespDTO{}
	return &this
}

// NewMemberStatusRespDTOWithDefaults instantiates a new MemberStatusRespDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberStatusRespDTOWithDefaults() *MemberStatusRespDTO {
	this := MemberStatusRespDTO{}
	return &this
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *MemberStatusRespDTO) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberStatusRespDTO) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *MemberStatusRespDTO) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *MemberStatusRespDTO) SetOpenId(v string) {
	o.OpenId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MemberStatusRespDTO) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberStatusRespDTO) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MemberStatusRespDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MemberStatusRespDTO) SetStatus(v string) {
	o.Status = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MemberStatusRespDTO) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberStatusRespDTO) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MemberStatusRespDTO) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MemberStatusRespDTO) SetUserId(v string) {
	o.UserId = &v
}

func (o MemberStatusRespDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberStatusRespDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableMemberStatusRespDTO struct {
	value *MemberStatusRespDTO
	isSet bool
}

func (v NullableMemberStatusRespDTO) Get() *MemberStatusRespDTO {
	return v.value
}

func (v *NullableMemberStatusRespDTO) Set(val *MemberStatusRespDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberStatusRespDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberStatusRespDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberStatusRespDTO(val *MemberStatusRespDTO) *NullableMemberStatusRespDTO {
	return &NullableMemberStatusRespDTO{value: val, isSet: true}
}

func (v NullableMemberStatusRespDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberStatusRespDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

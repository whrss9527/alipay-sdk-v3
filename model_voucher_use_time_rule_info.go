/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherUseTimeRuleInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherUseTimeRuleInfo{}

// VoucherUseTimeRuleInfo struct for VoucherUseTimeRuleInfo
type VoucherUseTimeRuleInfo struct {
	DateRuleInfo    *DateRuleInfo    `json:"date_rule_info,omitempty"`
	HolidayRuleInfo *HolidayRuleInfo `json:"holiday_rule_info,omitempty"`
	// 规则类型
	RuleType     *string       `json:"rule_type,omitempty"`
	WeekRuleInfo *WeekRuleInfo `json:"week_rule_info,omitempty"`
}

// NewVoucherUseTimeRuleInfo instantiates a new VoucherUseTimeRuleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherUseTimeRuleInfo() *VoucherUseTimeRuleInfo {
	this := VoucherUseTimeRuleInfo{}
	return &this
}

// NewVoucherUseTimeRuleInfoWithDefaults instantiates a new VoucherUseTimeRuleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherUseTimeRuleInfoWithDefaults() *VoucherUseTimeRuleInfo {
	this := VoucherUseTimeRuleInfo{}
	return &this
}

// GetDateRuleInfo returns the DateRuleInfo field value if set, zero value otherwise.
func (o *VoucherUseTimeRuleInfo) GetDateRuleInfo() DateRuleInfo {
	if o == nil || IsNil(o.DateRuleInfo) {
		var ret DateRuleInfo
		return ret
	}
	return *o.DateRuleInfo
}

// GetDateRuleInfoOk returns a tuple with the DateRuleInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeRuleInfo) GetDateRuleInfoOk() (*DateRuleInfo, bool) {
	if o == nil || IsNil(o.DateRuleInfo) {
		return nil, false
	}
	return o.DateRuleInfo, true
}

// HasDateRuleInfo returns a boolean if a field has been set.
func (o *VoucherUseTimeRuleInfo) HasDateRuleInfo() bool {
	if o != nil && !IsNil(o.DateRuleInfo) {
		return true
	}

	return false
}

// SetDateRuleInfo gets a reference to the given DateRuleInfo and assigns it to the DateRuleInfo field.
func (o *VoucherUseTimeRuleInfo) SetDateRuleInfo(v DateRuleInfo) {
	o.DateRuleInfo = &v
}

// GetHolidayRuleInfo returns the HolidayRuleInfo field value if set, zero value otherwise.
func (o *VoucherUseTimeRuleInfo) GetHolidayRuleInfo() HolidayRuleInfo {
	if o == nil || IsNil(o.HolidayRuleInfo) {
		var ret HolidayRuleInfo
		return ret
	}
	return *o.HolidayRuleInfo
}

// GetHolidayRuleInfoOk returns a tuple with the HolidayRuleInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeRuleInfo) GetHolidayRuleInfoOk() (*HolidayRuleInfo, bool) {
	if o == nil || IsNil(o.HolidayRuleInfo) {
		return nil, false
	}
	return o.HolidayRuleInfo, true
}

// HasHolidayRuleInfo returns a boolean if a field has been set.
func (o *VoucherUseTimeRuleInfo) HasHolidayRuleInfo() bool {
	if o != nil && !IsNil(o.HolidayRuleInfo) {
		return true
	}

	return false
}

// SetHolidayRuleInfo gets a reference to the given HolidayRuleInfo and assigns it to the HolidayRuleInfo field.
func (o *VoucherUseTimeRuleInfo) SetHolidayRuleInfo(v HolidayRuleInfo) {
	o.HolidayRuleInfo = &v
}

// GetRuleType returns the RuleType field value if set, zero value otherwise.
func (o *VoucherUseTimeRuleInfo) GetRuleType() string {
	if o == nil || IsNil(o.RuleType) {
		var ret string
		return ret
	}
	return *o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeRuleInfo) GetRuleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleType) {
		return nil, false
	}
	return o.RuleType, true
}

// HasRuleType returns a boolean if a field has been set.
func (o *VoucherUseTimeRuleInfo) HasRuleType() bool {
	if o != nil && !IsNil(o.RuleType) {
		return true
	}

	return false
}

// SetRuleType gets a reference to the given string and assigns it to the RuleType field.
func (o *VoucherUseTimeRuleInfo) SetRuleType(v string) {
	o.RuleType = &v
}

// GetWeekRuleInfo returns the WeekRuleInfo field value if set, zero value otherwise.
func (o *VoucherUseTimeRuleInfo) GetWeekRuleInfo() WeekRuleInfo {
	if o == nil || IsNil(o.WeekRuleInfo) {
		var ret WeekRuleInfo
		return ret
	}
	return *o.WeekRuleInfo
}

// GetWeekRuleInfoOk returns a tuple with the WeekRuleInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeRuleInfo) GetWeekRuleInfoOk() (*WeekRuleInfo, bool) {
	if o == nil || IsNil(o.WeekRuleInfo) {
		return nil, false
	}
	return o.WeekRuleInfo, true
}

// HasWeekRuleInfo returns a boolean if a field has been set.
func (o *VoucherUseTimeRuleInfo) HasWeekRuleInfo() bool {
	if o != nil && !IsNil(o.WeekRuleInfo) {
		return true
	}

	return false
}

// SetWeekRuleInfo gets a reference to the given WeekRuleInfo and assigns it to the WeekRuleInfo field.
func (o *VoucherUseTimeRuleInfo) SetWeekRuleInfo(v WeekRuleInfo) {
	o.WeekRuleInfo = &v
}

func (o VoucherUseTimeRuleInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherUseTimeRuleInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateRuleInfo) {
		toSerialize["date_rule_info"] = o.DateRuleInfo
	}
	if !IsNil(o.HolidayRuleInfo) {
		toSerialize["holiday_rule_info"] = o.HolidayRuleInfo
	}
	if !IsNil(o.RuleType) {
		toSerialize["rule_type"] = o.RuleType
	}
	if !IsNil(o.WeekRuleInfo) {
		toSerialize["week_rule_info"] = o.WeekRuleInfo
	}
	return toSerialize, nil
}

type NullableVoucherUseTimeRuleInfo struct {
	value *VoucherUseTimeRuleInfo
	isSet bool
}

func (v NullableVoucherUseTimeRuleInfo) Get() *VoucherUseTimeRuleInfo {
	return v.value
}

func (v *NullableVoucherUseTimeRuleInfo) Set(val *VoucherUseTimeRuleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherUseTimeRuleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherUseTimeRuleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherUseTimeRuleInfo(val *VoucherUseTimeRuleInfo) *NullableVoucherUseTimeRuleInfo {
	return &NullableVoucherUseTimeRuleInfo{value: val, isSet: true}
}

func (v NullableVoucherUseTimeRuleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherUseTimeRuleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

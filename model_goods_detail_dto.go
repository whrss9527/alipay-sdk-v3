/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GoodsDetailDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsDetailDTO{}

// GoodsDetailDTO struct for GoodsDetailDTO
type GoodsDetailDTO struct {
	// 商品编号
	GoodsId *string `json:"goods_id,omitempty"`
	// 商品名称
	GoodsName *string `json:"goods_name,omitempty"`
	// 商品单价。单位 元  精确到小数点后2位。
	Price *string `json:"price,omitempty"`
	// 商品数量
	Quantity *int32 `json:"quantity,omitempty"`
}

// NewGoodsDetailDTO instantiates a new GoodsDetailDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsDetailDTO() *GoodsDetailDTO {
	this := GoodsDetailDTO{}
	return &this
}

// NewGoodsDetailDTOWithDefaults instantiates a new GoodsDetailDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsDetailDTOWithDefaults() *GoodsDetailDTO {
	this := GoodsDetailDTO{}
	return &this
}

// GetGoodsId returns the GoodsId field value if set, zero value otherwise.
func (o *GoodsDetailDTO) GetGoodsId() string {
	if o == nil || IsNil(o.GoodsId) {
		var ret string
		return ret
	}
	return *o.GoodsId
}

// GetGoodsIdOk returns a tuple with the GoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailDTO) GetGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsId) {
		return nil, false
	}
	return o.GoodsId, true
}

// HasGoodsId returns a boolean if a field has been set.
func (o *GoodsDetailDTO) HasGoodsId() bool {
	if o != nil && !IsNil(o.GoodsId) {
		return true
	}

	return false
}

// SetGoodsId gets a reference to the given string and assigns it to the GoodsId field.
func (o *GoodsDetailDTO) SetGoodsId(v string) {
	o.GoodsId = &v
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *GoodsDetailDTO) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailDTO) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *GoodsDetailDTO) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *GoodsDetailDTO) SetGoodsName(v string) {
	o.GoodsName = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GoodsDetailDTO) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailDTO) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GoodsDetailDTO) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *GoodsDetailDTO) SetPrice(v string) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *GoodsDetailDTO) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailDTO) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *GoodsDetailDTO) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *GoodsDetailDTO) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o GoodsDetailDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsDetailDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoodsId) {
		toSerialize["goods_id"] = o.GoodsId
	}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	return toSerialize, nil
}

type NullableGoodsDetailDTO struct {
	value *GoodsDetailDTO
	isSet bool
}

func (v NullableGoodsDetailDTO) Get() *GoodsDetailDTO {
	return v.value
}

func (v *NullableGoodsDetailDTO) Set(val *GoodsDetailDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsDetailDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsDetailDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsDetailDTO(val *GoodsDetailDTO) *NullableGoodsDetailDTO {
	return &NullableGoodsDetailDTO{value: val, isSet: true}
}

func (v NullableGoodsDetailDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsDetailDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



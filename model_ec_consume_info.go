/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the EcConsumeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EcConsumeInfo{}

// EcConsumeInfo struct for EcConsumeInfo
type EcConsumeInfo struct {
	// 共同账户ID
	AccountId *string `json:"account_id,omitempty"`
	// 协议出资支付宝账号
	AgreementPeerPayerId *string `json:"agreement_peer_payer_id,omitempty"`
	// 员工优惠金额，单位：元
	BenefitAmount *string `json:"benefit_amount,omitempty"`
	// 外部交易流水号
	BizOutNo *string `json:"biz_out_no,omitempty"`
	// 账单分类名称，比如：餐饮美食，交通出行，酒店旅游等
	CategoryName *string `json:"category_name,omitempty"`
	// 账单金额，单位：元，不包含营销资产
	ConsumeAmount *string `json:"consume_amount,omitempty"`
	// 账单业务类型 -因公支付：EC_PAY -因公收款：EC_CLLCT
	ConsumeBizType *string `json:"consume_biz_type,omitempty"`
	// 员工消费记账分类
	ConsumeCategory *string `json:"consume_category,omitempty"`
	// 订单原价，单位：元，包含营销资产
	ConsumeFeeWithDiscount *string `json:"consume_fee_with_discount,omitempty"`
	// 员工消费记账备注
	ConsumeMemo *string `json:"consume_memo,omitempty"`
	// 账单类型 -消费账单：CONSUME -退款账单：REFUND -转账账单：TRANSFER
	ConsumeType *string `json:"consume_type,omitempty"`
	// 员工账号ID
	EmployeeId *string `json:"employee_id,omitempty"`
	// 企业ID
	EnterpriseId *string `json:"enterprise_id,omitempty"`
	// 使用规则ID
	ExpenseRuleGroupId *string `json:"expense_rule_group_id,omitempty"`
	// 费用场景
	ExpenseSceneCode *string `json:"expense_scene_code,omitempty"`
	// 费用类型
	ExpenseType *string `json:"expense_type,omitempty"`
	// 费用类型子类目
	ExpenseTypeSubCategory *string `json:"expense_type_sub_category,omitempty"`
	// 账单扩展信息，JsonMap格式, key值枚举 [{\"value\": \"SUMMARY_INFO\",\"name\": \"账单汇总信息\"},{\"value\": \"MERCHANT_EXTEND_INFO\",\"name\": \"商户扩展信息\"}, {\"value\": \"TERMINAL_INFO\",\"name\": \"终端设备信息\"},{\"value\": \"BENEFIT_INFO\",\"name\": \"优惠扩展信息\"}, {\"value\": \"CONSUMPTION_LOCATION\",\"name\": \"消费上报位置\"},{\"value\": \"THIRD_PARTY_PAYMENT_INFO\",\"name\": \"代收款详情\"}]
	ExtInfos *string `json:"ext_infos,omitempty"`
	// 出资模式 个人出资：PERSONAL 企业出资：ENTERPRISE 三方垫资合作伙伴出资：TP 记账：ACCOUNTING
	FundBizType *string `json:"fund_biz_type,omitempty"`
	// 账单创建时间，格式：yyyy-MM-dd HH:mm:ss
	GmtBizCreate *string `json:"gmt_biz_create,omitempty"`
	// 账单支付时间，格式：yyyy-MM-dd HH:mm:ss
	GmtReceivePay *string `json:"gmt_receive_pay,omitempty"`
	// 开票模式 企业汇总开：ENTERPRISE_AUTO_BATCH
	InvoiceOpenMode *string `json:"invoice_open_mode,omitempty"`
	// 商户ID
	MerchantId *string `json:"merchant_id,omitempty"`
	// 商户名称
	MerchantName *string `json:"merchant_name,omitempty"`
	// 员工支付宝UID
	OpenId *string `json:"open_id,omitempty"`
	// 收款方全称（如果是个人会显示脱敏后的名称）
	OppositeFullName *string `json:"opposite_full_name,omitempty"`
	// 订单完结标识 0：未完结 1：已完结
	OrderCompleteLabel *string `json:"order_complete_label,omitempty"`
	// 2022-01-01 01:01:02 订单完结时间
	OrderCompleteTime *string `json:"order_complete_time,omitempty"`
	// 交易流水号
	PayNo *string `json:"pay_no,omitempty"`
	// 付款方卡号
	PayerCardNo *string `json:"payer_card_no,omitempty"`
	// 付款方登录账号
	PayerLogonId *string `json:"payer_logon_id,omitempty"`
	// 付款方名称
	PayerName *string `json:"payer_name,omitempty"`
	// 企业代付金额，单位：元
	PeerPayAmount *string `json:"peer_pay_amount,omitempty"`
	// 实际出资支付宝账号
	PeerPayerCardNo *string `json:"peer_payer_card_no,omitempty"`
	// 消费账单企业代付部分退款金额，单位：元。退款账单该值无意义，值为0。
	PeerRefundAmount *string `json:"peer_refund_amount,omitempty"`
	// 消费账单企业代付部分退款状态，默认为INIT。当消费账单有退款，该值会变为REFUND_PART或REFUND_FULL；退款账单该值无意义，为初始值INIT。 未退款：INIT， 部分退款：REFUND_PART， 全额退款：REFUND_FULL
	PeerRefundStatus *string `json:"peer_refund_status,omitempty"`
	// 退款账单关联的消费账单交易流水号，退款账单才有值
	RelatedPayNo *string `json:"related_pay_no,omitempty"`
	// 账单场景 TAKE_AWAY：外卖 METRO：地铁 OTHER：其他
	SceneCode *string `json:"scene_code,omitempty"`
	// 卖家ID
	SellerId *string `json:"seller_id,omitempty"`
	// 门店ID
	ShopId *string `json:"shop_id,omitempty"`
	// 外部门店ID
	StoreId *string `json:"store_id,omitempty"`
	// 汇总批次ID
	SummaryApplyId *string `json:"summary_apply_id,omitempty"`
	// 员工支付宝UID
	UserId *string `json:"user_id,omitempty"`
}

// NewEcConsumeInfo instantiates a new EcConsumeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEcConsumeInfo() *EcConsumeInfo {
	this := EcConsumeInfo{}
	return &this
}

// NewEcConsumeInfoWithDefaults instantiates a new EcConsumeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEcConsumeInfoWithDefaults() *EcConsumeInfo {
	this := EcConsumeInfo{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *EcConsumeInfo) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAgreementPeerPayerId returns the AgreementPeerPayerId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetAgreementPeerPayerId() string {
	if o == nil || IsNil(o.AgreementPeerPayerId) {
		var ret string
		return ret
	}
	return *o.AgreementPeerPayerId
}

// GetAgreementPeerPayerIdOk returns a tuple with the AgreementPeerPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetAgreementPeerPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgreementPeerPayerId) {
		return nil, false
	}
	return o.AgreementPeerPayerId, true
}

// HasAgreementPeerPayerId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasAgreementPeerPayerId() bool {
	if o != nil && !IsNil(o.AgreementPeerPayerId) {
		return true
	}

	return false
}

// SetAgreementPeerPayerId gets a reference to the given string and assigns it to the AgreementPeerPayerId field.
func (o *EcConsumeInfo) SetAgreementPeerPayerId(v string) {
	o.AgreementPeerPayerId = &v
}

// GetBenefitAmount returns the BenefitAmount field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetBenefitAmount() string {
	if o == nil || IsNil(o.BenefitAmount) {
		var ret string
		return ret
	}
	return *o.BenefitAmount
}

// GetBenefitAmountOk returns a tuple with the BenefitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetBenefitAmountOk() (*string, bool) {
	if o == nil || IsNil(o.BenefitAmount) {
		return nil, false
	}
	return o.BenefitAmount, true
}

// HasBenefitAmount returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasBenefitAmount() bool {
	if o != nil && !IsNil(o.BenefitAmount) {
		return true
	}

	return false
}

// SetBenefitAmount gets a reference to the given string and assigns it to the BenefitAmount field.
func (o *EcConsumeInfo) SetBenefitAmount(v string) {
	o.BenefitAmount = &v
}

// GetBizOutNo returns the BizOutNo field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetBizOutNo() string {
	if o == nil || IsNil(o.BizOutNo) {
		var ret string
		return ret
	}
	return *o.BizOutNo
}

// GetBizOutNoOk returns a tuple with the BizOutNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetBizOutNoOk() (*string, bool) {
	if o == nil || IsNil(o.BizOutNo) {
		return nil, false
	}
	return o.BizOutNo, true
}

// HasBizOutNo returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasBizOutNo() bool {
	if o != nil && !IsNil(o.BizOutNo) {
		return true
	}

	return false
}

// SetBizOutNo gets a reference to the given string and assigns it to the BizOutNo field.
func (o *EcConsumeInfo) SetBizOutNo(v string) {
	o.BizOutNo = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetCategoryName() string {
	if o == nil || IsNil(o.CategoryName) {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryName) {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasCategoryName() bool {
	if o != nil && !IsNil(o.CategoryName) {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *EcConsumeInfo) SetCategoryName(v string) {
	o.CategoryName = &v
}

// GetConsumeAmount returns the ConsumeAmount field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetConsumeAmount() string {
	if o == nil || IsNil(o.ConsumeAmount) {
		var ret string
		return ret
	}
	return *o.ConsumeAmount
}

// GetConsumeAmountOk returns a tuple with the ConsumeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetConsumeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeAmount) {
		return nil, false
	}
	return o.ConsumeAmount, true
}

// HasConsumeAmount returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasConsumeAmount() bool {
	if o != nil && !IsNil(o.ConsumeAmount) {
		return true
	}

	return false
}

// SetConsumeAmount gets a reference to the given string and assigns it to the ConsumeAmount field.
func (o *EcConsumeInfo) SetConsumeAmount(v string) {
	o.ConsumeAmount = &v
}

// GetConsumeBizType returns the ConsumeBizType field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetConsumeBizType() string {
	if o == nil || IsNil(o.ConsumeBizType) {
		var ret string
		return ret
	}
	return *o.ConsumeBizType
}

// GetConsumeBizTypeOk returns a tuple with the ConsumeBizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetConsumeBizTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeBizType) {
		return nil, false
	}
	return o.ConsumeBizType, true
}

// HasConsumeBizType returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasConsumeBizType() bool {
	if o != nil && !IsNil(o.ConsumeBizType) {
		return true
	}

	return false
}

// SetConsumeBizType gets a reference to the given string and assigns it to the ConsumeBizType field.
func (o *EcConsumeInfo) SetConsumeBizType(v string) {
	o.ConsumeBizType = &v
}

// GetConsumeCategory returns the ConsumeCategory field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetConsumeCategory() string {
	if o == nil || IsNil(o.ConsumeCategory) {
		var ret string
		return ret
	}
	return *o.ConsumeCategory
}

// GetConsumeCategoryOk returns a tuple with the ConsumeCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetConsumeCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeCategory) {
		return nil, false
	}
	return o.ConsumeCategory, true
}

// HasConsumeCategory returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasConsumeCategory() bool {
	if o != nil && !IsNil(o.ConsumeCategory) {
		return true
	}

	return false
}

// SetConsumeCategory gets a reference to the given string and assigns it to the ConsumeCategory field.
func (o *EcConsumeInfo) SetConsumeCategory(v string) {
	o.ConsumeCategory = &v
}

// GetConsumeFeeWithDiscount returns the ConsumeFeeWithDiscount field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetConsumeFeeWithDiscount() string {
	if o == nil || IsNil(o.ConsumeFeeWithDiscount) {
		var ret string
		return ret
	}
	return *o.ConsumeFeeWithDiscount
}

// GetConsumeFeeWithDiscountOk returns a tuple with the ConsumeFeeWithDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetConsumeFeeWithDiscountOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeFeeWithDiscount) {
		return nil, false
	}
	return o.ConsumeFeeWithDiscount, true
}

// HasConsumeFeeWithDiscount returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasConsumeFeeWithDiscount() bool {
	if o != nil && !IsNil(o.ConsumeFeeWithDiscount) {
		return true
	}

	return false
}

// SetConsumeFeeWithDiscount gets a reference to the given string and assigns it to the ConsumeFeeWithDiscount field.
func (o *EcConsumeInfo) SetConsumeFeeWithDiscount(v string) {
	o.ConsumeFeeWithDiscount = &v
}

// GetConsumeMemo returns the ConsumeMemo field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetConsumeMemo() string {
	if o == nil || IsNil(o.ConsumeMemo) {
		var ret string
		return ret
	}
	return *o.ConsumeMemo
}

// GetConsumeMemoOk returns a tuple with the ConsumeMemo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetConsumeMemoOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeMemo) {
		return nil, false
	}
	return o.ConsumeMemo, true
}

// HasConsumeMemo returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasConsumeMemo() bool {
	if o != nil && !IsNil(o.ConsumeMemo) {
		return true
	}

	return false
}

// SetConsumeMemo gets a reference to the given string and assigns it to the ConsumeMemo field.
func (o *EcConsumeInfo) SetConsumeMemo(v string) {
	o.ConsumeMemo = &v
}

// GetConsumeType returns the ConsumeType field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetConsumeType() string {
	if o == nil || IsNil(o.ConsumeType) {
		var ret string
		return ret
	}
	return *o.ConsumeType
}

// GetConsumeTypeOk returns a tuple with the ConsumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetConsumeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeType) {
		return nil, false
	}
	return o.ConsumeType, true
}

// HasConsumeType returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasConsumeType() bool {
	if o != nil && !IsNil(o.ConsumeType) {
		return true
	}

	return false
}

// SetConsumeType gets a reference to the given string and assigns it to the ConsumeType field.
func (o *EcConsumeInfo) SetConsumeType(v string) {
	o.ConsumeType = &v
}

// GetEmployeeId returns the EmployeeId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetEmployeeId() string {
	if o == nil || IsNil(o.EmployeeId) {
		var ret string
		return ret
	}
	return *o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetEmployeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeId) {
		return nil, false
	}
	return o.EmployeeId, true
}

// HasEmployeeId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasEmployeeId() bool {
	if o != nil && !IsNil(o.EmployeeId) {
		return true
	}

	return false
}

// SetEmployeeId gets a reference to the given string and assigns it to the EmployeeId field.
func (o *EcConsumeInfo) SetEmployeeId(v string) {
	o.EmployeeId = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetEnterpriseId() string {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret string
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetEnterpriseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given string and assigns it to the EnterpriseId field.
func (o *EcConsumeInfo) SetEnterpriseId(v string) {
	o.EnterpriseId = &v
}

// GetExpenseRuleGroupId returns the ExpenseRuleGroupId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetExpenseRuleGroupId() string {
	if o == nil || IsNil(o.ExpenseRuleGroupId) {
		var ret string
		return ret
	}
	return *o.ExpenseRuleGroupId
}

// GetExpenseRuleGroupIdOk returns a tuple with the ExpenseRuleGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetExpenseRuleGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExpenseRuleGroupId) {
		return nil, false
	}
	return o.ExpenseRuleGroupId, true
}

// HasExpenseRuleGroupId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasExpenseRuleGroupId() bool {
	if o != nil && !IsNil(o.ExpenseRuleGroupId) {
		return true
	}

	return false
}

// SetExpenseRuleGroupId gets a reference to the given string and assigns it to the ExpenseRuleGroupId field.
func (o *EcConsumeInfo) SetExpenseRuleGroupId(v string) {
	o.ExpenseRuleGroupId = &v
}

// GetExpenseSceneCode returns the ExpenseSceneCode field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetExpenseSceneCode() string {
	if o == nil || IsNil(o.ExpenseSceneCode) {
		var ret string
		return ret
	}
	return *o.ExpenseSceneCode
}

// GetExpenseSceneCodeOk returns a tuple with the ExpenseSceneCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetExpenseSceneCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpenseSceneCode) {
		return nil, false
	}
	return o.ExpenseSceneCode, true
}

// HasExpenseSceneCode returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasExpenseSceneCode() bool {
	if o != nil && !IsNil(o.ExpenseSceneCode) {
		return true
	}

	return false
}

// SetExpenseSceneCode gets a reference to the given string and assigns it to the ExpenseSceneCode field.
func (o *EcConsumeInfo) SetExpenseSceneCode(v string) {
	o.ExpenseSceneCode = &v
}

// GetExpenseType returns the ExpenseType field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetExpenseType() string {
	if o == nil || IsNil(o.ExpenseType) {
		var ret string
		return ret
	}
	return *o.ExpenseType
}

// GetExpenseTypeOk returns a tuple with the ExpenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetExpenseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpenseType) {
		return nil, false
	}
	return o.ExpenseType, true
}

// HasExpenseType returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasExpenseType() bool {
	if o != nil && !IsNil(o.ExpenseType) {
		return true
	}

	return false
}

// SetExpenseType gets a reference to the given string and assigns it to the ExpenseType field.
func (o *EcConsumeInfo) SetExpenseType(v string) {
	o.ExpenseType = &v
}

// GetExpenseTypeSubCategory returns the ExpenseTypeSubCategory field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetExpenseTypeSubCategory() string {
	if o == nil || IsNil(o.ExpenseTypeSubCategory) {
		var ret string
		return ret
	}
	return *o.ExpenseTypeSubCategory
}

// GetExpenseTypeSubCategoryOk returns a tuple with the ExpenseTypeSubCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetExpenseTypeSubCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ExpenseTypeSubCategory) {
		return nil, false
	}
	return o.ExpenseTypeSubCategory, true
}

// HasExpenseTypeSubCategory returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasExpenseTypeSubCategory() bool {
	if o != nil && !IsNil(o.ExpenseTypeSubCategory) {
		return true
	}

	return false
}

// SetExpenseTypeSubCategory gets a reference to the given string and assigns it to the ExpenseTypeSubCategory field.
func (o *EcConsumeInfo) SetExpenseTypeSubCategory(v string) {
	o.ExpenseTypeSubCategory = &v
}

// GetExtInfos returns the ExtInfos field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetExtInfos() string {
	if o == nil || IsNil(o.ExtInfos) {
		var ret string
		return ret
	}
	return *o.ExtInfos
}

// GetExtInfosOk returns a tuple with the ExtInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetExtInfosOk() (*string, bool) {
	if o == nil || IsNil(o.ExtInfos) {
		return nil, false
	}
	return o.ExtInfos, true
}

// HasExtInfos returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasExtInfos() bool {
	if o != nil && !IsNil(o.ExtInfos) {
		return true
	}

	return false
}

// SetExtInfos gets a reference to the given string and assigns it to the ExtInfos field.
func (o *EcConsumeInfo) SetExtInfos(v string) {
	o.ExtInfos = &v
}

// GetFundBizType returns the FundBizType field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetFundBizType() string {
	if o == nil || IsNil(o.FundBizType) {
		var ret string
		return ret
	}
	return *o.FundBizType
}

// GetFundBizTypeOk returns a tuple with the FundBizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetFundBizTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FundBizType) {
		return nil, false
	}
	return o.FundBizType, true
}

// HasFundBizType returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasFundBizType() bool {
	if o != nil && !IsNil(o.FundBizType) {
		return true
	}

	return false
}

// SetFundBizType gets a reference to the given string and assigns it to the FundBizType field.
func (o *EcConsumeInfo) SetFundBizType(v string) {
	o.FundBizType = &v
}

// GetGmtBizCreate returns the GmtBizCreate field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetGmtBizCreate() string {
	if o == nil || IsNil(o.GmtBizCreate) {
		var ret string
		return ret
	}
	return *o.GmtBizCreate
}

// GetGmtBizCreateOk returns a tuple with the GmtBizCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetGmtBizCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtBizCreate) {
		return nil, false
	}
	return o.GmtBizCreate, true
}

// HasGmtBizCreate returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasGmtBizCreate() bool {
	if o != nil && !IsNil(o.GmtBizCreate) {
		return true
	}

	return false
}

// SetGmtBizCreate gets a reference to the given string and assigns it to the GmtBizCreate field.
func (o *EcConsumeInfo) SetGmtBizCreate(v string) {
	o.GmtBizCreate = &v
}

// GetGmtReceivePay returns the GmtReceivePay field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetGmtReceivePay() string {
	if o == nil || IsNil(o.GmtReceivePay) {
		var ret string
		return ret
	}
	return *o.GmtReceivePay
}

// GetGmtReceivePayOk returns a tuple with the GmtReceivePay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetGmtReceivePayOk() (*string, bool) {
	if o == nil || IsNil(o.GmtReceivePay) {
		return nil, false
	}
	return o.GmtReceivePay, true
}

// HasGmtReceivePay returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasGmtReceivePay() bool {
	if o != nil && !IsNil(o.GmtReceivePay) {
		return true
	}

	return false
}

// SetGmtReceivePay gets a reference to the given string and assigns it to the GmtReceivePay field.
func (o *EcConsumeInfo) SetGmtReceivePay(v string) {
	o.GmtReceivePay = &v
}

// GetInvoiceOpenMode returns the InvoiceOpenMode field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetInvoiceOpenMode() string {
	if o == nil || IsNil(o.InvoiceOpenMode) {
		var ret string
		return ret
	}
	return *o.InvoiceOpenMode
}

// GetInvoiceOpenModeOk returns a tuple with the InvoiceOpenMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetInvoiceOpenModeOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceOpenMode) {
		return nil, false
	}
	return o.InvoiceOpenMode, true
}

// HasInvoiceOpenMode returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasInvoiceOpenMode() bool {
	if o != nil && !IsNil(o.InvoiceOpenMode) {
		return true
	}

	return false
}

// SetInvoiceOpenMode gets a reference to the given string and assigns it to the InvoiceOpenMode field.
func (o *EcConsumeInfo) SetInvoiceOpenMode(v string) {
	o.InvoiceOpenMode = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetMerchantId() string {
	if o == nil || IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *EcConsumeInfo) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetMerchantName() string {
	if o == nil || IsNil(o.MerchantName) {
		var ret string
		return ret
	}
	return *o.MerchantName
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetMerchantNameOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantName) {
		return nil, false
	}
	return o.MerchantName, true
}

// HasMerchantName returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasMerchantName() bool {
	if o != nil && !IsNil(o.MerchantName) {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given string and assigns it to the MerchantName field.
func (o *EcConsumeInfo) SetMerchantName(v string) {
	o.MerchantName = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *EcConsumeInfo) SetOpenId(v string) {
	o.OpenId = &v
}

// GetOppositeFullName returns the OppositeFullName field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetOppositeFullName() string {
	if o == nil || IsNil(o.OppositeFullName) {
		var ret string
		return ret
	}
	return *o.OppositeFullName
}

// GetOppositeFullNameOk returns a tuple with the OppositeFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetOppositeFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.OppositeFullName) {
		return nil, false
	}
	return o.OppositeFullName, true
}

// HasOppositeFullName returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasOppositeFullName() bool {
	if o != nil && !IsNil(o.OppositeFullName) {
		return true
	}

	return false
}

// SetOppositeFullName gets a reference to the given string and assigns it to the OppositeFullName field.
func (o *EcConsumeInfo) SetOppositeFullName(v string) {
	o.OppositeFullName = &v
}

// GetOrderCompleteLabel returns the OrderCompleteLabel field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetOrderCompleteLabel() string {
	if o == nil || IsNil(o.OrderCompleteLabel) {
		var ret string
		return ret
	}
	return *o.OrderCompleteLabel
}

// GetOrderCompleteLabelOk returns a tuple with the OrderCompleteLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetOrderCompleteLabelOk() (*string, bool) {
	if o == nil || IsNil(o.OrderCompleteLabel) {
		return nil, false
	}
	return o.OrderCompleteLabel, true
}

// HasOrderCompleteLabel returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasOrderCompleteLabel() bool {
	if o != nil && !IsNil(o.OrderCompleteLabel) {
		return true
	}

	return false
}

// SetOrderCompleteLabel gets a reference to the given string and assigns it to the OrderCompleteLabel field.
func (o *EcConsumeInfo) SetOrderCompleteLabel(v string) {
	o.OrderCompleteLabel = &v
}

// GetOrderCompleteTime returns the OrderCompleteTime field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetOrderCompleteTime() string {
	if o == nil || IsNil(o.OrderCompleteTime) {
		var ret string
		return ret
	}
	return *o.OrderCompleteTime
}

// GetOrderCompleteTimeOk returns a tuple with the OrderCompleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetOrderCompleteTimeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderCompleteTime) {
		return nil, false
	}
	return o.OrderCompleteTime, true
}

// HasOrderCompleteTime returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasOrderCompleteTime() bool {
	if o != nil && !IsNil(o.OrderCompleteTime) {
		return true
	}

	return false
}

// SetOrderCompleteTime gets a reference to the given string and assigns it to the OrderCompleteTime field.
func (o *EcConsumeInfo) SetOrderCompleteTime(v string) {
	o.OrderCompleteTime = &v
}

// GetPayNo returns the PayNo field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPayNo() string {
	if o == nil || IsNil(o.PayNo) {
		var ret string
		return ret
	}
	return *o.PayNo
}

// GetPayNoOk returns a tuple with the PayNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPayNoOk() (*string, bool) {
	if o == nil || IsNil(o.PayNo) {
		return nil, false
	}
	return o.PayNo, true
}

// HasPayNo returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPayNo() bool {
	if o != nil && !IsNil(o.PayNo) {
		return true
	}

	return false
}

// SetPayNo gets a reference to the given string and assigns it to the PayNo field.
func (o *EcConsumeInfo) SetPayNo(v string) {
	o.PayNo = &v
}

// GetPayerCardNo returns the PayerCardNo field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPayerCardNo() string {
	if o == nil || IsNil(o.PayerCardNo) {
		var ret string
		return ret
	}
	return *o.PayerCardNo
}

// GetPayerCardNoOk returns a tuple with the PayerCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPayerCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.PayerCardNo) {
		return nil, false
	}
	return o.PayerCardNo, true
}

// HasPayerCardNo returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPayerCardNo() bool {
	if o != nil && !IsNil(o.PayerCardNo) {
		return true
	}

	return false
}

// SetPayerCardNo gets a reference to the given string and assigns it to the PayerCardNo field.
func (o *EcConsumeInfo) SetPayerCardNo(v string) {
	o.PayerCardNo = &v
}

// GetPayerLogonId returns the PayerLogonId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPayerLogonId() string {
	if o == nil || IsNil(o.PayerLogonId) {
		var ret string
		return ret
	}
	return *o.PayerLogonId
}

// GetPayerLogonIdOk returns a tuple with the PayerLogonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPayerLogonIdOk() (*string, bool) {
	if o == nil || IsNil(o.PayerLogonId) {
		return nil, false
	}
	return o.PayerLogonId, true
}

// HasPayerLogonId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPayerLogonId() bool {
	if o != nil && !IsNil(o.PayerLogonId) {
		return true
	}

	return false
}

// SetPayerLogonId gets a reference to the given string and assigns it to the PayerLogonId field.
func (o *EcConsumeInfo) SetPayerLogonId(v string) {
	o.PayerLogonId = &v
}

// GetPayerName returns the PayerName field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPayerName() string {
	if o == nil || IsNil(o.PayerName) {
		var ret string
		return ret
	}
	return *o.PayerName
}

// GetPayerNameOk returns a tuple with the PayerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPayerNameOk() (*string, bool) {
	if o == nil || IsNil(o.PayerName) {
		return nil, false
	}
	return o.PayerName, true
}

// HasPayerName returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPayerName() bool {
	if o != nil && !IsNil(o.PayerName) {
		return true
	}

	return false
}

// SetPayerName gets a reference to the given string and assigns it to the PayerName field.
func (o *EcConsumeInfo) SetPayerName(v string) {
	o.PayerName = &v
}

// GetPeerPayAmount returns the PeerPayAmount field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPeerPayAmount() string {
	if o == nil || IsNil(o.PeerPayAmount) {
		var ret string
		return ret
	}
	return *o.PeerPayAmount
}

// GetPeerPayAmountOk returns a tuple with the PeerPayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPeerPayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PeerPayAmount) {
		return nil, false
	}
	return o.PeerPayAmount, true
}

// HasPeerPayAmount returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPeerPayAmount() bool {
	if o != nil && !IsNil(o.PeerPayAmount) {
		return true
	}

	return false
}

// SetPeerPayAmount gets a reference to the given string and assigns it to the PeerPayAmount field.
func (o *EcConsumeInfo) SetPeerPayAmount(v string) {
	o.PeerPayAmount = &v
}

// GetPeerPayerCardNo returns the PeerPayerCardNo field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPeerPayerCardNo() string {
	if o == nil || IsNil(o.PeerPayerCardNo) {
		var ret string
		return ret
	}
	return *o.PeerPayerCardNo
}

// GetPeerPayerCardNoOk returns a tuple with the PeerPayerCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPeerPayerCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.PeerPayerCardNo) {
		return nil, false
	}
	return o.PeerPayerCardNo, true
}

// HasPeerPayerCardNo returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPeerPayerCardNo() bool {
	if o != nil && !IsNil(o.PeerPayerCardNo) {
		return true
	}

	return false
}

// SetPeerPayerCardNo gets a reference to the given string and assigns it to the PeerPayerCardNo field.
func (o *EcConsumeInfo) SetPeerPayerCardNo(v string) {
	o.PeerPayerCardNo = &v
}

// GetPeerRefundAmount returns the PeerRefundAmount field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPeerRefundAmount() string {
	if o == nil || IsNil(o.PeerRefundAmount) {
		var ret string
		return ret
	}
	return *o.PeerRefundAmount
}

// GetPeerRefundAmountOk returns a tuple with the PeerRefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPeerRefundAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PeerRefundAmount) {
		return nil, false
	}
	return o.PeerRefundAmount, true
}

// HasPeerRefundAmount returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPeerRefundAmount() bool {
	if o != nil && !IsNil(o.PeerRefundAmount) {
		return true
	}

	return false
}

// SetPeerRefundAmount gets a reference to the given string and assigns it to the PeerRefundAmount field.
func (o *EcConsumeInfo) SetPeerRefundAmount(v string) {
	o.PeerRefundAmount = &v
}

// GetPeerRefundStatus returns the PeerRefundStatus field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetPeerRefundStatus() string {
	if o == nil || IsNil(o.PeerRefundStatus) {
		var ret string
		return ret
	}
	return *o.PeerRefundStatus
}

// GetPeerRefundStatusOk returns a tuple with the PeerRefundStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetPeerRefundStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PeerRefundStatus) {
		return nil, false
	}
	return o.PeerRefundStatus, true
}

// HasPeerRefundStatus returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasPeerRefundStatus() bool {
	if o != nil && !IsNil(o.PeerRefundStatus) {
		return true
	}

	return false
}

// SetPeerRefundStatus gets a reference to the given string and assigns it to the PeerRefundStatus field.
func (o *EcConsumeInfo) SetPeerRefundStatus(v string) {
	o.PeerRefundStatus = &v
}

// GetRelatedPayNo returns the RelatedPayNo field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetRelatedPayNo() string {
	if o == nil || IsNil(o.RelatedPayNo) {
		var ret string
		return ret
	}
	return *o.RelatedPayNo
}

// GetRelatedPayNoOk returns a tuple with the RelatedPayNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetRelatedPayNoOk() (*string, bool) {
	if o == nil || IsNil(o.RelatedPayNo) {
		return nil, false
	}
	return o.RelatedPayNo, true
}

// HasRelatedPayNo returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasRelatedPayNo() bool {
	if o != nil && !IsNil(o.RelatedPayNo) {
		return true
	}

	return false
}

// SetRelatedPayNo gets a reference to the given string and assigns it to the RelatedPayNo field.
func (o *EcConsumeInfo) SetRelatedPayNo(v string) {
	o.RelatedPayNo = &v
}

// GetSceneCode returns the SceneCode field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetSceneCode() string {
	if o == nil || IsNil(o.SceneCode) {
		var ret string
		return ret
	}
	return *o.SceneCode
}

// GetSceneCodeOk returns a tuple with the SceneCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetSceneCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SceneCode) {
		return nil, false
	}
	return o.SceneCode, true
}

// HasSceneCode returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasSceneCode() bool {
	if o != nil && !IsNil(o.SceneCode) {
		return true
	}

	return false
}

// SetSceneCode gets a reference to the given string and assigns it to the SceneCode field.
func (o *EcConsumeInfo) SetSceneCode(v string) {
	o.SceneCode = &v
}

// GetSellerId returns the SellerId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetSellerId() string {
	if o == nil || IsNil(o.SellerId) {
		var ret string
		return ret
	}
	return *o.SellerId
}

// GetSellerIdOk returns a tuple with the SellerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetSellerIdOk() (*string, bool) {
	if o == nil || IsNil(o.SellerId) {
		return nil, false
	}
	return o.SellerId, true
}

// HasSellerId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasSellerId() bool {
	if o != nil && !IsNil(o.SellerId) {
		return true
	}

	return false
}

// SetSellerId gets a reference to the given string and assigns it to the SellerId field.
func (o *EcConsumeInfo) SetSellerId(v string) {
	o.SellerId = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetShopId() string {
	if o == nil || IsNil(o.ShopId) {
		var ret string
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetShopIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given string and assigns it to the ShopId field.
func (o *EcConsumeInfo) SetShopId(v string) {
	o.ShopId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *EcConsumeInfo) SetStoreId(v string) {
	o.StoreId = &v
}

// GetSummaryApplyId returns the SummaryApplyId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetSummaryApplyId() string {
	if o == nil || IsNil(o.SummaryApplyId) {
		var ret string
		return ret
	}
	return *o.SummaryApplyId
}

// GetSummaryApplyIdOk returns a tuple with the SummaryApplyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetSummaryApplyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryApplyId) {
		return nil, false
	}
	return o.SummaryApplyId, true
}

// HasSummaryApplyId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasSummaryApplyId() bool {
	if o != nil && !IsNil(o.SummaryApplyId) {
		return true
	}

	return false
}

// SetSummaryApplyId gets a reference to the given string and assigns it to the SummaryApplyId field.
func (o *EcConsumeInfo) SetSummaryApplyId(v string) {
	o.SummaryApplyId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *EcConsumeInfo) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcConsumeInfo) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *EcConsumeInfo) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *EcConsumeInfo) SetUserId(v string) {
	o.UserId = &v
}

func (o EcConsumeInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EcConsumeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AgreementPeerPayerId) {
		toSerialize["agreement_peer_payer_id"] = o.AgreementPeerPayerId
	}
	if !IsNil(o.BenefitAmount) {
		toSerialize["benefit_amount"] = o.BenefitAmount
	}
	if !IsNil(o.BizOutNo) {
		toSerialize["biz_out_no"] = o.BizOutNo
	}
	if !IsNil(o.CategoryName) {
		toSerialize["category_name"] = o.CategoryName
	}
	if !IsNil(o.ConsumeAmount) {
		toSerialize["consume_amount"] = o.ConsumeAmount
	}
	if !IsNil(o.ConsumeBizType) {
		toSerialize["consume_biz_type"] = o.ConsumeBizType
	}
	if !IsNil(o.ConsumeCategory) {
		toSerialize["consume_category"] = o.ConsumeCategory
	}
	if !IsNil(o.ConsumeFeeWithDiscount) {
		toSerialize["consume_fee_with_discount"] = o.ConsumeFeeWithDiscount
	}
	if !IsNil(o.ConsumeMemo) {
		toSerialize["consume_memo"] = o.ConsumeMemo
	}
	if !IsNil(o.ConsumeType) {
		toSerialize["consume_type"] = o.ConsumeType
	}
	if !IsNil(o.EmployeeId) {
		toSerialize["employee_id"] = o.EmployeeId
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if !IsNil(o.ExpenseRuleGroupId) {
		toSerialize["expense_rule_group_id"] = o.ExpenseRuleGroupId
	}
	if !IsNil(o.ExpenseSceneCode) {
		toSerialize["expense_scene_code"] = o.ExpenseSceneCode
	}
	if !IsNil(o.ExpenseType) {
		toSerialize["expense_type"] = o.ExpenseType
	}
	if !IsNil(o.ExpenseTypeSubCategory) {
		toSerialize["expense_type_sub_category"] = o.ExpenseTypeSubCategory
	}
	if !IsNil(o.ExtInfos) {
		toSerialize["ext_infos"] = o.ExtInfos
	}
	if !IsNil(o.FundBizType) {
		toSerialize["fund_biz_type"] = o.FundBizType
	}
	if !IsNil(o.GmtBizCreate) {
		toSerialize["gmt_biz_create"] = o.GmtBizCreate
	}
	if !IsNil(o.GmtReceivePay) {
		toSerialize["gmt_receive_pay"] = o.GmtReceivePay
	}
	if !IsNil(o.InvoiceOpenMode) {
		toSerialize["invoice_open_mode"] = o.InvoiceOpenMode
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchant_id"] = o.MerchantId
	}
	if !IsNil(o.MerchantName) {
		toSerialize["merchant_name"] = o.MerchantName
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.OppositeFullName) {
		toSerialize["opposite_full_name"] = o.OppositeFullName
	}
	if !IsNil(o.OrderCompleteLabel) {
		toSerialize["order_complete_label"] = o.OrderCompleteLabel
	}
	if !IsNil(o.OrderCompleteTime) {
		toSerialize["order_complete_time"] = o.OrderCompleteTime
	}
	if !IsNil(o.PayNo) {
		toSerialize["pay_no"] = o.PayNo
	}
	if !IsNil(o.PayerCardNo) {
		toSerialize["payer_card_no"] = o.PayerCardNo
	}
	if !IsNil(o.PayerLogonId) {
		toSerialize["payer_logon_id"] = o.PayerLogonId
	}
	if !IsNil(o.PayerName) {
		toSerialize["payer_name"] = o.PayerName
	}
	if !IsNil(o.PeerPayAmount) {
		toSerialize["peer_pay_amount"] = o.PeerPayAmount
	}
	if !IsNil(o.PeerPayerCardNo) {
		toSerialize["peer_payer_card_no"] = o.PeerPayerCardNo
	}
	if !IsNil(o.PeerRefundAmount) {
		toSerialize["peer_refund_amount"] = o.PeerRefundAmount
	}
	if !IsNil(o.PeerRefundStatus) {
		toSerialize["peer_refund_status"] = o.PeerRefundStatus
	}
	if !IsNil(o.RelatedPayNo) {
		toSerialize["related_pay_no"] = o.RelatedPayNo
	}
	if !IsNil(o.SceneCode) {
		toSerialize["scene_code"] = o.SceneCode
	}
	if !IsNil(o.SellerId) {
		toSerialize["seller_id"] = o.SellerId
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.SummaryApplyId) {
		toSerialize["summary_apply_id"] = o.SummaryApplyId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableEcConsumeInfo struct {
	value *EcConsumeInfo
	isSet bool
}

func (v NullableEcConsumeInfo) Get() *EcConsumeInfo {
	return v.value
}

func (v *NullableEcConsumeInfo) Set(val *EcConsumeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEcConsumeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEcConsumeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEcConsumeInfo(val *EcConsumeInfo) *NullableEcConsumeInfo {
	return &NullableEcConsumeInfo{value: val, isSet: true}
}

func (v NullableEcConsumeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEcConsumeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

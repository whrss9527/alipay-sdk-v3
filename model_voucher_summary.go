/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherSummary{}

// VoucherSummary struct for VoucherSummary
type VoucherSummary struct {
	// 券已发放数量。
	PublishCount *int32 `json:"publish_count,omitempty"`
	// 券已核销数量。
	UsedCount *int32 `json:"used_count,omitempty"`
}

// NewVoucherSummary instantiates a new VoucherSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherSummary() *VoucherSummary {
	this := VoucherSummary{}
	return &this
}

// NewVoucherSummaryWithDefaults instantiates a new VoucherSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherSummaryWithDefaults() *VoucherSummary {
	this := VoucherSummary{}
	return &this
}

// GetPublishCount returns the PublishCount field value if set, zero value otherwise.
func (o *VoucherSummary) GetPublishCount() int32 {
	if o == nil || IsNil(o.PublishCount) {
		var ret int32
		return ret
	}
	return *o.PublishCount
}

// GetPublishCountOk returns a tuple with the PublishCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSummary) GetPublishCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PublishCount) {
		return nil, false
	}
	return o.PublishCount, true
}

// HasPublishCount returns a boolean if a field has been set.
func (o *VoucherSummary) HasPublishCount() bool {
	if o != nil && !IsNil(o.PublishCount) {
		return true
	}

	return false
}

// SetPublishCount gets a reference to the given int32 and assigns it to the PublishCount field.
func (o *VoucherSummary) SetPublishCount(v int32) {
	o.PublishCount = &v
}

// GetUsedCount returns the UsedCount field value if set, zero value otherwise.
func (o *VoucherSummary) GetUsedCount() int32 {
	if o == nil || IsNil(o.UsedCount) {
		var ret int32
		return ret
	}
	return *o.UsedCount
}

// GetUsedCountOk returns a tuple with the UsedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSummary) GetUsedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedCount) {
		return nil, false
	}
	return o.UsedCount, true
}

// HasUsedCount returns a boolean if a field has been set.
func (o *VoucherSummary) HasUsedCount() bool {
	if o != nil && !IsNil(o.UsedCount) {
		return true
	}

	return false
}

// SetUsedCount gets a reference to the given int32 and assigns it to the UsedCount field.
func (o *VoucherSummary) SetUsedCount(v int32) {
	o.UsedCount = &v
}

func (o VoucherSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PublishCount) {
		toSerialize["publish_count"] = o.PublishCount
	}
	if !IsNil(o.UsedCount) {
		toSerialize["used_count"] = o.UsedCount
	}
	return toSerialize, nil
}

type NullableVoucherSummary struct {
	value *VoucherSummary
	isSet bool
}

func (v NullableVoucherSummary) Get() *VoucherSummary {
	return v.value
}

func (v *NullableVoucherSummary) Set(val *VoucherSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherSummary(val *VoucherSummary) *NullableVoucherSummary {
	return &NullableVoucherSummary{value: val, isSet: true}
}

func (v NullableVoucherSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

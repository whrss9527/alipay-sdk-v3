/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AlipayUserPicture type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlipayUserPicture{}

// AlipayUserPicture struct for AlipayUserPicture
type AlipayUserPicture struct {
	// 图片类型，包括身份证正反面、营业执照等
	PictureType *string `json:"picture_type,omitempty"`
	// 用于调用alipay.user.certify.image.fetch接口，获取图片资源
	PictureUrl *string `json:"picture_url,omitempty"`
}

// NewAlipayUserPicture instantiates a new AlipayUserPicture object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlipayUserPicture() *AlipayUserPicture {
	this := AlipayUserPicture{}
	return &this
}

// NewAlipayUserPictureWithDefaults instantiates a new AlipayUserPicture object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlipayUserPictureWithDefaults() *AlipayUserPicture {
	this := AlipayUserPicture{}
	return &this
}

// GetPictureType returns the PictureType field value if set, zero value otherwise.
func (o *AlipayUserPicture) GetPictureType() string {
	if o == nil || IsNil(o.PictureType) {
		var ret string
		return ret
	}
	return *o.PictureType
}

// GetPictureTypeOk returns a tuple with the PictureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlipayUserPicture) GetPictureTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PictureType) {
		return nil, false
	}
	return o.PictureType, true
}

// HasPictureType returns a boolean if a field has been set.
func (o *AlipayUserPicture) HasPictureType() bool {
	if o != nil && !IsNil(o.PictureType) {
		return true
	}

	return false
}

// SetPictureType gets a reference to the given string and assigns it to the PictureType field.
func (o *AlipayUserPicture) SetPictureType(v string) {
	o.PictureType = &v
}

// GetPictureUrl returns the PictureUrl field value if set, zero value otherwise.
func (o *AlipayUserPicture) GetPictureUrl() string {
	if o == nil || IsNil(o.PictureUrl) {
		var ret string
		return ret
	}
	return *o.PictureUrl
}

// GetPictureUrlOk returns a tuple with the PictureUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlipayUserPicture) GetPictureUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PictureUrl) {
		return nil, false
	}
	return o.PictureUrl, true
}

// HasPictureUrl returns a boolean if a field has been set.
func (o *AlipayUserPicture) HasPictureUrl() bool {
	if o != nil && !IsNil(o.PictureUrl) {
		return true
	}

	return false
}

// SetPictureUrl gets a reference to the given string and assigns it to the PictureUrl field.
func (o *AlipayUserPicture) SetPictureUrl(v string) {
	o.PictureUrl = &v
}

func (o AlipayUserPicture) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlipayUserPicture) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PictureType) {
		toSerialize["picture_type"] = o.PictureType
	}
	if !IsNil(o.PictureUrl) {
		toSerialize["picture_url"] = o.PictureUrl
	}
	return toSerialize, nil
}

type NullableAlipayUserPicture struct {
	value *AlipayUserPicture
	isSet bool
}

func (v NullableAlipayUserPicture) Get() *AlipayUserPicture {
	return v.value
}

func (v *NullableAlipayUserPicture) Set(val *AlipayUserPicture) {
	v.value = val
	v.isSet = true
}

func (v NullableAlipayUserPicture) IsSet() bool {
	return v.isSet
}

func (v *NullableAlipayUserPicture) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlipayUserPicture(val *AlipayUserPicture) *NullableAlipayUserPicture {
	return &NullableAlipayUserPicture{value: val, isSet: true}
}

func (v NullableAlipayUserPicture) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlipayUserPicture) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

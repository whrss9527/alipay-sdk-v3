/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ReceiverAddressInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReceiverAddressInfo{}

// ReceiverAddressInfo struct for ReceiverAddressInfo
type ReceiverAddressInfo struct {
	// 收货地址
	Address *string `json:"address,omitempty"`
	// 中国标准城市区域码
	DivisionCode *string `json:"division_code,omitempty"`
	// 收货人手机号
	Mobile *string `json:"mobile,omitempty"`
	// 收货人的姓名
	Name *string `json:"name,omitempty"`
	// 收货地址邮编
	Zip *string `json:"zip,omitempty"`
}

// NewReceiverAddressInfo instantiates a new ReceiverAddressInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceiverAddressInfo() *ReceiverAddressInfo {
	this := ReceiverAddressInfo{}
	return &this
}

// NewReceiverAddressInfoWithDefaults instantiates a new ReceiverAddressInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceiverAddressInfoWithDefaults() *ReceiverAddressInfo {
	this := ReceiverAddressInfo{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ReceiverAddressInfo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiverAddressInfo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ReceiverAddressInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ReceiverAddressInfo) SetAddress(v string) {
	o.Address = &v
}

// GetDivisionCode returns the DivisionCode field value if set, zero value otherwise.
func (o *ReceiverAddressInfo) GetDivisionCode() string {
	if o == nil || IsNil(o.DivisionCode) {
		var ret string
		return ret
	}
	return *o.DivisionCode
}

// GetDivisionCodeOk returns a tuple with the DivisionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiverAddressInfo) GetDivisionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DivisionCode) {
		return nil, false
	}
	return o.DivisionCode, true
}

// HasDivisionCode returns a boolean if a field has been set.
func (o *ReceiverAddressInfo) HasDivisionCode() bool {
	if o != nil && !IsNil(o.DivisionCode) {
		return true
	}

	return false
}

// SetDivisionCode gets a reference to the given string and assigns it to the DivisionCode field.
func (o *ReceiverAddressInfo) SetDivisionCode(v string) {
	o.DivisionCode = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *ReceiverAddressInfo) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiverAddressInfo) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *ReceiverAddressInfo) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *ReceiverAddressInfo) SetMobile(v string) {
	o.Mobile = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReceiverAddressInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiverAddressInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReceiverAddressInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReceiverAddressInfo) SetName(v string) {
	o.Name = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *ReceiverAddressInfo) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiverAddressInfo) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *ReceiverAddressInfo) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *ReceiverAddressInfo) SetZip(v string) {
	o.Zip = &v
}

func (o ReceiverAddressInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReceiverAddressInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.DivisionCode) {
		toSerialize["division_code"] = o.DivisionCode
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	return toSerialize, nil
}

type NullableReceiverAddressInfo struct {
	value *ReceiverAddressInfo
	isSet bool
}

func (v NullableReceiverAddressInfo) Get() *ReceiverAddressInfo {
	return v.value
}

func (v *NullableReceiverAddressInfo) Set(val *ReceiverAddressInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableReceiverAddressInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableReceiverAddressInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceiverAddressInfo(val *ReceiverAddressInfo) *NullableReceiverAddressInfo {
	return &NullableReceiverAddressInfo{value: val, isSet: true}
}

func (v NullableReceiverAddressInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceiverAddressInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

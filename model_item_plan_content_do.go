/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ItemPlanContentDO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemPlanContentDO{}

// ItemPlanContentDO struct for ItemPlanContentDO
type ItemPlanContentDO struct {
	// 对应服务库编码
	Codes []string `json:"codes,omitempty"`
	// 条目类型，必须， 商品：ITEM
	Type *string `json:"type,omitempty"`
}

// NewItemPlanContentDO instantiates a new ItemPlanContentDO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemPlanContentDO() *ItemPlanContentDO {
	this := ItemPlanContentDO{}
	return &this
}

// NewItemPlanContentDOWithDefaults instantiates a new ItemPlanContentDO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemPlanContentDOWithDefaults() *ItemPlanContentDO {
	this := ItemPlanContentDO{}
	return &this
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *ItemPlanContentDO) GetCodes() []string {
	if o == nil || IsNil(o.Codes) {
		var ret []string
		return ret
	}
	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemPlanContentDO) GetCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *ItemPlanContentDO) HasCodes() bool {
	if o != nil && !IsNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given []string and assigns it to the Codes field.
func (o *ItemPlanContentDO) SetCodes(v []string) {
	o.Codes = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ItemPlanContentDO) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemPlanContentDO) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ItemPlanContentDO) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ItemPlanContentDO) SetType(v string) {
	o.Type = &v
}

func (o ItemPlanContentDO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemPlanContentDO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableItemPlanContentDO struct {
	value *ItemPlanContentDO
	isSet bool
}

func (v NullableItemPlanContentDO) Get() *ItemPlanContentDO {
	return v.value
}

func (v *NullableItemPlanContentDO) Set(val *ItemPlanContentDO) {
	v.value = val
	v.isSet = true
}

func (v NullableItemPlanContentDO) IsSet() bool {
	return v.isSet
}

func (v *NullableItemPlanContentDO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemPlanContentDO(val *ItemPlanContentDO) *NullableItemPlanContentDO {
	return &NullableItemPlanContentDO{value: val, isSet: true}
}

func (v NullableItemPlanContentDO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemPlanContentDO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoucherSendRuleInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherSendRuleInfo{}

// VoucherSendRuleInfo struct for VoucherSendRuleInfo
type VoucherSendRuleInfo struct {
	// 设置此字段，允许指定单天最大发券数量。
	MaxQuantityByDay *int32 `json:"max_quantity_by_day,omitempty"`
	// 是否开启自然人领取限制。 自然人表示按照身份证纬度进行领取限制。
	NaturalPersonLimit *bool `json:"natural_person_limit,omitempty"`
	// 是否开启电话号码领取限制。
	PhoneNumberLimit *bool `json:"phone_number_limit,omitempty"`
	// 下单时是否需要用户填写手机号码
	PhoneNumberNeedInputLimit *bool `json:"phone_number_need_input_limit,omitempty"`
	// 券发放结束时间。 格式为：yyyy-MM-dd HH:mm:ss
	PublishEndTime *string `json:"publish_end_time,omitempty"`
	// 券发放开始时间。 格式为：yyyy-MM-dd HH:mm:ss
	PublishStartTime *string `json:"publish_start_time,omitempty"`
	// 发行券的数量。
	Quantity *int32 `json:"quantity,omitempty"`
	// 每人领取限制。 默认按照支付宝账号进行领取限制; 不填写或填入0表示没有领取限制.
	QuantityLimitPerUser *int32 `json:"quantity_limit_per_user,omitempty"`
	// 周期限领配置,限制每人在固定周期内领取张数(voucher_quantity_limit_per_user),默认LIFE_CYCLE
	QuantityLimitPerUserPeriodType *string `json:"quantity_limit_per_user_period_type,omitempty"`
	// 限制支付宝实名用户才能领取支付券,默认为false表示不限制 枚举值 true\\false
	RealNameLimit *bool `json:"real_name_limit,omitempty"`
}

// NewVoucherSendRuleInfo instantiates a new VoucherSendRuleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherSendRuleInfo() *VoucherSendRuleInfo {
	this := VoucherSendRuleInfo{}
	return &this
}

// NewVoucherSendRuleInfoWithDefaults instantiates a new VoucherSendRuleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherSendRuleInfoWithDefaults() *VoucherSendRuleInfo {
	this := VoucherSendRuleInfo{}
	return &this
}

// GetMaxQuantityByDay returns the MaxQuantityByDay field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetMaxQuantityByDay() int32 {
	if o == nil || IsNil(o.MaxQuantityByDay) {
		var ret int32
		return ret
	}
	return *o.MaxQuantityByDay
}

// GetMaxQuantityByDayOk returns a tuple with the MaxQuantityByDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetMaxQuantityByDayOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxQuantityByDay) {
		return nil, false
	}
	return o.MaxQuantityByDay, true
}

// HasMaxQuantityByDay returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasMaxQuantityByDay() bool {
	if o != nil && !IsNil(o.MaxQuantityByDay) {
		return true
	}

	return false
}

// SetMaxQuantityByDay gets a reference to the given int32 and assigns it to the MaxQuantityByDay field.
func (o *VoucherSendRuleInfo) SetMaxQuantityByDay(v int32) {
	o.MaxQuantityByDay = &v
}

// GetNaturalPersonLimit returns the NaturalPersonLimit field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetNaturalPersonLimit() bool {
	if o == nil || IsNil(o.NaturalPersonLimit) {
		var ret bool
		return ret
	}
	return *o.NaturalPersonLimit
}

// GetNaturalPersonLimitOk returns a tuple with the NaturalPersonLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetNaturalPersonLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.NaturalPersonLimit) {
		return nil, false
	}
	return o.NaturalPersonLimit, true
}

// HasNaturalPersonLimit returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasNaturalPersonLimit() bool {
	if o != nil && !IsNil(o.NaturalPersonLimit) {
		return true
	}

	return false
}

// SetNaturalPersonLimit gets a reference to the given bool and assigns it to the NaturalPersonLimit field.
func (o *VoucherSendRuleInfo) SetNaturalPersonLimit(v bool) {
	o.NaturalPersonLimit = &v
}

// GetPhoneNumberLimit returns the PhoneNumberLimit field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetPhoneNumberLimit() bool {
	if o == nil || IsNil(o.PhoneNumberLimit) {
		var ret bool
		return ret
	}
	return *o.PhoneNumberLimit
}

// GetPhoneNumberLimitOk returns a tuple with the PhoneNumberLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetPhoneNumberLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.PhoneNumberLimit) {
		return nil, false
	}
	return o.PhoneNumberLimit, true
}

// HasPhoneNumberLimit returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasPhoneNumberLimit() bool {
	if o != nil && !IsNil(o.PhoneNumberLimit) {
		return true
	}

	return false
}

// SetPhoneNumberLimit gets a reference to the given bool and assigns it to the PhoneNumberLimit field.
func (o *VoucherSendRuleInfo) SetPhoneNumberLimit(v bool) {
	o.PhoneNumberLimit = &v
}

// GetPhoneNumberNeedInputLimit returns the PhoneNumberNeedInputLimit field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetPhoneNumberNeedInputLimit() bool {
	if o == nil || IsNil(o.PhoneNumberNeedInputLimit) {
		var ret bool
		return ret
	}
	return *o.PhoneNumberNeedInputLimit
}

// GetPhoneNumberNeedInputLimitOk returns a tuple with the PhoneNumberNeedInputLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetPhoneNumberNeedInputLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.PhoneNumberNeedInputLimit) {
		return nil, false
	}
	return o.PhoneNumberNeedInputLimit, true
}

// HasPhoneNumberNeedInputLimit returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasPhoneNumberNeedInputLimit() bool {
	if o != nil && !IsNil(o.PhoneNumberNeedInputLimit) {
		return true
	}

	return false
}

// SetPhoneNumberNeedInputLimit gets a reference to the given bool and assigns it to the PhoneNumberNeedInputLimit field.
func (o *VoucherSendRuleInfo) SetPhoneNumberNeedInputLimit(v bool) {
	o.PhoneNumberNeedInputLimit = &v
}

// GetPublishEndTime returns the PublishEndTime field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetPublishEndTime() string {
	if o == nil || IsNil(o.PublishEndTime) {
		var ret string
		return ret
	}
	return *o.PublishEndTime
}

// GetPublishEndTimeOk returns a tuple with the PublishEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetPublishEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PublishEndTime) {
		return nil, false
	}
	return o.PublishEndTime, true
}

// HasPublishEndTime returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasPublishEndTime() bool {
	if o != nil && !IsNil(o.PublishEndTime) {
		return true
	}

	return false
}

// SetPublishEndTime gets a reference to the given string and assigns it to the PublishEndTime field.
func (o *VoucherSendRuleInfo) SetPublishEndTime(v string) {
	o.PublishEndTime = &v
}

// GetPublishStartTime returns the PublishStartTime field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetPublishStartTime() string {
	if o == nil || IsNil(o.PublishStartTime) {
		var ret string
		return ret
	}
	return *o.PublishStartTime
}

// GetPublishStartTimeOk returns a tuple with the PublishStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetPublishStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PublishStartTime) {
		return nil, false
	}
	return o.PublishStartTime, true
}

// HasPublishStartTime returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasPublishStartTime() bool {
	if o != nil && !IsNil(o.PublishStartTime) {
		return true
	}

	return false
}

// SetPublishStartTime gets a reference to the given string and assigns it to the PublishStartTime field.
func (o *VoucherSendRuleInfo) SetPublishStartTime(v string) {
	o.PublishStartTime = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *VoucherSendRuleInfo) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetQuantityLimitPerUser returns the QuantityLimitPerUser field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetQuantityLimitPerUser() int32 {
	if o == nil || IsNil(o.QuantityLimitPerUser) {
		var ret int32
		return ret
	}
	return *o.QuantityLimitPerUser
}

// GetQuantityLimitPerUserOk returns a tuple with the QuantityLimitPerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetQuantityLimitPerUserOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityLimitPerUser) {
		return nil, false
	}
	return o.QuantityLimitPerUser, true
}

// HasQuantityLimitPerUser returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasQuantityLimitPerUser() bool {
	if o != nil && !IsNil(o.QuantityLimitPerUser) {
		return true
	}

	return false
}

// SetQuantityLimitPerUser gets a reference to the given int32 and assigns it to the QuantityLimitPerUser field.
func (o *VoucherSendRuleInfo) SetQuantityLimitPerUser(v int32) {
	o.QuantityLimitPerUser = &v
}

// GetQuantityLimitPerUserPeriodType returns the QuantityLimitPerUserPeriodType field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetQuantityLimitPerUserPeriodType() string {
	if o == nil || IsNil(o.QuantityLimitPerUserPeriodType) {
		var ret string
		return ret
	}
	return *o.QuantityLimitPerUserPeriodType
}

// GetQuantityLimitPerUserPeriodTypeOk returns a tuple with the QuantityLimitPerUserPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetQuantityLimitPerUserPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QuantityLimitPerUserPeriodType) {
		return nil, false
	}
	return o.QuantityLimitPerUserPeriodType, true
}

// HasQuantityLimitPerUserPeriodType returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasQuantityLimitPerUserPeriodType() bool {
	if o != nil && !IsNil(o.QuantityLimitPerUserPeriodType) {
		return true
	}

	return false
}

// SetQuantityLimitPerUserPeriodType gets a reference to the given string and assigns it to the QuantityLimitPerUserPeriodType field.
func (o *VoucherSendRuleInfo) SetQuantityLimitPerUserPeriodType(v string) {
	o.QuantityLimitPerUserPeriodType = &v
}

// GetRealNameLimit returns the RealNameLimit field value if set, zero value otherwise.
func (o *VoucherSendRuleInfo) GetRealNameLimit() bool {
	if o == nil || IsNil(o.RealNameLimit) {
		var ret bool
		return ret
	}
	return *o.RealNameLimit
}

// GetRealNameLimitOk returns a tuple with the RealNameLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherSendRuleInfo) GetRealNameLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.RealNameLimit) {
		return nil, false
	}
	return o.RealNameLimit, true
}

// HasRealNameLimit returns a boolean if a field has been set.
func (o *VoucherSendRuleInfo) HasRealNameLimit() bool {
	if o != nil && !IsNil(o.RealNameLimit) {
		return true
	}

	return false
}

// SetRealNameLimit gets a reference to the given bool and assigns it to the RealNameLimit field.
func (o *VoucherSendRuleInfo) SetRealNameLimit(v bool) {
	o.RealNameLimit = &v
}

func (o VoucherSendRuleInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherSendRuleInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxQuantityByDay) {
		toSerialize["max_quantity_by_day"] = o.MaxQuantityByDay
	}
	if !IsNil(o.NaturalPersonLimit) {
		toSerialize["natural_person_limit"] = o.NaturalPersonLimit
	}
	if !IsNil(o.PhoneNumberLimit) {
		toSerialize["phone_number_limit"] = o.PhoneNumberLimit
	}
	if !IsNil(o.PhoneNumberNeedInputLimit) {
		toSerialize["phone_number_need_input_limit"] = o.PhoneNumberNeedInputLimit
	}
	if !IsNil(o.PublishEndTime) {
		toSerialize["publish_end_time"] = o.PublishEndTime
	}
	if !IsNil(o.PublishStartTime) {
		toSerialize["publish_start_time"] = o.PublishStartTime
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.QuantityLimitPerUser) {
		toSerialize["quantity_limit_per_user"] = o.QuantityLimitPerUser
	}
	if !IsNil(o.QuantityLimitPerUserPeriodType) {
		toSerialize["quantity_limit_per_user_period_type"] = o.QuantityLimitPerUserPeriodType
	}
	if !IsNil(o.RealNameLimit) {
		toSerialize["real_name_limit"] = o.RealNameLimit
	}
	return toSerialize, nil
}

type NullableVoucherSendRuleInfo struct {
	value *VoucherSendRuleInfo
	isSet bool
}

func (v NullableVoucherSendRuleInfo) Get() *VoucherSendRuleInfo {
	return v.value
}

func (v *NullableVoucherSendRuleInfo) Set(val *VoucherSendRuleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherSendRuleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherSendRuleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherSendRuleInfo(val *VoucherSendRuleInfo) *NullableVoucherSendRuleInfo {
	return &NullableVoucherSendRuleInfo{value: val, isSet: true}
}

func (v NullableVoucherSendRuleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherSendRuleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



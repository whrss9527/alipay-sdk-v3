/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the GoodsInfoIstd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsInfoIstd{}

// GoodsInfoIstd struct for GoodsInfoIstd
type GoodsInfoIstd struct {
	// 交货信息，用于骑手交付商品
	DeliveryInfo *string `json:"delivery_info,omitempty"`
	// 一级品类类目
	FirstClass *string `json:"first_class,omitempty"`
	// 商品高度，单位为cm
	Height *int32 `json:"height,omitempty"`
	// 商品长度，单位为cm
	Length *int32 `json:"length,omitempty"`
	// 取货信息，用于骑手到店取货
	PickupInfo *string `json:"pickup_info,omitempty"`
	// 总价
	Price *string `json:"price,omitempty"`
	// 二级品类类目
	SecondClass *string `json:"second_class,omitempty"`
	// 货物重量，单位为kg，精确到小数点后两位
	Weight *string `json:"weight,omitempty"`
	// 商品宽度，单位为cm
	Width *int32 `json:"width,omitempty"`
}

// NewGoodsInfoIstd instantiates a new GoodsInfoIstd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsInfoIstd() *GoodsInfoIstd {
	this := GoodsInfoIstd{}
	return &this
}

// NewGoodsInfoIstdWithDefaults instantiates a new GoodsInfoIstd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsInfoIstdWithDefaults() *GoodsInfoIstd {
	this := GoodsInfoIstd{}
	return &this
}

// GetDeliveryInfo returns the DeliveryInfo field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetDeliveryInfo() string {
	if o == nil || IsNil(o.DeliveryInfo) {
		var ret string
		return ret
	}
	return *o.DeliveryInfo
}

// GetDeliveryInfoOk returns a tuple with the DeliveryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetDeliveryInfoOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryInfo) {
		return nil, false
	}
	return o.DeliveryInfo, true
}

// HasDeliveryInfo returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasDeliveryInfo() bool {
	if o != nil && !IsNil(o.DeliveryInfo) {
		return true
	}

	return false
}

// SetDeliveryInfo gets a reference to the given string and assigns it to the DeliveryInfo field.
func (o *GoodsInfoIstd) SetDeliveryInfo(v string) {
	o.DeliveryInfo = &v
}

// GetFirstClass returns the FirstClass field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetFirstClass() string {
	if o == nil || IsNil(o.FirstClass) {
		var ret string
		return ret
	}
	return *o.FirstClass
}

// GetFirstClassOk returns a tuple with the FirstClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetFirstClassOk() (*string, bool) {
	if o == nil || IsNil(o.FirstClass) {
		return nil, false
	}
	return o.FirstClass, true
}

// HasFirstClass returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasFirstClass() bool {
	if o != nil && !IsNil(o.FirstClass) {
		return true
	}

	return false
}

// SetFirstClass gets a reference to the given string and assigns it to the FirstClass field.
func (o *GoodsInfoIstd) SetFirstClass(v string) {
	o.FirstClass = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *GoodsInfoIstd) SetHeight(v int32) {
	o.Height = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetLength() int32 {
	if o == nil || IsNil(o.Length) {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *GoodsInfoIstd) SetLength(v int32) {
	o.Length = &v
}

// GetPickupInfo returns the PickupInfo field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetPickupInfo() string {
	if o == nil || IsNil(o.PickupInfo) {
		var ret string
		return ret
	}
	return *o.PickupInfo
}

// GetPickupInfoOk returns a tuple with the PickupInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetPickupInfoOk() (*string, bool) {
	if o == nil || IsNil(o.PickupInfo) {
		return nil, false
	}
	return o.PickupInfo, true
}

// HasPickupInfo returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasPickupInfo() bool {
	if o != nil && !IsNil(o.PickupInfo) {
		return true
	}

	return false
}

// SetPickupInfo gets a reference to the given string and assigns it to the PickupInfo field.
func (o *GoodsInfoIstd) SetPickupInfo(v string) {
	o.PickupInfo = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *GoodsInfoIstd) SetPrice(v string) {
	o.Price = &v
}

// GetSecondClass returns the SecondClass field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetSecondClass() string {
	if o == nil || IsNil(o.SecondClass) {
		var ret string
		return ret
	}
	return *o.SecondClass
}

// GetSecondClassOk returns a tuple with the SecondClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetSecondClassOk() (*string, bool) {
	if o == nil || IsNil(o.SecondClass) {
		return nil, false
	}
	return o.SecondClass, true
}

// HasSecondClass returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasSecondClass() bool {
	if o != nil && !IsNil(o.SecondClass) {
		return true
	}

	return false
}

// SetSecondClass gets a reference to the given string and assigns it to the SecondClass field.
func (o *GoodsInfoIstd) SetSecondClass(v string) {
	o.SecondClass = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetWeight() string {
	if o == nil || IsNil(o.Weight) {
		var ret string
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetWeightOk() (*string, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given string and assigns it to the Weight field.
func (o *GoodsInfoIstd) SetWeight(v string) {
	o.Weight = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *GoodsInfoIstd) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoIstd) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *GoodsInfoIstd) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *GoodsInfoIstd) SetWidth(v int32) {
	o.Width = &v
}

func (o GoodsInfoIstd) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsInfoIstd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliveryInfo) {
		toSerialize["delivery_info"] = o.DeliveryInfo
	}
	if !IsNil(o.FirstClass) {
		toSerialize["first_class"] = o.FirstClass
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.PickupInfo) {
		toSerialize["pickup_info"] = o.PickupInfo
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.SecondClass) {
		toSerialize["second_class"] = o.SecondClass
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullableGoodsInfoIstd struct {
	value *GoodsInfoIstd
	isSet bool
}

func (v NullableGoodsInfoIstd) Get() *GoodsInfoIstd {
	return v.value
}

func (v *NullableGoodsInfoIstd) Set(val *GoodsInfoIstd) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsInfoIstd) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsInfoIstd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsInfoIstd(val *GoodsInfoIstd) *NullableGoodsInfoIstd {
	return &NullableGoodsInfoIstd{value: val, isSet: true}
}

func (v NullableGoodsInfoIstd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsInfoIstd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocInfo{}

// DocInfo struct for DocInfo
type DocInfo struct {
	// 合同文件名
	FileName *string `json:"file_name,omitempty"`
	// 合同下载地址
	FileUrl *string `json:"file_url,omitempty"`
}

// NewDocInfo instantiates a new DocInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocInfo() *DocInfo {
	this := DocInfo{}
	return &this
}

// NewDocInfoWithDefaults instantiates a new DocInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocInfoWithDefaults() *DocInfo {
	this := DocInfo{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *DocInfo) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocInfo) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *DocInfo) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *DocInfo) SetFileName(v string) {
	o.FileName = &v
}

// GetFileUrl returns the FileUrl field value if set, zero value otherwise.
func (o *DocInfo) GetFileUrl() string {
	if o == nil || IsNil(o.FileUrl) {
		var ret string
		return ret
	}
	return *o.FileUrl
}

// GetFileUrlOk returns a tuple with the FileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocInfo) GetFileUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileUrl) {
		return nil, false
	}
	return o.FileUrl, true
}

// HasFileUrl returns a boolean if a field has been set.
func (o *DocInfo) HasFileUrl() bool {
	if o != nil && !IsNil(o.FileUrl) {
		return true
	}

	return false
}

// SetFileUrl gets a reference to the given string and assigns it to the FileUrl field.
func (o *DocInfo) SetFileUrl(v string) {
	o.FileUrl = &v
}

func (o DocInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileUrl) {
		toSerialize["file_url"] = o.FileUrl
	}
	return toSerialize, nil
}

type NullableDocInfo struct {
	value *DocInfo
	isSet bool
}

func (v NullableDocInfo) Get() *DocInfo {
	return v.value
}

func (v *NullableDocInfo) Set(val *DocInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDocInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDocInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocInfo(val *DocInfo) *NullableDocInfo {
	return &NullableDocInfo{value: val, isSet: true}
}

func (v NullableDocInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



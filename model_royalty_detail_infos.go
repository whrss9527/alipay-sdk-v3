/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoyaltyDetailInfos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoyaltyDetailInfos{}

// RoyaltyDetailInfos struct for RoyaltyDetailInfos
type RoyaltyDetailInfos struct {
	// 分账的金额，单位为元
	Amount *string `json:"amount,omitempty"`
	// 分账的比例，值为20代表按20%的比例分账
	AmountPercentage *string `json:"amount_percentage,omitempty"`
	// 分账批次号  分账批次号。  目前需要和转入账号类型为bankIndex配合使用。
	BatchNo *string `json:"batch_no,omitempty"`
	// 分账描述信息
	Desc *string `json:"desc,omitempty"`
	// 商户分账的外部关联号，用于关联到每一笔分账信息，商户需保证其唯一性。  如果为空，该值则默认为“商户网站唯一订单号+分账序列号”
	OutRelationId *string `json:"out_relation_id,omitempty"`
	// 分账序列号，表示分账执行的顺序，必须为正整数
	SerialNo *int32 `json:"serial_no,omitempty"`
	// 如果转入账号类型为userId，本参数为接受分账金额的支付宝账号对应的支付宝唯一用户号。以2088开头的纯16位数字。  &#61548; 如果转入账号类型为bankIndex，本参数为28位的银行编号（商户和支付宝签约时确定）。  如果转入账号类型为storeId，本参数为商户的门店ID。
	TransIn *string `json:"trans_in,omitempty"`
	// 接受分账金额的账户类型
	TransInType *string `json:"trans_in_type,omitempty"`
	// 如果转出账号类型为userId，本参数为要分账的支付宝账号对应的支付宝唯一用户号。以2088开头的纯16位数字。
	TransOut *string `json:"trans_out,omitempty"`
	// 要分账的账户类型。  目前只支持userId：支付宝账号对应的支付宝唯一用户号。  默认值为userId。
	TransOutType *string `json:"trans_out_type,omitempty"`
}

// NewRoyaltyDetailInfos instantiates a new RoyaltyDetailInfos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoyaltyDetailInfos() *RoyaltyDetailInfos {
	this := RoyaltyDetailInfos{}
	return &this
}

// NewRoyaltyDetailInfosWithDefaults instantiates a new RoyaltyDetailInfos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoyaltyDetailInfosWithDefaults() *RoyaltyDetailInfos {
	this := RoyaltyDetailInfos{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *RoyaltyDetailInfos) SetAmount(v string) {
	o.Amount = &v
}

// GetAmountPercentage returns the AmountPercentage field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetAmountPercentage() string {
	if o == nil || IsNil(o.AmountPercentage) {
		var ret string
		return ret
	}
	return *o.AmountPercentage
}

// GetAmountPercentageOk returns a tuple with the AmountPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetAmountPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.AmountPercentage) {
		return nil, false
	}
	return o.AmountPercentage, true
}

// HasAmountPercentage returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasAmountPercentage() bool {
	if o != nil && !IsNil(o.AmountPercentage) {
		return true
	}

	return false
}

// SetAmountPercentage gets a reference to the given string and assigns it to the AmountPercentage field.
func (o *RoyaltyDetailInfos) SetAmountPercentage(v string) {
	o.AmountPercentage = &v
}

// GetBatchNo returns the BatchNo field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetBatchNo() string {
	if o == nil || IsNil(o.BatchNo) {
		var ret string
		return ret
	}
	return *o.BatchNo
}

// GetBatchNoOk returns a tuple with the BatchNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetBatchNoOk() (*string, bool) {
	if o == nil || IsNil(o.BatchNo) {
		return nil, false
	}
	return o.BatchNo, true
}

// HasBatchNo returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasBatchNo() bool {
	if o != nil && !IsNil(o.BatchNo) {
		return true
	}

	return false
}

// SetBatchNo gets a reference to the given string and assigns it to the BatchNo field.
func (o *RoyaltyDetailInfos) SetBatchNo(v string) {
	o.BatchNo = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *RoyaltyDetailInfos) SetDesc(v string) {
	o.Desc = &v
}

// GetOutRelationId returns the OutRelationId field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetOutRelationId() string {
	if o == nil || IsNil(o.OutRelationId) {
		var ret string
		return ret
	}
	return *o.OutRelationId
}

// GetOutRelationIdOk returns a tuple with the OutRelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetOutRelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutRelationId) {
		return nil, false
	}
	return o.OutRelationId, true
}

// HasOutRelationId returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasOutRelationId() bool {
	if o != nil && !IsNil(o.OutRelationId) {
		return true
	}

	return false
}

// SetOutRelationId gets a reference to the given string and assigns it to the OutRelationId field.
func (o *RoyaltyDetailInfos) SetOutRelationId(v string) {
	o.OutRelationId = &v
}

// GetSerialNo returns the SerialNo field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetSerialNo() int32 {
	if o == nil || IsNil(o.SerialNo) {
		var ret int32
		return ret
	}
	return *o.SerialNo
}

// GetSerialNoOk returns a tuple with the SerialNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetSerialNoOk() (*int32, bool) {
	if o == nil || IsNil(o.SerialNo) {
		return nil, false
	}
	return o.SerialNo, true
}

// HasSerialNo returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasSerialNo() bool {
	if o != nil && !IsNil(o.SerialNo) {
		return true
	}

	return false
}

// SetSerialNo gets a reference to the given int32 and assigns it to the SerialNo field.
func (o *RoyaltyDetailInfos) SetSerialNo(v int32) {
	o.SerialNo = &v
}

// GetTransIn returns the TransIn field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetTransIn() string {
	if o == nil || IsNil(o.TransIn) {
		var ret string
		return ret
	}
	return *o.TransIn
}

// GetTransInOk returns a tuple with the TransIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetTransInOk() (*string, bool) {
	if o == nil || IsNil(o.TransIn) {
		return nil, false
	}
	return o.TransIn, true
}

// HasTransIn returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasTransIn() bool {
	if o != nil && !IsNil(o.TransIn) {
		return true
	}

	return false
}

// SetTransIn gets a reference to the given string and assigns it to the TransIn field.
func (o *RoyaltyDetailInfos) SetTransIn(v string) {
	o.TransIn = &v
}

// GetTransInType returns the TransInType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetTransInType() string {
	if o == nil || IsNil(o.TransInType) {
		var ret string
		return ret
	}
	return *o.TransInType
}

// GetTransInTypeOk returns a tuple with the TransInType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetTransInTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInType) {
		return nil, false
	}
	return o.TransInType, true
}

// HasTransInType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasTransInType() bool {
	if o != nil && !IsNil(o.TransInType) {
		return true
	}

	return false
}

// SetTransInType gets a reference to the given string and assigns it to the TransInType field.
func (o *RoyaltyDetailInfos) SetTransInType(v string) {
	o.TransInType = &v
}

// GetTransOut returns the TransOut field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetTransOut() string {
	if o == nil || IsNil(o.TransOut) {
		var ret string
		return ret
	}
	return *o.TransOut
}

// GetTransOutOk returns a tuple with the TransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetTransOutOk() (*string, bool) {
	if o == nil || IsNil(o.TransOut) {
		return nil, false
	}
	return o.TransOut, true
}

// HasTransOut returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasTransOut() bool {
	if o != nil && !IsNil(o.TransOut) {
		return true
	}

	return false
}

// SetTransOut gets a reference to the given string and assigns it to the TransOut field.
func (o *RoyaltyDetailInfos) SetTransOut(v string) {
	o.TransOut = &v
}

// GetTransOutType returns the TransOutType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfos) GetTransOutType() string {
	if o == nil || IsNil(o.TransOutType) {
		var ret string
		return ret
	}
	return *o.TransOutType
}

// GetTransOutTypeOk returns a tuple with the TransOutType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfos) GetTransOutTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutType) {
		return nil, false
	}
	return o.TransOutType, true
}

// HasTransOutType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfos) HasTransOutType() bool {
	if o != nil && !IsNil(o.TransOutType) {
		return true
	}

	return false
}

// SetTransOutType gets a reference to the given string and assigns it to the TransOutType field.
func (o *RoyaltyDetailInfos) SetTransOutType(v string) {
	o.TransOutType = &v
}

func (o RoyaltyDetailInfos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoyaltyDetailInfos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AmountPercentage) {
		toSerialize["amount_percentage"] = o.AmountPercentage
	}
	if !IsNil(o.BatchNo) {
		toSerialize["batch_no"] = o.BatchNo
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.OutRelationId) {
		toSerialize["out_relation_id"] = o.OutRelationId
	}
	if !IsNil(o.SerialNo) {
		toSerialize["serial_no"] = o.SerialNo
	}
	if !IsNil(o.TransIn) {
		toSerialize["trans_in"] = o.TransIn
	}
	if !IsNil(o.TransInType) {
		toSerialize["trans_in_type"] = o.TransInType
	}
	if !IsNil(o.TransOut) {
		toSerialize["trans_out"] = o.TransOut
	}
	if !IsNil(o.TransOutType) {
		toSerialize["trans_out_type"] = o.TransOutType
	}
	return toSerialize, nil
}

type NullableRoyaltyDetailInfos struct {
	value *RoyaltyDetailInfos
	isSet bool
}

func (v NullableRoyaltyDetailInfos) Get() *RoyaltyDetailInfos {
	return v.value
}

func (v *NullableRoyaltyDetailInfos) Set(val *RoyaltyDetailInfos) {
	v.value = val
	v.isSet = true
}

func (v NullableRoyaltyDetailInfos) IsSet() bool {
	return v.isSet
}

func (v *NullableRoyaltyDetailInfos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoyaltyDetailInfos(val *RoyaltyDetailInfos) *NullableRoyaltyDetailInfos {
	return &NullableRoyaltyDetailInfos{value: val, isSet: true}
}

func (v NullableRoyaltyDetailInfos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoyaltyDetailInfos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



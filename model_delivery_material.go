/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the DeliveryMaterial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryMaterial{}

// DeliveryMaterial struct for DeliveryMaterial
type DeliveryMaterial struct {
	DeliverySingleMaterial *DeliverySingleMaterial `json:"delivery_single_material,omitempty"`
	// 素材ID，通过alipay.marketing.material.create接口提供的素材组
	MaterialIdList []string `json:"material_id_list,omitempty"`
}

// NewDeliveryMaterial instantiates a new DeliveryMaterial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryMaterial() *DeliveryMaterial {
	this := DeliveryMaterial{}
	return &this
}

// NewDeliveryMaterialWithDefaults instantiates a new DeliveryMaterial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryMaterialWithDefaults() *DeliveryMaterial {
	this := DeliveryMaterial{}
	return &this
}

// GetDeliverySingleMaterial returns the DeliverySingleMaterial field value if set, zero value otherwise.
func (o *DeliveryMaterial) GetDeliverySingleMaterial() DeliverySingleMaterial {
	if o == nil || IsNil(o.DeliverySingleMaterial) {
		var ret DeliverySingleMaterial
		return ret
	}
	return *o.DeliverySingleMaterial
}

// GetDeliverySingleMaterialOk returns a tuple with the DeliverySingleMaterial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryMaterial) GetDeliverySingleMaterialOk() (*DeliverySingleMaterial, bool) {
	if o == nil || IsNil(o.DeliverySingleMaterial) {
		return nil, false
	}
	return o.DeliverySingleMaterial, true
}

// HasDeliverySingleMaterial returns a boolean if a field has been set.
func (o *DeliveryMaterial) HasDeliverySingleMaterial() bool {
	if o != nil && !IsNil(o.DeliverySingleMaterial) {
		return true
	}

	return false
}

// SetDeliverySingleMaterial gets a reference to the given DeliverySingleMaterial and assigns it to the DeliverySingleMaterial field.
func (o *DeliveryMaterial) SetDeliverySingleMaterial(v DeliverySingleMaterial) {
	o.DeliverySingleMaterial = &v
}

// GetMaterialIdList returns the MaterialIdList field value if set, zero value otherwise.
func (o *DeliveryMaterial) GetMaterialIdList() []string {
	if o == nil || IsNil(o.MaterialIdList) {
		var ret []string
		return ret
	}
	return o.MaterialIdList
}

// GetMaterialIdListOk returns a tuple with the MaterialIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryMaterial) GetMaterialIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.MaterialIdList) {
		return nil, false
	}
	return o.MaterialIdList, true
}

// HasMaterialIdList returns a boolean if a field has been set.
func (o *DeliveryMaterial) HasMaterialIdList() bool {
	if o != nil && !IsNil(o.MaterialIdList) {
		return true
	}

	return false
}

// SetMaterialIdList gets a reference to the given []string and assigns it to the MaterialIdList field.
func (o *DeliveryMaterial) SetMaterialIdList(v []string) {
	o.MaterialIdList = v
}

func (o DeliveryMaterial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryMaterial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliverySingleMaterial) {
		toSerialize["delivery_single_material"] = o.DeliverySingleMaterial
	}
	if !IsNil(o.MaterialIdList) {
		toSerialize["material_id_list"] = o.MaterialIdList
	}
	return toSerialize, nil
}

type NullableDeliveryMaterial struct {
	value *DeliveryMaterial
	isSet bool
}

func (v NullableDeliveryMaterial) Get() *DeliveryMaterial {
	return v.value
}

func (v *NullableDeliveryMaterial) Set(val *DeliveryMaterial) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryMaterial) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryMaterial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryMaterial(val *DeliveryMaterial) *NullableDeliveryMaterial {
	return &NullableDeliveryMaterial{value: val, isSet: true}
}

func (v NullableDeliveryMaterial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryMaterial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

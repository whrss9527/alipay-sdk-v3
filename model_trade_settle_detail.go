/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the TradeSettleDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TradeSettleDetail{}

// TradeSettleDetail struct for TradeSettleDetail
type TradeSettleDetail struct {
	// 实际操作金额，单位为元，两位小数。该参数的值为分账或补差或结算时传入
	Amount *string `json:"amount,omitempty"`
	// 操作日期
	OperationDt *string `json:"operation_dt,omitempty"`
	// 商户操作序列号。商户发起请求的外部请求号。
	OperationSerialNo *string `json:"operation_serial_no,omitempty"`
	// 结算操作类型。有以下几种类型： replenish(补差)、replenish_refund(退补差)、transfer(分账)、transfer_refund(退分账)、settle(结算)、settle_refund(退结算)、on_settle(待结算)。
	OperationType *string `json:"operation_type,omitempty"`
	// 商户请求的转入账号
	OriTransIn *string `json:"ori_trans_in,omitempty"`
	// 商户请求的转出账号
	OriTransOut *string `json:"ori_trans_out,omitempty"`
	// 转入账号
	TransIn *string `json:"trans_in,omitempty"`
	// 转出账号
	TransOut *string `json:"trans_out,omitempty"`
}

// NewTradeSettleDetail instantiates a new TradeSettleDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeSettleDetail() *TradeSettleDetail {
	this := TradeSettleDetail{}
	return &this
}

// NewTradeSettleDetailWithDefaults instantiates a new TradeSettleDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeSettleDetailWithDefaults() *TradeSettleDetail {
	this := TradeSettleDetail{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *TradeSettleDetail) SetAmount(v string) {
	o.Amount = &v
}

// GetOperationDt returns the OperationDt field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetOperationDt() string {
	if o == nil || IsNil(o.OperationDt) {
		var ret string
		return ret
	}
	return *o.OperationDt
}

// GetOperationDtOk returns a tuple with the OperationDt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetOperationDtOk() (*string, bool) {
	if o == nil || IsNil(o.OperationDt) {
		return nil, false
	}
	return o.OperationDt, true
}

// HasOperationDt returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasOperationDt() bool {
	if o != nil && !IsNil(o.OperationDt) {
		return true
	}

	return false
}

// SetOperationDt gets a reference to the given string and assigns it to the OperationDt field.
func (o *TradeSettleDetail) SetOperationDt(v string) {
	o.OperationDt = &v
}

// GetOperationSerialNo returns the OperationSerialNo field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetOperationSerialNo() string {
	if o == nil || IsNil(o.OperationSerialNo) {
		var ret string
		return ret
	}
	return *o.OperationSerialNo
}

// GetOperationSerialNoOk returns a tuple with the OperationSerialNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetOperationSerialNoOk() (*string, bool) {
	if o == nil || IsNil(o.OperationSerialNo) {
		return nil, false
	}
	return o.OperationSerialNo, true
}

// HasOperationSerialNo returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasOperationSerialNo() bool {
	if o != nil && !IsNil(o.OperationSerialNo) {
		return true
	}

	return false
}

// SetOperationSerialNo gets a reference to the given string and assigns it to the OperationSerialNo field.
func (o *TradeSettleDetail) SetOperationSerialNo(v string) {
	o.OperationSerialNo = &v
}

// GetOperationType returns the OperationType field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetOperationType() string {
	if o == nil || IsNil(o.OperationType) {
		var ret string
		return ret
	}
	return *o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetOperationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OperationType) {
		return nil, false
	}
	return o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasOperationType() bool {
	if o != nil && !IsNil(o.OperationType) {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given string and assigns it to the OperationType field.
func (o *TradeSettleDetail) SetOperationType(v string) {
	o.OperationType = &v
}

// GetOriTransIn returns the OriTransIn field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetOriTransIn() string {
	if o == nil || IsNil(o.OriTransIn) {
		var ret string
		return ret
	}
	return *o.OriTransIn
}

// GetOriTransInOk returns a tuple with the OriTransIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetOriTransInOk() (*string, bool) {
	if o == nil || IsNil(o.OriTransIn) {
		return nil, false
	}
	return o.OriTransIn, true
}

// HasOriTransIn returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasOriTransIn() bool {
	if o != nil && !IsNil(o.OriTransIn) {
		return true
	}

	return false
}

// SetOriTransIn gets a reference to the given string and assigns it to the OriTransIn field.
func (o *TradeSettleDetail) SetOriTransIn(v string) {
	o.OriTransIn = &v
}

// GetOriTransOut returns the OriTransOut field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetOriTransOut() string {
	if o == nil || IsNil(o.OriTransOut) {
		var ret string
		return ret
	}
	return *o.OriTransOut
}

// GetOriTransOutOk returns a tuple with the OriTransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetOriTransOutOk() (*string, bool) {
	if o == nil || IsNil(o.OriTransOut) {
		return nil, false
	}
	return o.OriTransOut, true
}

// HasOriTransOut returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasOriTransOut() bool {
	if o != nil && !IsNil(o.OriTransOut) {
		return true
	}

	return false
}

// SetOriTransOut gets a reference to the given string and assigns it to the OriTransOut field.
func (o *TradeSettleDetail) SetOriTransOut(v string) {
	o.OriTransOut = &v
}

// GetTransIn returns the TransIn field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetTransIn() string {
	if o == nil || IsNil(o.TransIn) {
		var ret string
		return ret
	}
	return *o.TransIn
}

// GetTransInOk returns a tuple with the TransIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetTransInOk() (*string, bool) {
	if o == nil || IsNil(o.TransIn) {
		return nil, false
	}
	return o.TransIn, true
}

// HasTransIn returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasTransIn() bool {
	if o != nil && !IsNil(o.TransIn) {
		return true
	}

	return false
}

// SetTransIn gets a reference to the given string and assigns it to the TransIn field.
func (o *TradeSettleDetail) SetTransIn(v string) {
	o.TransIn = &v
}

// GetTransOut returns the TransOut field value if set, zero value otherwise.
func (o *TradeSettleDetail) GetTransOut() string {
	if o == nil || IsNil(o.TransOut) {
		var ret string
		return ret
	}
	return *o.TransOut
}

// GetTransOutOk returns a tuple with the TransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeSettleDetail) GetTransOutOk() (*string, bool) {
	if o == nil || IsNil(o.TransOut) {
		return nil, false
	}
	return o.TransOut, true
}

// HasTransOut returns a boolean if a field has been set.
func (o *TradeSettleDetail) HasTransOut() bool {
	if o != nil && !IsNil(o.TransOut) {
		return true
	}

	return false
}

// SetTransOut gets a reference to the given string and assigns it to the TransOut field.
func (o *TradeSettleDetail) SetTransOut(v string) {
	o.TransOut = &v
}

func (o TradeSettleDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TradeSettleDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.OperationDt) {
		toSerialize["operation_dt"] = o.OperationDt
	}
	if !IsNil(o.OperationSerialNo) {
		toSerialize["operation_serial_no"] = o.OperationSerialNo
	}
	if !IsNil(o.OperationType) {
		toSerialize["operation_type"] = o.OperationType
	}
	if !IsNil(o.OriTransIn) {
		toSerialize["ori_trans_in"] = o.OriTransIn
	}
	if !IsNil(o.OriTransOut) {
		toSerialize["ori_trans_out"] = o.OriTransOut
	}
	if !IsNil(o.TransIn) {
		toSerialize["trans_in"] = o.TransIn
	}
	if !IsNil(o.TransOut) {
		toSerialize["trans_out"] = o.TransOut
	}
	return toSerialize, nil
}

type NullableTradeSettleDetail struct {
	value *TradeSettleDetail
	isSet bool
}

func (v NullableTradeSettleDetail) Get() *TradeSettleDetail {
	return v.value
}

func (v *NullableTradeSettleDetail) Set(val *TradeSettleDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeSettleDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeSettleDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeSettleDetail(val *TradeSettleDetail) *NullableTradeSettleDetail {
	return &NullableTradeSettleDetail{value: val, isSet: true}
}

func (v NullableTradeSettleDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeSettleDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

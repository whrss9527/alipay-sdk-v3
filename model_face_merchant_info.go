/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FaceMerchantInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FaceMerchantInfo{}

// FaceMerchantInfo struct for FaceMerchantInfo
type FaceMerchantInfo struct {
	// 区域编码
	AreaCode *string `json:"area_code,omitempty"`
	// 品牌编码
	BrandCode *string `json:"brand_code,omitempty"`
	// 机具Mac地址
	DeviceMac *string `json:"device_mac,omitempty"`
	// 机具编码
	DeviceNum *string `json:"device_num,omitempty"`
	// 经纬度
	Geo *string `json:"geo,omitempty"`
	// 机具分组编码
	Group *string `json:"group,omitempty"`
	// 商户ID
	MerchantId *string `json:"merchant_id,omitempty"`
	// ISV ID
	PartnerId *string `json:"partner_id,omitempty"`
	// 门店编码
	StoreCode *string `json:"store_code,omitempty"`
	// WI-FI Mac地址
	Wifimac *string `json:"wifimac,omitempty"`
	// WI-FI 名称
	Wifiname *string `json:"wifiname,omitempty"`
}

// NewFaceMerchantInfo instantiates a new FaceMerchantInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFaceMerchantInfo() *FaceMerchantInfo {
	this := FaceMerchantInfo{}
	return &this
}

// NewFaceMerchantInfoWithDefaults instantiates a new FaceMerchantInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFaceMerchantInfoWithDefaults() *FaceMerchantInfo {
	this := FaceMerchantInfo{}
	return &this
}

// GetAreaCode returns the AreaCode field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetAreaCode() string {
	if o == nil || IsNil(o.AreaCode) {
		var ret string
		return ret
	}
	return *o.AreaCode
}

// GetAreaCodeOk returns a tuple with the AreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCode) {
		return nil, false
	}
	return o.AreaCode, true
}

// HasAreaCode returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasAreaCode() bool {
	if o != nil && !IsNil(o.AreaCode) {
		return true
	}

	return false
}

// SetAreaCode gets a reference to the given string and assigns it to the AreaCode field.
func (o *FaceMerchantInfo) SetAreaCode(v string) {
	o.AreaCode = &v
}

// GetBrandCode returns the BrandCode field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetBrandCode() string {
	if o == nil || IsNil(o.BrandCode) {
		var ret string
		return ret
	}
	return *o.BrandCode
}

// GetBrandCodeOk returns a tuple with the BrandCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetBrandCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BrandCode) {
		return nil, false
	}
	return o.BrandCode, true
}

// HasBrandCode returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasBrandCode() bool {
	if o != nil && !IsNil(o.BrandCode) {
		return true
	}

	return false
}

// SetBrandCode gets a reference to the given string and assigns it to the BrandCode field.
func (o *FaceMerchantInfo) SetBrandCode(v string) {
	o.BrandCode = &v
}

// GetDeviceMac returns the DeviceMac field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetDeviceMac() string {
	if o == nil || IsNil(o.DeviceMac) {
		var ret string
		return ret
	}
	return *o.DeviceMac
}

// GetDeviceMacOk returns a tuple with the DeviceMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetDeviceMacOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceMac) {
		return nil, false
	}
	return o.DeviceMac, true
}

// HasDeviceMac returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasDeviceMac() bool {
	if o != nil && !IsNil(o.DeviceMac) {
		return true
	}

	return false
}

// SetDeviceMac gets a reference to the given string and assigns it to the DeviceMac field.
func (o *FaceMerchantInfo) SetDeviceMac(v string) {
	o.DeviceMac = &v
}

// GetDeviceNum returns the DeviceNum field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetDeviceNum() string {
	if o == nil || IsNil(o.DeviceNum) {
		var ret string
		return ret
	}
	return *o.DeviceNum
}

// GetDeviceNumOk returns a tuple with the DeviceNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetDeviceNumOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceNum) {
		return nil, false
	}
	return o.DeviceNum, true
}

// HasDeviceNum returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasDeviceNum() bool {
	if o != nil && !IsNil(o.DeviceNum) {
		return true
	}

	return false
}

// SetDeviceNum gets a reference to the given string and assigns it to the DeviceNum field.
func (o *FaceMerchantInfo) SetDeviceNum(v string) {
	o.DeviceNum = &v
}

// GetGeo returns the Geo field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetGeo() string {
	if o == nil || IsNil(o.Geo) {
		var ret string
		return ret
	}
	return *o.Geo
}

// GetGeoOk returns a tuple with the Geo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetGeoOk() (*string, bool) {
	if o == nil || IsNil(o.Geo) {
		return nil, false
	}
	return o.Geo, true
}

// HasGeo returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasGeo() bool {
	if o != nil && !IsNil(o.Geo) {
		return true
	}

	return false
}

// SetGeo gets a reference to the given string and assigns it to the Geo field.
func (o *FaceMerchantInfo) SetGeo(v string) {
	o.Geo = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *FaceMerchantInfo) SetGroup(v string) {
	o.Group = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetMerchantId() string {
	if o == nil || IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *FaceMerchantInfo) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *FaceMerchantInfo) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetStoreCode returns the StoreCode field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetStoreCode() string {
	if o == nil || IsNil(o.StoreCode) {
		var ret string
		return ret
	}
	return *o.StoreCode
}

// GetStoreCodeOk returns a tuple with the StoreCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetStoreCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StoreCode) {
		return nil, false
	}
	return o.StoreCode, true
}

// HasStoreCode returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasStoreCode() bool {
	if o != nil && !IsNil(o.StoreCode) {
		return true
	}

	return false
}

// SetStoreCode gets a reference to the given string and assigns it to the StoreCode field.
func (o *FaceMerchantInfo) SetStoreCode(v string) {
	o.StoreCode = &v
}

// GetWifimac returns the Wifimac field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetWifimac() string {
	if o == nil || IsNil(o.Wifimac) {
		var ret string
		return ret
	}
	return *o.Wifimac
}

// GetWifimacOk returns a tuple with the Wifimac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetWifimacOk() (*string, bool) {
	if o == nil || IsNil(o.Wifimac) {
		return nil, false
	}
	return o.Wifimac, true
}

// HasWifimac returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasWifimac() bool {
	if o != nil && !IsNil(o.Wifimac) {
		return true
	}

	return false
}

// SetWifimac gets a reference to the given string and assigns it to the Wifimac field.
func (o *FaceMerchantInfo) SetWifimac(v string) {
	o.Wifimac = &v
}

// GetWifiname returns the Wifiname field value if set, zero value otherwise.
func (o *FaceMerchantInfo) GetWifiname() string {
	if o == nil || IsNil(o.Wifiname) {
		var ret string
		return ret
	}
	return *o.Wifiname
}

// GetWifinameOk returns a tuple with the Wifiname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FaceMerchantInfo) GetWifinameOk() (*string, bool) {
	if o == nil || IsNil(o.Wifiname) {
		return nil, false
	}
	return o.Wifiname, true
}

// HasWifiname returns a boolean if a field has been set.
func (o *FaceMerchantInfo) HasWifiname() bool {
	if o != nil && !IsNil(o.Wifiname) {
		return true
	}

	return false
}

// SetWifiname gets a reference to the given string and assigns it to the Wifiname field.
func (o *FaceMerchantInfo) SetWifiname(v string) {
	o.Wifiname = &v
}

func (o FaceMerchantInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FaceMerchantInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AreaCode) {
		toSerialize["area_code"] = o.AreaCode
	}
	if !IsNil(o.BrandCode) {
		toSerialize["brand_code"] = o.BrandCode
	}
	if !IsNil(o.DeviceMac) {
		toSerialize["device_mac"] = o.DeviceMac
	}
	if !IsNil(o.DeviceNum) {
		toSerialize["device_num"] = o.DeviceNum
	}
	if !IsNil(o.Geo) {
		toSerialize["geo"] = o.Geo
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchant_id"] = o.MerchantId
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partner_id"] = o.PartnerId
	}
	if !IsNil(o.StoreCode) {
		toSerialize["store_code"] = o.StoreCode
	}
	if !IsNil(o.Wifimac) {
		toSerialize["wifimac"] = o.Wifimac
	}
	if !IsNil(o.Wifiname) {
		toSerialize["wifiname"] = o.Wifiname
	}
	return toSerialize, nil
}

type NullableFaceMerchantInfo struct {
	value *FaceMerchantInfo
	isSet bool
}

func (v NullableFaceMerchantInfo) Get() *FaceMerchantInfo {
	return v.value
}

func (v *NullableFaceMerchantInfo) Set(val *FaceMerchantInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFaceMerchantInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFaceMerchantInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFaceMerchantInfo(val *FaceMerchantInfo) *NullableFaceMerchantInfo {
	return &NullableFaceMerchantInfo{value: val, isSet: true}
}

func (v NullableFaceMerchantInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFaceMerchantInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the FunctionalService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FunctionalService{}

// FunctionalService struct for FunctionalService
type FunctionalService struct {
	// 功能内容
	Content *string `json:"content,omitempty"`
	// 扩展信息
	ExtInfo []OrderExtInfo `json:"ext_info,omitempty"`
	// 功能码 支持的功能码请与产品或对应技术确认
	FunctionCode *string `json:"function_code,omitempty"`
	// 功能名称
	FunctionName *string `json:"function_name,omitempty"`
	// 功能类型
	FunctionType *string `json:"function_type,omitempty"`
	// 功能入口
	FunctionUrl *string `json:"function_url,omitempty"`
	// 备注信息
	Memo *string `json:"memo,omitempty"`
}

// NewFunctionalService instantiates a new FunctionalService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionalService() *FunctionalService {
	this := FunctionalService{}
	return &this
}

// NewFunctionalServiceWithDefaults instantiates a new FunctionalService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionalServiceWithDefaults() *FunctionalService {
	this := FunctionalService{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *FunctionalService) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *FunctionalService) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *FunctionalService) SetContent(v string) {
	o.Content = &v
}

// GetExtInfo returns the ExtInfo field value if set, zero value otherwise.
func (o *FunctionalService) GetExtInfo() []OrderExtInfo {
	if o == nil || IsNil(o.ExtInfo) {
		var ret []OrderExtInfo
		return ret
	}
	return o.ExtInfo
}

// GetExtInfoOk returns a tuple with the ExtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetExtInfoOk() ([]OrderExtInfo, bool) {
	if o == nil || IsNil(o.ExtInfo) {
		return nil, false
	}
	return o.ExtInfo, true
}

// HasExtInfo returns a boolean if a field has been set.
func (o *FunctionalService) HasExtInfo() bool {
	if o != nil && !IsNil(o.ExtInfo) {
		return true
	}

	return false
}

// SetExtInfo gets a reference to the given []OrderExtInfo and assigns it to the ExtInfo field.
func (o *FunctionalService) SetExtInfo(v []OrderExtInfo) {
	o.ExtInfo = v
}

// GetFunctionCode returns the FunctionCode field value if set, zero value otherwise.
func (o *FunctionalService) GetFunctionCode() string {
	if o == nil || IsNil(o.FunctionCode) {
		var ret string
		return ret
	}
	return *o.FunctionCode
}

// GetFunctionCodeOk returns a tuple with the FunctionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetFunctionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionCode) {
		return nil, false
	}
	return o.FunctionCode, true
}

// HasFunctionCode returns a boolean if a field has been set.
func (o *FunctionalService) HasFunctionCode() bool {
	if o != nil && !IsNil(o.FunctionCode) {
		return true
	}

	return false
}

// SetFunctionCode gets a reference to the given string and assigns it to the FunctionCode field.
func (o *FunctionalService) SetFunctionCode(v string) {
	o.FunctionCode = &v
}

// GetFunctionName returns the FunctionName field value if set, zero value otherwise.
func (o *FunctionalService) GetFunctionName() string {
	if o == nil || IsNil(o.FunctionName) {
		var ret string
		return ret
	}
	return *o.FunctionName
}

// GetFunctionNameOk returns a tuple with the FunctionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetFunctionNameOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionName) {
		return nil, false
	}
	return o.FunctionName, true
}

// HasFunctionName returns a boolean if a field has been set.
func (o *FunctionalService) HasFunctionName() bool {
	if o != nil && !IsNil(o.FunctionName) {
		return true
	}

	return false
}

// SetFunctionName gets a reference to the given string and assigns it to the FunctionName field.
func (o *FunctionalService) SetFunctionName(v string) {
	o.FunctionName = &v
}

// GetFunctionType returns the FunctionType field value if set, zero value otherwise.
func (o *FunctionalService) GetFunctionType() string {
	if o == nil || IsNil(o.FunctionType) {
		var ret string
		return ret
	}
	return *o.FunctionType
}

// GetFunctionTypeOk returns a tuple with the FunctionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetFunctionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionType) {
		return nil, false
	}
	return o.FunctionType, true
}

// HasFunctionType returns a boolean if a field has been set.
func (o *FunctionalService) HasFunctionType() bool {
	if o != nil && !IsNil(o.FunctionType) {
		return true
	}

	return false
}

// SetFunctionType gets a reference to the given string and assigns it to the FunctionType field.
func (o *FunctionalService) SetFunctionType(v string) {
	o.FunctionType = &v
}

// GetFunctionUrl returns the FunctionUrl field value if set, zero value otherwise.
func (o *FunctionalService) GetFunctionUrl() string {
	if o == nil || IsNil(o.FunctionUrl) {
		var ret string
		return ret
	}
	return *o.FunctionUrl
}

// GetFunctionUrlOk returns a tuple with the FunctionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetFunctionUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionUrl) {
		return nil, false
	}
	return o.FunctionUrl, true
}

// HasFunctionUrl returns a boolean if a field has been set.
func (o *FunctionalService) HasFunctionUrl() bool {
	if o != nil && !IsNil(o.FunctionUrl) {
		return true
	}

	return false
}

// SetFunctionUrl gets a reference to the given string and assigns it to the FunctionUrl field.
func (o *FunctionalService) SetFunctionUrl(v string) {
	o.FunctionUrl = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *FunctionalService) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionalService) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *FunctionalService) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *FunctionalService) SetMemo(v string) {
	o.Memo = &v
}

func (o FunctionalService) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FunctionalService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ExtInfo) {
		toSerialize["ext_info"] = o.ExtInfo
	}
	if !IsNil(o.FunctionCode) {
		toSerialize["function_code"] = o.FunctionCode
	}
	if !IsNil(o.FunctionName) {
		toSerialize["function_name"] = o.FunctionName
	}
	if !IsNil(o.FunctionType) {
		toSerialize["function_type"] = o.FunctionType
	}
	if !IsNil(o.FunctionUrl) {
		toSerialize["function_url"] = o.FunctionUrl
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	return toSerialize, nil
}

type NullableFunctionalService struct {
	value *FunctionalService
	isSet bool
}

func (v NullableFunctionalService) Get() *FunctionalService {
	return v.value
}

func (v *NullableFunctionalService) Set(val *FunctionalService) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionalService) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionalService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionalService(val *FunctionalService) *NullableFunctionalService {
	return &NullableFunctionalService{value: val, isSet: true}
}

func (v NullableFunctionalService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionalService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExpenseVoucherInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpenseVoucherInfo{}

// ExpenseVoucherInfo struct for ExpenseVoucherInfo
type ExpenseVoucherInfo struct {
	// 企业支付宝用户id(对应凭证ownerid)
	AccountId *string `json:"account_id,omitempty"`
	// 消费时间
	ConsumptionDate *string `json:"consumption_date,omitempty"`
	// 员工ID
	EmployeeId *string `json:"employee_id,omitempty"`
	// 员工ID
	EmployeeOpenId *string `json:"employee_open_id,omitempty"`
	// 扩展预留
	Extension *string `json:"extension,omitempty"`
	// 数据创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 数据更新时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 行业属性值（从支付宝主账单复制）
	Industry *string `json:"industry,omitempty"`
	// 是否冲抵凭证：0 否（蓝票）；1 是(如:红票)
	IsOffSet *string `json:"is_off_set,omitempty"`
	// 凭证介质：纸or电子(PAPER,ELECTRON)
	Medium *string `json:"medium,omitempty"`
	// 外部唯一ID（和凭证类型有关，如果发票类型为发票号码+发票编码，如果是账单，则为账单号）
	OuterSourceId *string `json:"outer_source_id,omitempty"`
	// 凭证父类型（INVOICE-发票，TRAVEL-出行凭证，HTL_ORDER-酒店水单，CONSUME-账单，财政票夹）
	ParentType *string `json:"parent_type,omitempty"`
	// 交易金额（元）
	VoucherAmount *string `json:"voucher_amount,omitempty"`
	// 凭证创建时间
	VoucherDate *string `json:"voucher_date,omitempty"`
	// 凭证ID
	VoucherId *string `json:"voucher_id,omitempty"`
	// 一类凭证，唯一号码，有必须传，没有可不传。 发票、账单必须有 如部分餐饮小票，没有唯一号
	VoucherNo *string `json:"voucher_no,omitempty"`
	// 凭证状态(0-无效，1 有效)
	VoucherState *string `json:"voucher_state,omitempty"`
	// 凭证类型 （FINANCIAL_BILLS-财政电子票 MEDICAL_INVOICE-医疗票据 DONATION_INVOICE-公益捐赠电子票据 SETTLEMENT_INVOICE-往来结算票据 DUES_INVOICE-社会团体会费收据 INVOICE-增值税票 PLAIN-增值税电子普通发票 SPECIAL-增值税专用发票 PLAIN_INVOICE-增值税普通发票 PAPER_INVOICE-增值税普通发票(卷式) CONSUME-账单 ALIPAY_CONSUME-支付宝账单 TRAVEL-出行凭证 TAXI-出租车票 BUS_TICKET-汽车票 TRAIN-火车票 TOLL-过路费 BOARD_PASS-登机牌 HTL_ORDER-酒店水单 MEMO-酒店水单 OTHERS-杂票 FIXED-定额发票 LIST-小票 COMMON_INVOICE-通用发票）
	VoucherType *string `json:"voucher_type,omitempty"`
}

// NewExpenseVoucherInfo instantiates a new ExpenseVoucherInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpenseVoucherInfo() *ExpenseVoucherInfo {
	this := ExpenseVoucherInfo{}
	return &this
}

// NewExpenseVoucherInfoWithDefaults instantiates a new ExpenseVoucherInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpenseVoucherInfoWithDefaults() *ExpenseVoucherInfo {
	this := ExpenseVoucherInfo{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ExpenseVoucherInfo) SetAccountId(v string) {
	o.AccountId = &v
}

// GetConsumptionDate returns the ConsumptionDate field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetConsumptionDate() string {
	if o == nil || IsNil(o.ConsumptionDate) {
		var ret string
		return ret
	}
	return *o.ConsumptionDate
}

// GetConsumptionDateOk returns a tuple with the ConsumptionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetConsumptionDateOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumptionDate) {
		return nil, false
	}
	return o.ConsumptionDate, true
}

// HasConsumptionDate returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasConsumptionDate() bool {
	if o != nil && !IsNil(o.ConsumptionDate) {
		return true
	}

	return false
}

// SetConsumptionDate gets a reference to the given string and assigns it to the ConsumptionDate field.
func (o *ExpenseVoucherInfo) SetConsumptionDate(v string) {
	o.ConsumptionDate = &v
}

// GetEmployeeId returns the EmployeeId field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetEmployeeId() string {
	if o == nil || IsNil(o.EmployeeId) {
		var ret string
		return ret
	}
	return *o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetEmployeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeId) {
		return nil, false
	}
	return o.EmployeeId, true
}

// HasEmployeeId returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasEmployeeId() bool {
	if o != nil && !IsNil(o.EmployeeId) {
		return true
	}

	return false
}

// SetEmployeeId gets a reference to the given string and assigns it to the EmployeeId field.
func (o *ExpenseVoucherInfo) SetEmployeeId(v string) {
	o.EmployeeId = &v
}

// GetEmployeeOpenId returns the EmployeeOpenId field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetEmployeeOpenId() string {
	if o == nil || IsNil(o.EmployeeOpenId) {
		var ret string
		return ret
	}
	return *o.EmployeeOpenId
}

// GetEmployeeOpenIdOk returns a tuple with the EmployeeOpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetEmployeeOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeOpenId) {
		return nil, false
	}
	return o.EmployeeOpenId, true
}

// HasEmployeeOpenId returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasEmployeeOpenId() bool {
	if o != nil && !IsNil(o.EmployeeOpenId) {
		return true
	}

	return false
}

// SetEmployeeOpenId gets a reference to the given string and assigns it to the EmployeeOpenId field.
func (o *ExpenseVoucherInfo) SetEmployeeOpenId(v string) {
	o.EmployeeOpenId = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *ExpenseVoucherInfo) SetExtension(v string) {
	o.Extension = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *ExpenseVoucherInfo) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *ExpenseVoucherInfo) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetIndustry() string {
	if o == nil || IsNil(o.Industry) {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetIndustryOk() (*string, bool) {
	if o == nil || IsNil(o.Industry) {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasIndustry() bool {
	if o != nil && !IsNil(o.Industry) {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *ExpenseVoucherInfo) SetIndustry(v string) {
	o.Industry = &v
}

// GetIsOffSet returns the IsOffSet field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetIsOffSet() string {
	if o == nil || IsNil(o.IsOffSet) {
		var ret string
		return ret
	}
	return *o.IsOffSet
}

// GetIsOffSetOk returns a tuple with the IsOffSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetIsOffSetOk() (*string, bool) {
	if o == nil || IsNil(o.IsOffSet) {
		return nil, false
	}
	return o.IsOffSet, true
}

// HasIsOffSet returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasIsOffSet() bool {
	if o != nil && !IsNil(o.IsOffSet) {
		return true
	}

	return false
}

// SetIsOffSet gets a reference to the given string and assigns it to the IsOffSet field.
func (o *ExpenseVoucherInfo) SetIsOffSet(v string) {
	o.IsOffSet = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetMedium() string {
	if o == nil || IsNil(o.Medium) {
		var ret string
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetMediumOk() (*string, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given string and assigns it to the Medium field.
func (o *ExpenseVoucherInfo) SetMedium(v string) {
	o.Medium = &v
}

// GetOuterSourceId returns the OuterSourceId field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetOuterSourceId() string {
	if o == nil || IsNil(o.OuterSourceId) {
		var ret string
		return ret
	}
	return *o.OuterSourceId
}

// GetOuterSourceIdOk returns a tuple with the OuterSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetOuterSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.OuterSourceId) {
		return nil, false
	}
	return o.OuterSourceId, true
}

// HasOuterSourceId returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasOuterSourceId() bool {
	if o != nil && !IsNil(o.OuterSourceId) {
		return true
	}

	return false
}

// SetOuterSourceId gets a reference to the given string and assigns it to the OuterSourceId field.
func (o *ExpenseVoucherInfo) SetOuterSourceId(v string) {
	o.OuterSourceId = &v
}

// GetParentType returns the ParentType field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetParentType() string {
	if o == nil || IsNil(o.ParentType) {
		var ret string
		return ret
	}
	return *o.ParentType
}

// GetParentTypeOk returns a tuple with the ParentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetParentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParentType) {
		return nil, false
	}
	return o.ParentType, true
}

// HasParentType returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasParentType() bool {
	if o != nil && !IsNil(o.ParentType) {
		return true
	}

	return false
}

// SetParentType gets a reference to the given string and assigns it to the ParentType field.
func (o *ExpenseVoucherInfo) SetParentType(v string) {
	o.ParentType = &v
}

// GetVoucherAmount returns the VoucherAmount field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetVoucherAmount() string {
	if o == nil || IsNil(o.VoucherAmount) {
		var ret string
		return ret
	}
	return *o.VoucherAmount
}

// GetVoucherAmountOk returns a tuple with the VoucherAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetVoucherAmountOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherAmount) {
		return nil, false
	}
	return o.VoucherAmount, true
}

// HasVoucherAmount returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasVoucherAmount() bool {
	if o != nil && !IsNil(o.VoucherAmount) {
		return true
	}

	return false
}

// SetVoucherAmount gets a reference to the given string and assigns it to the VoucherAmount field.
func (o *ExpenseVoucherInfo) SetVoucherAmount(v string) {
	o.VoucherAmount = &v
}

// GetVoucherDate returns the VoucherDate field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetVoucherDate() string {
	if o == nil || IsNil(o.VoucherDate) {
		var ret string
		return ret
	}
	return *o.VoucherDate
}

// GetVoucherDateOk returns a tuple with the VoucherDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetVoucherDateOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherDate) {
		return nil, false
	}
	return o.VoucherDate, true
}

// HasVoucherDate returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasVoucherDate() bool {
	if o != nil && !IsNil(o.VoucherDate) {
		return true
	}

	return false
}

// SetVoucherDate gets a reference to the given string and assigns it to the VoucherDate field.
func (o *ExpenseVoucherInfo) SetVoucherDate(v string) {
	o.VoucherDate = &v
}

// GetVoucherId returns the VoucherId field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetVoucherId() string {
	if o == nil || IsNil(o.VoucherId) {
		var ret string
		return ret
	}
	return *o.VoucherId
}

// GetVoucherIdOk returns a tuple with the VoucherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetVoucherIdOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherId) {
		return nil, false
	}
	return o.VoucherId, true
}

// HasVoucherId returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasVoucherId() bool {
	if o != nil && !IsNil(o.VoucherId) {
		return true
	}

	return false
}

// SetVoucherId gets a reference to the given string and assigns it to the VoucherId field.
func (o *ExpenseVoucherInfo) SetVoucherId(v string) {
	o.VoucherId = &v
}

// GetVoucherNo returns the VoucherNo field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetVoucherNo() string {
	if o == nil || IsNil(o.VoucherNo) {
		var ret string
		return ret
	}
	return *o.VoucherNo
}

// GetVoucherNoOk returns a tuple with the VoucherNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetVoucherNoOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherNo) {
		return nil, false
	}
	return o.VoucherNo, true
}

// HasVoucherNo returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasVoucherNo() bool {
	if o != nil && !IsNil(o.VoucherNo) {
		return true
	}

	return false
}

// SetVoucherNo gets a reference to the given string and assigns it to the VoucherNo field.
func (o *ExpenseVoucherInfo) SetVoucherNo(v string) {
	o.VoucherNo = &v
}

// GetVoucherState returns the VoucherState field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetVoucherState() string {
	if o == nil || IsNil(o.VoucherState) {
		var ret string
		return ret
	}
	return *o.VoucherState
}

// GetVoucherStateOk returns a tuple with the VoucherState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetVoucherStateOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherState) {
		return nil, false
	}
	return o.VoucherState, true
}

// HasVoucherState returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasVoucherState() bool {
	if o != nil && !IsNil(o.VoucherState) {
		return true
	}

	return false
}

// SetVoucherState gets a reference to the given string and assigns it to the VoucherState field.
func (o *ExpenseVoucherInfo) SetVoucherState(v string) {
	o.VoucherState = &v
}

// GetVoucherType returns the VoucherType field value if set, zero value otherwise.
func (o *ExpenseVoucherInfo) GetVoucherType() string {
	if o == nil || IsNil(o.VoucherType) {
		var ret string
		return ret
	}
	return *o.VoucherType
}

// GetVoucherTypeOk returns a tuple with the VoucherType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseVoucherInfo) GetVoucherTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherType) {
		return nil, false
	}
	return o.VoucherType, true
}

// HasVoucherType returns a boolean if a field has been set.
func (o *ExpenseVoucherInfo) HasVoucherType() bool {
	if o != nil && !IsNil(o.VoucherType) {
		return true
	}

	return false
}

// SetVoucherType gets a reference to the given string and assigns it to the VoucherType field.
func (o *ExpenseVoucherInfo) SetVoucherType(v string) {
	o.VoucherType = &v
}

func (o ExpenseVoucherInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpenseVoucherInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.ConsumptionDate) {
		toSerialize["consumption_date"] = o.ConsumptionDate
	}
	if !IsNil(o.EmployeeId) {
		toSerialize["employee_id"] = o.EmployeeId
	}
	if !IsNil(o.EmployeeOpenId) {
		toSerialize["employee_open_id"] = o.EmployeeOpenId
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.Industry) {
		toSerialize["industry"] = o.Industry
	}
	if !IsNil(o.IsOffSet) {
		toSerialize["is_off_set"] = o.IsOffSet
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.OuterSourceId) {
		toSerialize["outer_source_id"] = o.OuterSourceId
	}
	if !IsNil(o.ParentType) {
		toSerialize["parent_type"] = o.ParentType
	}
	if !IsNil(o.VoucherAmount) {
		toSerialize["voucher_amount"] = o.VoucherAmount
	}
	if !IsNil(o.VoucherDate) {
		toSerialize["voucher_date"] = o.VoucherDate
	}
	if !IsNil(o.VoucherId) {
		toSerialize["voucher_id"] = o.VoucherId
	}
	if !IsNil(o.VoucherNo) {
		toSerialize["voucher_no"] = o.VoucherNo
	}
	if !IsNil(o.VoucherState) {
		toSerialize["voucher_state"] = o.VoucherState
	}
	if !IsNil(o.VoucherType) {
		toSerialize["voucher_type"] = o.VoucherType
	}
	return toSerialize, nil
}

type NullableExpenseVoucherInfo struct {
	value *ExpenseVoucherInfo
	isSet bool
}

func (v NullableExpenseVoucherInfo) Get() *ExpenseVoucherInfo {
	return v.value
}

func (v *NullableExpenseVoucherInfo) Set(val *ExpenseVoucherInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableExpenseVoucherInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableExpenseVoucherInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpenseVoucherInfo(val *ExpenseVoucherInfo) *NullableExpenseVoucherInfo {
	return &NullableExpenseVoucherInfo{value: val, isSet: true}
}

func (v NullableExpenseVoucherInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpenseVoucherInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



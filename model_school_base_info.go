/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the SchoolBaseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchoolBaseInfo{}

// SchoolBaseInfo struct for SchoolBaseInfo
type SchoolBaseInfo struct {
	// 校区信息
	CampusInfo []CampusInfo `json:"campus_info,omitempty"`
	// 城市编码
	CityCode *string `json:"city_code,omitempty"`
	// 学校内标
	InstId *string `json:"inst_id,omitempty"`
	// 学校名称
	InstName *string `json:"inst_name,omitempty"`
	// 学校外标
	InstStdCode *string `json:"inst_std_code,omitempty"`
	// 省份编码
	ProvinceCode *string `json:"province_code,omitempty"`
}

// NewSchoolBaseInfo instantiates a new SchoolBaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchoolBaseInfo() *SchoolBaseInfo {
	this := SchoolBaseInfo{}
	return &this
}

// NewSchoolBaseInfoWithDefaults instantiates a new SchoolBaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchoolBaseInfoWithDefaults() *SchoolBaseInfo {
	this := SchoolBaseInfo{}
	return &this
}

// GetCampusInfo returns the CampusInfo field value if set, zero value otherwise.
func (o *SchoolBaseInfo) GetCampusInfo() []CampusInfo {
	if o == nil || IsNil(o.CampusInfo) {
		var ret []CampusInfo
		return ret
	}
	return o.CampusInfo
}

// GetCampusInfoOk returns a tuple with the CampusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchoolBaseInfo) GetCampusInfoOk() ([]CampusInfo, bool) {
	if o == nil || IsNil(o.CampusInfo) {
		return nil, false
	}
	return o.CampusInfo, true
}

// HasCampusInfo returns a boolean if a field has been set.
func (o *SchoolBaseInfo) HasCampusInfo() bool {
	if o != nil && !IsNil(o.CampusInfo) {
		return true
	}

	return false
}

// SetCampusInfo gets a reference to the given []CampusInfo and assigns it to the CampusInfo field.
func (o *SchoolBaseInfo) SetCampusInfo(v []CampusInfo) {
	o.CampusInfo = v
}

// GetCityCode returns the CityCode field value if set, zero value otherwise.
func (o *SchoolBaseInfo) GetCityCode() string {
	if o == nil || IsNil(o.CityCode) {
		var ret string
		return ret
	}
	return *o.CityCode
}

// GetCityCodeOk returns a tuple with the CityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchoolBaseInfo) GetCityCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CityCode) {
		return nil, false
	}
	return o.CityCode, true
}

// HasCityCode returns a boolean if a field has been set.
func (o *SchoolBaseInfo) HasCityCode() bool {
	if o != nil && !IsNil(o.CityCode) {
		return true
	}

	return false
}

// SetCityCode gets a reference to the given string and assigns it to the CityCode field.
func (o *SchoolBaseInfo) SetCityCode(v string) {
	o.CityCode = &v
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *SchoolBaseInfo) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchoolBaseInfo) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *SchoolBaseInfo) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *SchoolBaseInfo) SetInstId(v string) {
	o.InstId = &v
}

// GetInstName returns the InstName field value if set, zero value otherwise.
func (o *SchoolBaseInfo) GetInstName() string {
	if o == nil || IsNil(o.InstName) {
		var ret string
		return ret
	}
	return *o.InstName
}

// GetInstNameOk returns a tuple with the InstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchoolBaseInfo) GetInstNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstName) {
		return nil, false
	}
	return o.InstName, true
}

// HasInstName returns a boolean if a field has been set.
func (o *SchoolBaseInfo) HasInstName() bool {
	if o != nil && !IsNil(o.InstName) {
		return true
	}

	return false
}

// SetInstName gets a reference to the given string and assigns it to the InstName field.
func (o *SchoolBaseInfo) SetInstName(v string) {
	o.InstName = &v
}

// GetInstStdCode returns the InstStdCode field value if set, zero value otherwise.
func (o *SchoolBaseInfo) GetInstStdCode() string {
	if o == nil || IsNil(o.InstStdCode) {
		var ret string
		return ret
	}
	return *o.InstStdCode
}

// GetInstStdCodeOk returns a tuple with the InstStdCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchoolBaseInfo) GetInstStdCodeOk() (*string, bool) {
	if o == nil || IsNil(o.InstStdCode) {
		return nil, false
	}
	return o.InstStdCode, true
}

// HasInstStdCode returns a boolean if a field has been set.
func (o *SchoolBaseInfo) HasInstStdCode() bool {
	if o != nil && !IsNil(o.InstStdCode) {
		return true
	}

	return false
}

// SetInstStdCode gets a reference to the given string and assigns it to the InstStdCode field.
func (o *SchoolBaseInfo) SetInstStdCode(v string) {
	o.InstStdCode = &v
}

// GetProvinceCode returns the ProvinceCode field value if set, zero value otherwise.
func (o *SchoolBaseInfo) GetProvinceCode() string {
	if o == nil || IsNil(o.ProvinceCode) {
		var ret string
		return ret
	}
	return *o.ProvinceCode
}

// GetProvinceCodeOk returns a tuple with the ProvinceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchoolBaseInfo) GetProvinceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProvinceCode) {
		return nil, false
	}
	return o.ProvinceCode, true
}

// HasProvinceCode returns a boolean if a field has been set.
func (o *SchoolBaseInfo) HasProvinceCode() bool {
	if o != nil && !IsNil(o.ProvinceCode) {
		return true
	}

	return false
}

// SetProvinceCode gets a reference to the given string and assigns it to the ProvinceCode field.
func (o *SchoolBaseInfo) SetProvinceCode(v string) {
	o.ProvinceCode = &v
}

func (o SchoolBaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchoolBaseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CampusInfo) {
		toSerialize["campus_info"] = o.CampusInfo
	}
	if !IsNil(o.CityCode) {
		toSerialize["city_code"] = o.CityCode
	}
	if !IsNil(o.InstId) {
		toSerialize["inst_id"] = o.InstId
	}
	if !IsNil(o.InstName) {
		toSerialize["inst_name"] = o.InstName
	}
	if !IsNil(o.InstStdCode) {
		toSerialize["inst_std_code"] = o.InstStdCode
	}
	if !IsNil(o.ProvinceCode) {
		toSerialize["province_code"] = o.ProvinceCode
	}
	return toSerialize, nil
}

type NullableSchoolBaseInfo struct {
	value *SchoolBaseInfo
	isSet bool
}

func (v NullableSchoolBaseInfo) Get() *SchoolBaseInfo {
	return v.value
}

func (v *NullableSchoolBaseInfo) Set(val *SchoolBaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSchoolBaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSchoolBaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchoolBaseInfo(val *SchoolBaseInfo) *NullableSchoolBaseInfo {
	return &NullableSchoolBaseInfo{value: val, isSet: true}
}

func (v NullableSchoolBaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchoolBaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

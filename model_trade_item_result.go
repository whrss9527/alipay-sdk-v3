/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the TradeItemResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TradeItemResult{}

// TradeItemResult struct for TradeItemResult
type TradeItemResult struct {
	// 支付宝订单号。对账使用，不脱敏
	AlipayOrderNo *string `json:"alipay_order_no,omitempty"`
	// 交易创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 交易支付时间
	GmtPay *string `json:"gmt_pay,omitempty"`
	// 交易退款时间
	GmtRefund *string `json:"gmt_refund,omitempty"`
	// 商品备注信息
	GoodsMemo *string `json:"goods_memo,omitempty"`
	// 商品名称
	GoodsTitle *string `json:"goods_title,omitempty"`
	// 商户订单号，创建支付宝交易时传入的信息。对账使用，不脱敏
	MerchantOrderNo *string `json:"merchant_order_no,omitempty"`
	// 商家优惠金额
	NetMdiscount *string `json:"net_mdiscount,omitempty"`
	// 对方账户
	OtherAccount *string `json:"other_account,omitempty"`
	// 订单退款金额
	RefundAmount *string `json:"refund_amount,omitempty"`
	// 服务费金额
	ServiceFee *string `json:"service_fee,omitempty"`
	// 门店名称
	StoreName *string `json:"store_name,omitempty"`
	// 门店编号
	StoreNo *string `json:"store_no,omitempty"`
	// 订单金额
	TotalAmount *string `json:"total_amount,omitempty"`
	// 订单状态(待付款,成功,关闭,待发货,待确认收货,已预付,进行中)
	TradeStatus *string `json:"trade_status,omitempty"`
	// 业务类型，帮助商户作为对账参考
	TradeType *string `json:"trade_type,omitempty"`
}

// NewTradeItemResult instantiates a new TradeItemResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeItemResult() *TradeItemResult {
	this := TradeItemResult{}
	return &this
}

// NewTradeItemResultWithDefaults instantiates a new TradeItemResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeItemResultWithDefaults() *TradeItemResult {
	this := TradeItemResult{}
	return &this
}

// GetAlipayOrderNo returns the AlipayOrderNo field value if set, zero value otherwise.
func (o *TradeItemResult) GetAlipayOrderNo() string {
	if o == nil || IsNil(o.AlipayOrderNo) {
		var ret string
		return ret
	}
	return *o.AlipayOrderNo
}

// GetAlipayOrderNoOk returns a tuple with the AlipayOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetAlipayOrderNoOk() (*string, bool) {
	if o == nil || IsNil(o.AlipayOrderNo) {
		return nil, false
	}
	return o.AlipayOrderNo, true
}

// HasAlipayOrderNo returns a boolean if a field has been set.
func (o *TradeItemResult) HasAlipayOrderNo() bool {
	if o != nil && !IsNil(o.AlipayOrderNo) {
		return true
	}

	return false
}

// SetAlipayOrderNo gets a reference to the given string and assigns it to the AlipayOrderNo field.
func (o *TradeItemResult) SetAlipayOrderNo(v string) {
	o.AlipayOrderNo = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *TradeItemResult) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *TradeItemResult) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *TradeItemResult) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtPay returns the GmtPay field value if set, zero value otherwise.
func (o *TradeItemResult) GetGmtPay() string {
	if o == nil || IsNil(o.GmtPay) {
		var ret string
		return ret
	}
	return *o.GmtPay
}

// GetGmtPayOk returns a tuple with the GmtPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetGmtPayOk() (*string, bool) {
	if o == nil || IsNil(o.GmtPay) {
		return nil, false
	}
	return o.GmtPay, true
}

// HasGmtPay returns a boolean if a field has been set.
func (o *TradeItemResult) HasGmtPay() bool {
	if o != nil && !IsNil(o.GmtPay) {
		return true
	}

	return false
}

// SetGmtPay gets a reference to the given string and assigns it to the GmtPay field.
func (o *TradeItemResult) SetGmtPay(v string) {
	o.GmtPay = &v
}

// GetGmtRefund returns the GmtRefund field value if set, zero value otherwise.
func (o *TradeItemResult) GetGmtRefund() string {
	if o == nil || IsNil(o.GmtRefund) {
		var ret string
		return ret
	}
	return *o.GmtRefund
}

// GetGmtRefundOk returns a tuple with the GmtRefund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetGmtRefundOk() (*string, bool) {
	if o == nil || IsNil(o.GmtRefund) {
		return nil, false
	}
	return o.GmtRefund, true
}

// HasGmtRefund returns a boolean if a field has been set.
func (o *TradeItemResult) HasGmtRefund() bool {
	if o != nil && !IsNil(o.GmtRefund) {
		return true
	}

	return false
}

// SetGmtRefund gets a reference to the given string and assigns it to the GmtRefund field.
func (o *TradeItemResult) SetGmtRefund(v string) {
	o.GmtRefund = &v
}

// GetGoodsMemo returns the GoodsMemo field value if set, zero value otherwise.
func (o *TradeItemResult) GetGoodsMemo() string {
	if o == nil || IsNil(o.GoodsMemo) {
		var ret string
		return ret
	}
	return *o.GoodsMemo
}

// GetGoodsMemoOk returns a tuple with the GoodsMemo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetGoodsMemoOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsMemo) {
		return nil, false
	}
	return o.GoodsMemo, true
}

// HasGoodsMemo returns a boolean if a field has been set.
func (o *TradeItemResult) HasGoodsMemo() bool {
	if o != nil && !IsNil(o.GoodsMemo) {
		return true
	}

	return false
}

// SetGoodsMemo gets a reference to the given string and assigns it to the GoodsMemo field.
func (o *TradeItemResult) SetGoodsMemo(v string) {
	o.GoodsMemo = &v
}

// GetGoodsTitle returns the GoodsTitle field value if set, zero value otherwise.
func (o *TradeItemResult) GetGoodsTitle() string {
	if o == nil || IsNil(o.GoodsTitle) {
		var ret string
		return ret
	}
	return *o.GoodsTitle
}

// GetGoodsTitleOk returns a tuple with the GoodsTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetGoodsTitleOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsTitle) {
		return nil, false
	}
	return o.GoodsTitle, true
}

// HasGoodsTitle returns a boolean if a field has been set.
func (o *TradeItemResult) HasGoodsTitle() bool {
	if o != nil && !IsNil(o.GoodsTitle) {
		return true
	}

	return false
}

// SetGoodsTitle gets a reference to the given string and assigns it to the GoodsTitle field.
func (o *TradeItemResult) SetGoodsTitle(v string) {
	o.GoodsTitle = &v
}

// GetMerchantOrderNo returns the MerchantOrderNo field value if set, zero value otherwise.
func (o *TradeItemResult) GetMerchantOrderNo() string {
	if o == nil || IsNil(o.MerchantOrderNo) {
		var ret string
		return ret
	}
	return *o.MerchantOrderNo
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantOrderNo) {
		return nil, false
	}
	return o.MerchantOrderNo, true
}

// HasMerchantOrderNo returns a boolean if a field has been set.
func (o *TradeItemResult) HasMerchantOrderNo() bool {
	if o != nil && !IsNil(o.MerchantOrderNo) {
		return true
	}

	return false
}

// SetMerchantOrderNo gets a reference to the given string and assigns it to the MerchantOrderNo field.
func (o *TradeItemResult) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo = &v
}

// GetNetMdiscount returns the NetMdiscount field value if set, zero value otherwise.
func (o *TradeItemResult) GetNetMdiscount() string {
	if o == nil || IsNil(o.NetMdiscount) {
		var ret string
		return ret
	}
	return *o.NetMdiscount
}

// GetNetMdiscountOk returns a tuple with the NetMdiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetNetMdiscountOk() (*string, bool) {
	if o == nil || IsNil(o.NetMdiscount) {
		return nil, false
	}
	return o.NetMdiscount, true
}

// HasNetMdiscount returns a boolean if a field has been set.
func (o *TradeItemResult) HasNetMdiscount() bool {
	if o != nil && !IsNil(o.NetMdiscount) {
		return true
	}

	return false
}

// SetNetMdiscount gets a reference to the given string and assigns it to the NetMdiscount field.
func (o *TradeItemResult) SetNetMdiscount(v string) {
	o.NetMdiscount = &v
}

// GetOtherAccount returns the OtherAccount field value if set, zero value otherwise.
func (o *TradeItemResult) GetOtherAccount() string {
	if o == nil || IsNil(o.OtherAccount) {
		var ret string
		return ret
	}
	return *o.OtherAccount
}

// GetOtherAccountOk returns a tuple with the OtherAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetOtherAccountOk() (*string, bool) {
	if o == nil || IsNil(o.OtherAccount) {
		return nil, false
	}
	return o.OtherAccount, true
}

// HasOtherAccount returns a boolean if a field has been set.
func (o *TradeItemResult) HasOtherAccount() bool {
	if o != nil && !IsNil(o.OtherAccount) {
		return true
	}

	return false
}

// SetOtherAccount gets a reference to the given string and assigns it to the OtherAccount field.
func (o *TradeItemResult) SetOtherAccount(v string) {
	o.OtherAccount = &v
}

// GetRefundAmount returns the RefundAmount field value if set, zero value otherwise.
func (o *TradeItemResult) GetRefundAmount() string {
	if o == nil || IsNil(o.RefundAmount) {
		var ret string
		return ret
	}
	return *o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetRefundAmountOk() (*string, bool) {
	if o == nil || IsNil(o.RefundAmount) {
		return nil, false
	}
	return o.RefundAmount, true
}

// HasRefundAmount returns a boolean if a field has been set.
func (o *TradeItemResult) HasRefundAmount() bool {
	if o != nil && !IsNil(o.RefundAmount) {
		return true
	}

	return false
}

// SetRefundAmount gets a reference to the given string and assigns it to the RefundAmount field.
func (o *TradeItemResult) SetRefundAmount(v string) {
	o.RefundAmount = &v
}

// GetServiceFee returns the ServiceFee field value if set, zero value otherwise.
func (o *TradeItemResult) GetServiceFee() string {
	if o == nil || IsNil(o.ServiceFee) {
		var ret string
		return ret
	}
	return *o.ServiceFee
}

// GetServiceFeeOk returns a tuple with the ServiceFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetServiceFeeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceFee) {
		return nil, false
	}
	return o.ServiceFee, true
}

// HasServiceFee returns a boolean if a field has been set.
func (o *TradeItemResult) HasServiceFee() bool {
	if o != nil && !IsNil(o.ServiceFee) {
		return true
	}

	return false
}

// SetServiceFee gets a reference to the given string and assigns it to the ServiceFee field.
func (o *TradeItemResult) SetServiceFee(v string) {
	o.ServiceFee = &v
}

// GetStoreName returns the StoreName field value if set, zero value otherwise.
func (o *TradeItemResult) GetStoreName() string {
	if o == nil || IsNil(o.StoreName) {
		var ret string
		return ret
	}
	return *o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetStoreNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoreName) {
		return nil, false
	}
	return o.StoreName, true
}

// HasStoreName returns a boolean if a field has been set.
func (o *TradeItemResult) HasStoreName() bool {
	if o != nil && !IsNil(o.StoreName) {
		return true
	}

	return false
}

// SetStoreName gets a reference to the given string and assigns it to the StoreName field.
func (o *TradeItemResult) SetStoreName(v string) {
	o.StoreName = &v
}

// GetStoreNo returns the StoreNo field value if set, zero value otherwise.
func (o *TradeItemResult) GetStoreNo() string {
	if o == nil || IsNil(o.StoreNo) {
		var ret string
		return ret
	}
	return *o.StoreNo
}

// GetStoreNoOk returns a tuple with the StoreNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetStoreNoOk() (*string, bool) {
	if o == nil || IsNil(o.StoreNo) {
		return nil, false
	}
	return o.StoreNo, true
}

// HasStoreNo returns a boolean if a field has been set.
func (o *TradeItemResult) HasStoreNo() bool {
	if o != nil && !IsNil(o.StoreNo) {
		return true
	}

	return false
}

// SetStoreNo gets a reference to the given string and assigns it to the StoreNo field.
func (o *TradeItemResult) SetStoreNo(v string) {
	o.StoreNo = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *TradeItemResult) GetTotalAmount() string {
	if o == nil || IsNil(o.TotalAmount) {
		var ret string
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetTotalAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *TradeItemResult) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given string and assigns it to the TotalAmount field.
func (o *TradeItemResult) SetTotalAmount(v string) {
	o.TotalAmount = &v
}

// GetTradeStatus returns the TradeStatus field value if set, zero value otherwise.
func (o *TradeItemResult) GetTradeStatus() string {
	if o == nil || IsNil(o.TradeStatus) {
		var ret string
		return ret
	}
	return *o.TradeStatus
}

// GetTradeStatusOk returns a tuple with the TradeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetTradeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TradeStatus) {
		return nil, false
	}
	return o.TradeStatus, true
}

// HasTradeStatus returns a boolean if a field has been set.
func (o *TradeItemResult) HasTradeStatus() bool {
	if o != nil && !IsNil(o.TradeStatus) {
		return true
	}

	return false
}

// SetTradeStatus gets a reference to the given string and assigns it to the TradeStatus field.
func (o *TradeItemResult) SetTradeStatus(v string) {
	o.TradeStatus = &v
}

// GetTradeType returns the TradeType field value if set, zero value otherwise.
func (o *TradeItemResult) GetTradeType() string {
	if o == nil || IsNil(o.TradeType) {
		var ret string
		return ret
	}
	return *o.TradeType
}

// GetTradeTypeOk returns a tuple with the TradeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeItemResult) GetTradeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TradeType) {
		return nil, false
	}
	return o.TradeType, true
}

// HasTradeType returns a boolean if a field has been set.
func (o *TradeItemResult) HasTradeType() bool {
	if o != nil && !IsNil(o.TradeType) {
		return true
	}

	return false
}

// SetTradeType gets a reference to the given string and assigns it to the TradeType field.
func (o *TradeItemResult) SetTradeType(v string) {
	o.TradeType = &v
}

func (o TradeItemResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TradeItemResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlipayOrderNo) {
		toSerialize["alipay_order_no"] = o.AlipayOrderNo
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtPay) {
		toSerialize["gmt_pay"] = o.GmtPay
	}
	if !IsNil(o.GmtRefund) {
		toSerialize["gmt_refund"] = o.GmtRefund
	}
	if !IsNil(o.GoodsMemo) {
		toSerialize["goods_memo"] = o.GoodsMemo
	}
	if !IsNil(o.GoodsTitle) {
		toSerialize["goods_title"] = o.GoodsTitle
	}
	if !IsNil(o.MerchantOrderNo) {
		toSerialize["merchant_order_no"] = o.MerchantOrderNo
	}
	if !IsNil(o.NetMdiscount) {
		toSerialize["net_mdiscount"] = o.NetMdiscount
	}
	if !IsNil(o.OtherAccount) {
		toSerialize["other_account"] = o.OtherAccount
	}
	if !IsNil(o.RefundAmount) {
		toSerialize["refund_amount"] = o.RefundAmount
	}
	if !IsNil(o.ServiceFee) {
		toSerialize["service_fee"] = o.ServiceFee
	}
	if !IsNil(o.StoreName) {
		toSerialize["store_name"] = o.StoreName
	}
	if !IsNil(o.StoreNo) {
		toSerialize["store_no"] = o.StoreNo
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["total_amount"] = o.TotalAmount
	}
	if !IsNil(o.TradeStatus) {
		toSerialize["trade_status"] = o.TradeStatus
	}
	if !IsNil(o.TradeType) {
		toSerialize["trade_type"] = o.TradeType
	}
	return toSerialize, nil
}

type NullableTradeItemResult struct {
	value *TradeItemResult
	isSet bool
}

func (v NullableTradeItemResult) Get() *TradeItemResult {
	return v.value
}

func (v *NullableTradeItemResult) Set(val *TradeItemResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeItemResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeItemResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeItemResult(val *TradeItemResult) *NullableTradeItemResult {
	return &NullableTradeItemResult{value: val, isSet: true}
}

func (v NullableTradeItemResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeItemResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

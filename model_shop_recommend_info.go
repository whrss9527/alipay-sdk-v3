/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ShopRecommendInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopRecommendInfo{}

// ShopRecommendInfo struct for ShopRecommendInfo
type ShopRecommendInfo struct {
	// 门店修改建议
	Recommend *string `json:"recommend,omitempty"`
	// 推荐详细地址
	RecommendAddress *string `json:"recommend_address,omitempty"`
	// 推荐纬度
	RecommendLatitude *string `json:"recommend_latitude,omitempty"`
	// 推荐经度
	RecommendLongtitude *string `json:"recommend_longtitude,omitempty"`
	// 推荐门店名称
	RecommendName *string `json:"recommend_name,omitempty"`
	// 门店不置信原因
	UnconfidenceReason *string `json:"unconfidence_reason,omitempty"`
}

// NewShopRecommendInfo instantiates a new ShopRecommendInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopRecommendInfo() *ShopRecommendInfo {
	this := ShopRecommendInfo{}
	return &this
}

// NewShopRecommendInfoWithDefaults instantiates a new ShopRecommendInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopRecommendInfoWithDefaults() *ShopRecommendInfo {
	this := ShopRecommendInfo{}
	return &this
}

// GetRecommend returns the Recommend field value if set, zero value otherwise.
func (o *ShopRecommendInfo) GetRecommend() string {
	if o == nil || IsNil(o.Recommend) {
		var ret string
		return ret
	}
	return *o.Recommend
}

// GetRecommendOk returns a tuple with the Recommend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopRecommendInfo) GetRecommendOk() (*string, bool) {
	if o == nil || IsNil(o.Recommend) {
		return nil, false
	}
	return o.Recommend, true
}

// HasRecommend returns a boolean if a field has been set.
func (o *ShopRecommendInfo) HasRecommend() bool {
	if o != nil && !IsNil(o.Recommend) {
		return true
	}

	return false
}

// SetRecommend gets a reference to the given string and assigns it to the Recommend field.
func (o *ShopRecommendInfo) SetRecommend(v string) {
	o.Recommend = &v
}

// GetRecommendAddress returns the RecommendAddress field value if set, zero value otherwise.
func (o *ShopRecommendInfo) GetRecommendAddress() string {
	if o == nil || IsNil(o.RecommendAddress) {
		var ret string
		return ret
	}
	return *o.RecommendAddress
}

// GetRecommendAddressOk returns a tuple with the RecommendAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopRecommendInfo) GetRecommendAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RecommendAddress) {
		return nil, false
	}
	return o.RecommendAddress, true
}

// HasRecommendAddress returns a boolean if a field has been set.
func (o *ShopRecommendInfo) HasRecommendAddress() bool {
	if o != nil && !IsNil(o.RecommendAddress) {
		return true
	}

	return false
}

// SetRecommendAddress gets a reference to the given string and assigns it to the RecommendAddress field.
func (o *ShopRecommendInfo) SetRecommendAddress(v string) {
	o.RecommendAddress = &v
}

// GetRecommendLatitude returns the RecommendLatitude field value if set, zero value otherwise.
func (o *ShopRecommendInfo) GetRecommendLatitude() string {
	if o == nil || IsNil(o.RecommendLatitude) {
		var ret string
		return ret
	}
	return *o.RecommendLatitude
}

// GetRecommendLatitudeOk returns a tuple with the RecommendLatitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopRecommendInfo) GetRecommendLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.RecommendLatitude) {
		return nil, false
	}
	return o.RecommendLatitude, true
}

// HasRecommendLatitude returns a boolean if a field has been set.
func (o *ShopRecommendInfo) HasRecommendLatitude() bool {
	if o != nil && !IsNil(o.RecommendLatitude) {
		return true
	}

	return false
}

// SetRecommendLatitude gets a reference to the given string and assigns it to the RecommendLatitude field.
func (o *ShopRecommendInfo) SetRecommendLatitude(v string) {
	o.RecommendLatitude = &v
}

// GetRecommendLongtitude returns the RecommendLongtitude field value if set, zero value otherwise.
func (o *ShopRecommendInfo) GetRecommendLongtitude() string {
	if o == nil || IsNil(o.RecommendLongtitude) {
		var ret string
		return ret
	}
	return *o.RecommendLongtitude
}

// GetRecommendLongtitudeOk returns a tuple with the RecommendLongtitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopRecommendInfo) GetRecommendLongtitudeOk() (*string, bool) {
	if o == nil || IsNil(o.RecommendLongtitude) {
		return nil, false
	}
	return o.RecommendLongtitude, true
}

// HasRecommendLongtitude returns a boolean if a field has been set.
func (o *ShopRecommendInfo) HasRecommendLongtitude() bool {
	if o != nil && !IsNil(o.RecommendLongtitude) {
		return true
	}

	return false
}

// SetRecommendLongtitude gets a reference to the given string and assigns it to the RecommendLongtitude field.
func (o *ShopRecommendInfo) SetRecommendLongtitude(v string) {
	o.RecommendLongtitude = &v
}

// GetRecommendName returns the RecommendName field value if set, zero value otherwise.
func (o *ShopRecommendInfo) GetRecommendName() string {
	if o == nil || IsNil(o.RecommendName) {
		var ret string
		return ret
	}
	return *o.RecommendName
}

// GetRecommendNameOk returns a tuple with the RecommendName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopRecommendInfo) GetRecommendNameOk() (*string, bool) {
	if o == nil || IsNil(o.RecommendName) {
		return nil, false
	}
	return o.RecommendName, true
}

// HasRecommendName returns a boolean if a field has been set.
func (o *ShopRecommendInfo) HasRecommendName() bool {
	if o != nil && !IsNil(o.RecommendName) {
		return true
	}

	return false
}

// SetRecommendName gets a reference to the given string and assigns it to the RecommendName field.
func (o *ShopRecommendInfo) SetRecommendName(v string) {
	o.RecommendName = &v
}

// GetUnconfidenceReason returns the UnconfidenceReason field value if set, zero value otherwise.
func (o *ShopRecommendInfo) GetUnconfidenceReason() string {
	if o == nil || IsNil(o.UnconfidenceReason) {
		var ret string
		return ret
	}
	return *o.UnconfidenceReason
}

// GetUnconfidenceReasonOk returns a tuple with the UnconfidenceReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopRecommendInfo) GetUnconfidenceReasonOk() (*string, bool) {
	if o == nil || IsNil(o.UnconfidenceReason) {
		return nil, false
	}
	return o.UnconfidenceReason, true
}

// HasUnconfidenceReason returns a boolean if a field has been set.
func (o *ShopRecommendInfo) HasUnconfidenceReason() bool {
	if o != nil && !IsNil(o.UnconfidenceReason) {
		return true
	}

	return false
}

// SetUnconfidenceReason gets a reference to the given string and assigns it to the UnconfidenceReason field.
func (o *ShopRecommendInfo) SetUnconfidenceReason(v string) {
	o.UnconfidenceReason = &v
}

func (o ShopRecommendInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopRecommendInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Recommend) {
		toSerialize["recommend"] = o.Recommend
	}
	if !IsNil(o.RecommendAddress) {
		toSerialize["recommend_address"] = o.RecommendAddress
	}
	if !IsNil(o.RecommendLatitude) {
		toSerialize["recommend_latitude"] = o.RecommendLatitude
	}
	if !IsNil(o.RecommendLongtitude) {
		toSerialize["recommend_longtitude"] = o.RecommendLongtitude
	}
	if !IsNil(o.RecommendName) {
		toSerialize["recommend_name"] = o.RecommendName
	}
	if !IsNil(o.UnconfidenceReason) {
		toSerialize["unconfidence_reason"] = o.UnconfidenceReason
	}
	return toSerialize, nil
}

type NullableShopRecommendInfo struct {
	value *ShopRecommendInfo
	isSet bool
}

func (v NullableShopRecommendInfo) Get() *ShopRecommendInfo {
	return v.value
}

func (v *NullableShopRecommendInfo) Set(val *ShopRecommendInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableShopRecommendInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableShopRecommendInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopRecommendInfo(val *ShopRecommendInfo) *NullableShopRecommendInfo {
	return &NullableShopRecommendInfo{value: val, isSet: true}
}

func (v NullableShopRecommendInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopRecommendInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

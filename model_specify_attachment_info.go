/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the SpecifyAttachmentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecifyAttachmentInfo{}

// SpecifyAttachmentInfo struct for SpecifyAttachmentInfo
type SpecifyAttachmentInfo struct {
	// 是否允许上传更多附件，默认值为false。开启后，除了“collect_common_codes”中指定的附件，签署人可自由上传至多10张图片。
	AllowMoreUploads *bool `json:"allow_more_uploads,omitempty"`
	// 允许上传更多附件时，可上传的最大附件数，一次流程中累计的上传附件数至多30（含“附件列表”数量）
	AllowMoreUploadsMaxCount *int32 `json:"allow_more_uploads_max_count,omitempty"`
	// 需要签署人上传的证件照片，可进行ORC识别，目前仅支持IDCARD
	CollectCertTypes []string `json:"collect_cert_types,omitempty"`
	// 需要签署人上传的其他附件列表，即attachment_explain.details中定义的code列表
	CollectCommonCodes []string `json:"collect_common_codes,omitempty"`
	// 个人唯一标识，对应签署区中指定的签署人
	ThirdPartyUserId *string `json:"third_party_user_id,omitempty"`
}

// NewSpecifyAttachmentInfo instantiates a new SpecifyAttachmentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecifyAttachmentInfo() *SpecifyAttachmentInfo {
	this := SpecifyAttachmentInfo{}
	return &this
}

// NewSpecifyAttachmentInfoWithDefaults instantiates a new SpecifyAttachmentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecifyAttachmentInfoWithDefaults() *SpecifyAttachmentInfo {
	this := SpecifyAttachmentInfo{}
	return &this
}

// GetAllowMoreUploads returns the AllowMoreUploads field value if set, zero value otherwise.
func (o *SpecifyAttachmentInfo) GetAllowMoreUploads() bool {
	if o == nil || IsNil(o.AllowMoreUploads) {
		var ret bool
		return ret
	}
	return *o.AllowMoreUploads
}

// GetAllowMoreUploadsOk returns a tuple with the AllowMoreUploads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifyAttachmentInfo) GetAllowMoreUploadsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMoreUploads) {
		return nil, false
	}
	return o.AllowMoreUploads, true
}

// HasAllowMoreUploads returns a boolean if a field has been set.
func (o *SpecifyAttachmentInfo) HasAllowMoreUploads() bool {
	if o != nil && !IsNil(o.AllowMoreUploads) {
		return true
	}

	return false
}

// SetAllowMoreUploads gets a reference to the given bool and assigns it to the AllowMoreUploads field.
func (o *SpecifyAttachmentInfo) SetAllowMoreUploads(v bool) {
	o.AllowMoreUploads = &v
}

// GetAllowMoreUploadsMaxCount returns the AllowMoreUploadsMaxCount field value if set, zero value otherwise.
func (o *SpecifyAttachmentInfo) GetAllowMoreUploadsMaxCount() int32 {
	if o == nil || IsNil(o.AllowMoreUploadsMaxCount) {
		var ret int32
		return ret
	}
	return *o.AllowMoreUploadsMaxCount
}

// GetAllowMoreUploadsMaxCountOk returns a tuple with the AllowMoreUploadsMaxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifyAttachmentInfo) GetAllowMoreUploadsMaxCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AllowMoreUploadsMaxCount) {
		return nil, false
	}
	return o.AllowMoreUploadsMaxCount, true
}

// HasAllowMoreUploadsMaxCount returns a boolean if a field has been set.
func (o *SpecifyAttachmentInfo) HasAllowMoreUploadsMaxCount() bool {
	if o != nil && !IsNil(o.AllowMoreUploadsMaxCount) {
		return true
	}

	return false
}

// SetAllowMoreUploadsMaxCount gets a reference to the given int32 and assigns it to the AllowMoreUploadsMaxCount field.
func (o *SpecifyAttachmentInfo) SetAllowMoreUploadsMaxCount(v int32) {
	o.AllowMoreUploadsMaxCount = &v
}

// GetCollectCertTypes returns the CollectCertTypes field value if set, zero value otherwise.
func (o *SpecifyAttachmentInfo) GetCollectCertTypes() []string {
	if o == nil || IsNil(o.CollectCertTypes) {
		var ret []string
		return ret
	}
	return o.CollectCertTypes
}

// GetCollectCertTypesOk returns a tuple with the CollectCertTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifyAttachmentInfo) GetCollectCertTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.CollectCertTypes) {
		return nil, false
	}
	return o.CollectCertTypes, true
}

// HasCollectCertTypes returns a boolean if a field has been set.
func (o *SpecifyAttachmentInfo) HasCollectCertTypes() bool {
	if o != nil && !IsNil(o.CollectCertTypes) {
		return true
	}

	return false
}

// SetCollectCertTypes gets a reference to the given []string and assigns it to the CollectCertTypes field.
func (o *SpecifyAttachmentInfo) SetCollectCertTypes(v []string) {
	o.CollectCertTypes = v
}

// GetCollectCommonCodes returns the CollectCommonCodes field value if set, zero value otherwise.
func (o *SpecifyAttachmentInfo) GetCollectCommonCodes() []string {
	if o == nil || IsNil(o.CollectCommonCodes) {
		var ret []string
		return ret
	}
	return o.CollectCommonCodes
}

// GetCollectCommonCodesOk returns a tuple with the CollectCommonCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifyAttachmentInfo) GetCollectCommonCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.CollectCommonCodes) {
		return nil, false
	}
	return o.CollectCommonCodes, true
}

// HasCollectCommonCodes returns a boolean if a field has been set.
func (o *SpecifyAttachmentInfo) HasCollectCommonCodes() bool {
	if o != nil && !IsNil(o.CollectCommonCodes) {
		return true
	}

	return false
}

// SetCollectCommonCodes gets a reference to the given []string and assigns it to the CollectCommonCodes field.
func (o *SpecifyAttachmentInfo) SetCollectCommonCodes(v []string) {
	o.CollectCommonCodes = v
}

// GetThirdPartyUserId returns the ThirdPartyUserId field value if set, zero value otherwise.
func (o *SpecifyAttachmentInfo) GetThirdPartyUserId() string {
	if o == nil || IsNil(o.ThirdPartyUserId) {
		var ret string
		return ret
	}
	return *o.ThirdPartyUserId
}

// GetThirdPartyUserIdOk returns a tuple with the ThirdPartyUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifyAttachmentInfo) GetThirdPartyUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThirdPartyUserId) {
		return nil, false
	}
	return o.ThirdPartyUserId, true
}

// HasThirdPartyUserId returns a boolean if a field has been set.
func (o *SpecifyAttachmentInfo) HasThirdPartyUserId() bool {
	if o != nil && !IsNil(o.ThirdPartyUserId) {
		return true
	}

	return false
}

// SetThirdPartyUserId gets a reference to the given string and assigns it to the ThirdPartyUserId field.
func (o *SpecifyAttachmentInfo) SetThirdPartyUserId(v string) {
	o.ThirdPartyUserId = &v
}

func (o SpecifyAttachmentInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecifyAttachmentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowMoreUploads) {
		toSerialize["allow_more_uploads"] = o.AllowMoreUploads
	}
	if !IsNil(o.AllowMoreUploadsMaxCount) {
		toSerialize["allow_more_uploads_max_count"] = o.AllowMoreUploadsMaxCount
	}
	if !IsNil(o.CollectCertTypes) {
		toSerialize["collect_cert_types"] = o.CollectCertTypes
	}
	if !IsNil(o.CollectCommonCodes) {
		toSerialize["collect_common_codes"] = o.CollectCommonCodes
	}
	if !IsNil(o.ThirdPartyUserId) {
		toSerialize["third_party_user_id"] = o.ThirdPartyUserId
	}
	return toSerialize, nil
}

type NullableSpecifyAttachmentInfo struct {
	value *SpecifyAttachmentInfo
	isSet bool
}

func (v NullableSpecifyAttachmentInfo) Get() *SpecifyAttachmentInfo {
	return v.value
}

func (v *NullableSpecifyAttachmentInfo) Set(val *SpecifyAttachmentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecifyAttachmentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecifyAttachmentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecifyAttachmentInfo(val *SpecifyAttachmentInfo) *NullableSpecifyAttachmentInfo {
	return &NullableSpecifyAttachmentInfo{value: val, isSet: true}
}

func (v NullableSpecifyAttachmentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecifyAttachmentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

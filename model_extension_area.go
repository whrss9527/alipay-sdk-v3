/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ExtensionArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionArea{}

// ExtensionArea struct for ExtensionArea
type ExtensionArea struct {
	// 跳转链接，当type为\"image\"时必传，必须是https或alipays开头的url链接。已废弃
	GotoUrl *string `json:"goto_url,omitempty"`
	// 扩展区高度，当type值为\"h5\"时必填，取值范围为200-500的整数
	Height *int32 `json:"height,omitempty"`
	// 扩展区名字
	Name *string `json:"name,omitempty"`
	// 扩展区类型，当前支持的值为h5，表示扩展区内容类型为h5。
	Type *string `json:"type,omitempty"`
	// 扩展区url，传入h5页面url，必须是https开头的链接
	Url *string `json:"url,omitempty"`
}

// NewExtensionArea instantiates a new ExtensionArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionArea() *ExtensionArea {
	this := ExtensionArea{}
	return &this
}

// NewExtensionAreaWithDefaults instantiates a new ExtensionArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionAreaWithDefaults() *ExtensionArea {
	this := ExtensionArea{}
	return &this
}

// GetGotoUrl returns the GotoUrl field value if set, zero value otherwise.
func (o *ExtensionArea) GetGotoUrl() string {
	if o == nil || IsNil(o.GotoUrl) {
		var ret string
		return ret
	}
	return *o.GotoUrl
}

// GetGotoUrlOk returns a tuple with the GotoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionArea) GetGotoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.GotoUrl) {
		return nil, false
	}
	return o.GotoUrl, true
}

// HasGotoUrl returns a boolean if a field has been set.
func (o *ExtensionArea) HasGotoUrl() bool {
	if o != nil && !IsNil(o.GotoUrl) {
		return true
	}

	return false
}

// SetGotoUrl gets a reference to the given string and assigns it to the GotoUrl field.
func (o *ExtensionArea) SetGotoUrl(v string) {
	o.GotoUrl = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ExtensionArea) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionArea) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ExtensionArea) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ExtensionArea) SetHeight(v int32) {
	o.Height = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExtensionArea) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionArea) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExtensionArea) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExtensionArea) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExtensionArea) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionArea) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExtensionArea) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExtensionArea) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ExtensionArea) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionArea) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ExtensionArea) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ExtensionArea) SetUrl(v string) {
	o.Url = &v
}

func (o ExtensionArea) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GotoUrl) {
		toSerialize["goto_url"] = o.GotoUrl
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableExtensionArea struct {
	value *ExtensionArea
	isSet bool
}

func (v NullableExtensionArea) Get() *ExtensionArea {
	return v.value
}

func (v *NullableExtensionArea) Set(val *ExtensionArea) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionArea) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionArea(val *ExtensionArea) *NullableExtensionArea {
	return &NullableExtensionArea{value: val, isSet: true}
}

func (v NullableExtensionArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

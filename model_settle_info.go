/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SettleInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettleInfo{}

// SettleInfo struct for SettleInfo
type SettleInfo struct {
	// 结算详细信息，json数组，目前只支持一条。
	SettleDetailInfos []SettleDetailInfo `json:"settle_detail_infos,omitempty"`
	// 该笔订单的超期自动确认结算时间，到达期限后，将自动确认结算。此字段只在签约账期结算模式时有效。取值范围：1d～365d。d-天。 该参数数值不接受小数点。
	SettlePeriodTime *string `json:"settle_period_time,omitempty"`
}

// NewSettleInfo instantiates a new SettleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettleInfo() *SettleInfo {
	this := SettleInfo{}
	return &this
}

// NewSettleInfoWithDefaults instantiates a new SettleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettleInfoWithDefaults() *SettleInfo {
	this := SettleInfo{}
	return &this
}

// GetSettleDetailInfos returns the SettleDetailInfos field value if set, zero value otherwise.
func (o *SettleInfo) GetSettleDetailInfos() []SettleDetailInfo {
	if o == nil || IsNil(o.SettleDetailInfos) {
		var ret []SettleDetailInfo
		return ret
	}
	return o.SettleDetailInfos
}

// GetSettleDetailInfosOk returns a tuple with the SettleDetailInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleInfo) GetSettleDetailInfosOk() ([]SettleDetailInfo, bool) {
	if o == nil || IsNil(o.SettleDetailInfos) {
		return nil, false
	}
	return o.SettleDetailInfos, true
}

// HasSettleDetailInfos returns a boolean if a field has been set.
func (o *SettleInfo) HasSettleDetailInfos() bool {
	if o != nil && !IsNil(o.SettleDetailInfos) {
		return true
	}

	return false
}

// SetSettleDetailInfos gets a reference to the given []SettleDetailInfo and assigns it to the SettleDetailInfos field.
func (o *SettleInfo) SetSettleDetailInfos(v []SettleDetailInfo) {
	o.SettleDetailInfos = v
}

// GetSettlePeriodTime returns the SettlePeriodTime field value if set, zero value otherwise.
func (o *SettleInfo) GetSettlePeriodTime() string {
	if o == nil || IsNil(o.SettlePeriodTime) {
		var ret string
		return ret
	}
	return *o.SettlePeriodTime
}

// GetSettlePeriodTimeOk returns a tuple with the SettlePeriodTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleInfo) GetSettlePeriodTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SettlePeriodTime) {
		return nil, false
	}
	return o.SettlePeriodTime, true
}

// HasSettlePeriodTime returns a boolean if a field has been set.
func (o *SettleInfo) HasSettlePeriodTime() bool {
	if o != nil && !IsNil(o.SettlePeriodTime) {
		return true
	}

	return false
}

// SetSettlePeriodTime gets a reference to the given string and assigns it to the SettlePeriodTime field.
func (o *SettleInfo) SetSettlePeriodTime(v string) {
	o.SettlePeriodTime = &v
}

func (o SettleInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettleInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SettleDetailInfos) {
		toSerialize["settle_detail_infos"] = o.SettleDetailInfos
	}
	if !IsNil(o.SettlePeriodTime) {
		toSerialize["settle_period_time"] = o.SettlePeriodTime
	}
	return toSerialize, nil
}

type NullableSettleInfo struct {
	value *SettleInfo
	isSet bool
}

func (v NullableSettleInfo) Get() *SettleInfo {
	return v.value
}

func (v *NullableSettleInfo) Set(val *SettleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSettleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSettleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettleInfo(val *SettleInfo) *NullableSettleInfo {
	return &NullableSettleInfo{value: val, isSet: true}
}

func (v NullableSettleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



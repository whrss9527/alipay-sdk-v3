/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreditRiskInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditRiskInfo{}

// CreditRiskInfo struct for CreditRiskInfo
type CreditRiskInfo struct {
	// 查询失败的情况下，是否可以通过重试解决。true 表示可以适当重试一定次数；false 表示有明确的失败原因，无需重试，
	CanRetry *bool `json:"can_retry,omitempty"`
	// 用户信用数据查询状态
	Code *string `json:"code,omitempty"`
	// 用户信用风险信息，如：租物场景风险等级、履约历史等级、共租行为等级
	Data *string `json:"data,omitempty"`
}

// NewCreditRiskInfo instantiates a new CreditRiskInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditRiskInfo() *CreditRiskInfo {
	this := CreditRiskInfo{}
	return &this
}

// NewCreditRiskInfoWithDefaults instantiates a new CreditRiskInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditRiskInfoWithDefaults() *CreditRiskInfo {
	this := CreditRiskInfo{}
	return &this
}

// GetCanRetry returns the CanRetry field value if set, zero value otherwise.
func (o *CreditRiskInfo) GetCanRetry() bool {
	if o == nil || IsNil(o.CanRetry) {
		var ret bool
		return ret
	}
	return *o.CanRetry
}

// GetCanRetryOk returns a tuple with the CanRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditRiskInfo) GetCanRetryOk() (*bool, bool) {
	if o == nil || IsNil(o.CanRetry) {
		return nil, false
	}
	return o.CanRetry, true
}

// HasCanRetry returns a boolean if a field has been set.
func (o *CreditRiskInfo) HasCanRetry() bool {
	if o != nil && !IsNil(o.CanRetry) {
		return true
	}

	return false
}

// SetCanRetry gets a reference to the given bool and assigns it to the CanRetry field.
func (o *CreditRiskInfo) SetCanRetry(v bool) {
	o.CanRetry = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CreditRiskInfo) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditRiskInfo) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CreditRiskInfo) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CreditRiskInfo) SetCode(v string) {
	o.Code = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreditRiskInfo) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditRiskInfo) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreditRiskInfo) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *CreditRiskInfo) SetData(v string) {
	o.Data = &v
}

func (o CreditRiskInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditRiskInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanRetry) {
		toSerialize["can_retry"] = o.CanRetry
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableCreditRiskInfo struct {
	value *CreditRiskInfo
	isSet bool
}

func (v NullableCreditRiskInfo) Get() *CreditRiskInfo {
	return v.value
}

func (v *NullableCreditRiskInfo) Set(val *CreditRiskInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditRiskInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditRiskInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditRiskInfo(val *CreditRiskInfo) *NullableCreditRiskInfo {
	return &NullableCreditRiskInfo{value: val, isSet: true}
}

func (v NullableCreditRiskInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditRiskInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoucherAvailableScopeResultInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherAvailableScopeResultInfo{}

// VoucherAvailableScopeResultInfo struct for VoucherAvailableScopeResultInfo
type VoucherAvailableScopeResultInfo struct {
	VoucherAvailableGeographyScopeResultInfo *VoucherAvailableGeographyScopeResultInfo `json:"voucher_available_geography_scope_result_info,omitempty"`
}

// NewVoucherAvailableScopeResultInfo instantiates a new VoucherAvailableScopeResultInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherAvailableScopeResultInfo() *VoucherAvailableScopeResultInfo {
	this := VoucherAvailableScopeResultInfo{}
	return &this
}

// NewVoucherAvailableScopeResultInfoWithDefaults instantiates a new VoucherAvailableScopeResultInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherAvailableScopeResultInfoWithDefaults() *VoucherAvailableScopeResultInfo {
	this := VoucherAvailableScopeResultInfo{}
	return &this
}

// GetVoucherAvailableGeographyScopeResultInfo returns the VoucherAvailableGeographyScopeResultInfo field value if set, zero value otherwise.
func (o *VoucherAvailableScopeResultInfo) GetVoucherAvailableGeographyScopeResultInfo() VoucherAvailableGeographyScopeResultInfo {
	if o == nil || IsNil(o.VoucherAvailableGeographyScopeResultInfo) {
		var ret VoucherAvailableGeographyScopeResultInfo
		return ret
	}
	return *o.VoucherAvailableGeographyScopeResultInfo
}

// GetVoucherAvailableGeographyScopeResultInfoOk returns a tuple with the VoucherAvailableGeographyScopeResultInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableScopeResultInfo) GetVoucherAvailableGeographyScopeResultInfoOk() (*VoucherAvailableGeographyScopeResultInfo, bool) {
	if o == nil || IsNil(o.VoucherAvailableGeographyScopeResultInfo) {
		return nil, false
	}
	return o.VoucherAvailableGeographyScopeResultInfo, true
}

// HasVoucherAvailableGeographyScopeResultInfo returns a boolean if a field has been set.
func (o *VoucherAvailableScopeResultInfo) HasVoucherAvailableGeographyScopeResultInfo() bool {
	if o != nil && !IsNil(o.VoucherAvailableGeographyScopeResultInfo) {
		return true
	}

	return false
}

// SetVoucherAvailableGeographyScopeResultInfo gets a reference to the given VoucherAvailableGeographyScopeResultInfo and assigns it to the VoucherAvailableGeographyScopeResultInfo field.
func (o *VoucherAvailableScopeResultInfo) SetVoucherAvailableGeographyScopeResultInfo(v VoucherAvailableGeographyScopeResultInfo) {
	o.VoucherAvailableGeographyScopeResultInfo = &v
}

func (o VoucherAvailableScopeResultInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherAvailableScopeResultInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VoucherAvailableGeographyScopeResultInfo) {
		toSerialize["voucher_available_geography_scope_result_info"] = o.VoucherAvailableGeographyScopeResultInfo
	}
	return toSerialize, nil
}

type NullableVoucherAvailableScopeResultInfo struct {
	value *VoucherAvailableScopeResultInfo
	isSet bool
}

func (v NullableVoucherAvailableScopeResultInfo) Get() *VoucherAvailableScopeResultInfo {
	return v.value
}

func (v *NullableVoucherAvailableScopeResultInfo) Set(val *VoucherAvailableScopeResultInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherAvailableScopeResultInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherAvailableScopeResultInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherAvailableScopeResultInfo(val *VoucherAvailableScopeResultInfo) *NullableVoucherAvailableScopeResultInfo {
	return &NullableVoucherAvailableScopeResultInfo{value: val, isSet: true}
}

func (v NullableVoucherAvailableScopeResultInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherAvailableScopeResultInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



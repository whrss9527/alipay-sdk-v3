/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PublicAuditStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicAuditStatus{}

// PublicAuditStatus struct for PublicAuditStatus
type PublicAuditStatus struct {
	// 审核状态描述，如果审核驳回则有相关的驳回理由
	Desc *string `json:"desc,omitempty"`
	// AUDITING：审核中，AUDIT_FAILED：审核驳回，AUDIT_SUCCESS：审核通过，AUDIT_NORMAL：无审核记录
	Status *string `json:"status,omitempty"`
	// NAME:名称、AVATAR:头像、NAME_AVATAR:名称与头像、INTRODUCTION:简介
	Type *string `json:"type,omitempty"`
}

// NewPublicAuditStatus instantiates a new PublicAuditStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicAuditStatus() *PublicAuditStatus {
	this := PublicAuditStatus{}
	return &this
}

// NewPublicAuditStatusWithDefaults instantiates a new PublicAuditStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicAuditStatusWithDefaults() *PublicAuditStatus {
	this := PublicAuditStatus{}
	return &this
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *PublicAuditStatus) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicAuditStatus) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *PublicAuditStatus) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *PublicAuditStatus) SetDesc(v string) {
	o.Desc = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PublicAuditStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicAuditStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PublicAuditStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PublicAuditStatus) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PublicAuditStatus) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicAuditStatus) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PublicAuditStatus) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PublicAuditStatus) SetType(v string) {
	o.Type = &v
}

func (o PublicAuditStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicAuditStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullablePublicAuditStatus struct {
	value *PublicAuditStatus
	isSet bool
}

func (v NullablePublicAuditStatus) Get() *PublicAuditStatus {
	return v.value
}

func (v *NullablePublicAuditStatus) Set(val *PublicAuditStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicAuditStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicAuditStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicAuditStatus(val *PublicAuditStatus) *NullablePublicAuditStatus {
	return &NullablePublicAuditStatus{value: val, isSet: true}
}

func (v NullablePublicAuditStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicAuditStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



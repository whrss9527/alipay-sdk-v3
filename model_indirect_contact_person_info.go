/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the IndirectContactPersonInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndirectContactPersonInfo{}

// IndirectContactPersonInfo struct for IndirectContactPersonInfo
type IndirectContactPersonInfo struct {
	// 联系人身份证件号。 可传身份证、港澳居民来往内地通行证、港澳居民居住证、台湾居民来往大陆通行证、台湾居民居住证、护照、外国人永久居住证等证件号码，号码枚举见contact_card_type。若传身份证，需保证18位，且英文字母大写
	ContactCardNo *string `json:"contact_card_no,omitempty"`
	// 联系人证件类型，枚举值：中国大陆居民-身份证(RESIDENT)、其他国家或地区居民-护照(PASSPORT)、中国港澳居民-来往内地通行证(PASSPORT_HK_MO)、中国台湾居民-来往大陆通行证(PASSPORT_TWN)、港澳居民居住证（RESIDENCE_PERMIT_HM）、台湾居民居住证（RESIDENCE_PERMIT_TW）、外国人永久居住证（PERMANENT_RESIDENCE_FOREIGNER）。个体户/企业/事业单位/社会组织：可选择任一证件类型。小微商户仅支持身份证类型。
	ContactCertType *string `json:"contact_cert_type,omitempty"`
	// 联系人姓名
	ContactName *string `json:"contact_name,omitempty"`
	// 联系人手机
	ContactPhoneNo *string `json:"contact_phone_no,omitempty"`
}

// NewIndirectContactPersonInfo instantiates a new IndirectContactPersonInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndirectContactPersonInfo() *IndirectContactPersonInfo {
	this := IndirectContactPersonInfo{}
	return &this
}

// NewIndirectContactPersonInfoWithDefaults instantiates a new IndirectContactPersonInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndirectContactPersonInfoWithDefaults() *IndirectContactPersonInfo {
	this := IndirectContactPersonInfo{}
	return &this
}

// GetContactCardNo returns the ContactCardNo field value if set, zero value otherwise.
func (o *IndirectContactPersonInfo) GetContactCardNo() string {
	if o == nil || IsNil(o.ContactCardNo) {
		var ret string
		return ret
	}
	return *o.ContactCardNo
}

// GetContactCardNoOk returns a tuple with the ContactCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectContactPersonInfo) GetContactCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.ContactCardNo) {
		return nil, false
	}
	return o.ContactCardNo, true
}

// HasContactCardNo returns a boolean if a field has been set.
func (o *IndirectContactPersonInfo) HasContactCardNo() bool {
	if o != nil && !IsNil(o.ContactCardNo) {
		return true
	}

	return false
}

// SetContactCardNo gets a reference to the given string and assigns it to the ContactCardNo field.
func (o *IndirectContactPersonInfo) SetContactCardNo(v string) {
	o.ContactCardNo = &v
}

// GetContactCertType returns the ContactCertType field value if set, zero value otherwise.
func (o *IndirectContactPersonInfo) GetContactCertType() string {
	if o == nil || IsNil(o.ContactCertType) {
		var ret string
		return ret
	}
	return *o.ContactCertType
}

// GetContactCertTypeOk returns a tuple with the ContactCertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectContactPersonInfo) GetContactCertTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContactCertType) {
		return nil, false
	}
	return o.ContactCertType, true
}

// HasContactCertType returns a boolean if a field has been set.
func (o *IndirectContactPersonInfo) HasContactCertType() bool {
	if o != nil && !IsNil(o.ContactCertType) {
		return true
	}

	return false
}

// SetContactCertType gets a reference to the given string and assigns it to the ContactCertType field.
func (o *IndirectContactPersonInfo) SetContactCertType(v string) {
	o.ContactCertType = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *IndirectContactPersonInfo) GetContactName() string {
	if o == nil || IsNil(o.ContactName) {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectContactPersonInfo) GetContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactName) {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *IndirectContactPersonInfo) HasContactName() bool {
	if o != nil && !IsNil(o.ContactName) {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *IndirectContactPersonInfo) SetContactName(v string) {
	o.ContactName = &v
}

// GetContactPhoneNo returns the ContactPhoneNo field value if set, zero value otherwise.
func (o *IndirectContactPersonInfo) GetContactPhoneNo() string {
	if o == nil || IsNil(o.ContactPhoneNo) {
		var ret string
		return ret
	}
	return *o.ContactPhoneNo
}

// GetContactPhoneNoOk returns a tuple with the ContactPhoneNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectContactPersonInfo) GetContactPhoneNoOk() (*string, bool) {
	if o == nil || IsNil(o.ContactPhoneNo) {
		return nil, false
	}
	return o.ContactPhoneNo, true
}

// HasContactPhoneNo returns a boolean if a field has been set.
func (o *IndirectContactPersonInfo) HasContactPhoneNo() bool {
	if o != nil && !IsNil(o.ContactPhoneNo) {
		return true
	}

	return false
}

// SetContactPhoneNo gets a reference to the given string and assigns it to the ContactPhoneNo field.
func (o *IndirectContactPersonInfo) SetContactPhoneNo(v string) {
	o.ContactPhoneNo = &v
}

func (o IndirectContactPersonInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndirectContactPersonInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContactCardNo) {
		toSerialize["contact_card_no"] = o.ContactCardNo
	}
	if !IsNil(o.ContactCertType) {
		toSerialize["contact_cert_type"] = o.ContactCertType
	}
	if !IsNil(o.ContactName) {
		toSerialize["contact_name"] = o.ContactName
	}
	if !IsNil(o.ContactPhoneNo) {
		toSerialize["contact_phone_no"] = o.ContactPhoneNo
	}
	return toSerialize, nil
}

type NullableIndirectContactPersonInfo struct {
	value *IndirectContactPersonInfo
	isSet bool
}

func (v NullableIndirectContactPersonInfo) Get() *IndirectContactPersonInfo {
	return v.value
}

func (v *NullableIndirectContactPersonInfo) Set(val *IndirectContactPersonInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIndirectContactPersonInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIndirectContactPersonInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndirectContactPersonInfo(val *IndirectContactPersonInfo) *NullableIndirectContactPersonInfo {
	return &NullableIndirectContactPersonInfo{value: val, isSet: true}
}

func (v NullableIndirectContactPersonInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndirectContactPersonInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BusinessParamsMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessParamsMap{}

// BusinessParamsMap struct for BusinessParamsMap
type BusinessParamsMap struct {
	// 服务变更时间
	ChangeTime *string `json:"change_time,omitempty"`
	// 服务变更后新金额
	NewAmount *string `json:"new_amount,omitempty"`
	// 原始价格
	OriAmount *string `json:"ori_amount,omitempty"`
}

// NewBusinessParamsMap instantiates a new BusinessParamsMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessParamsMap() *BusinessParamsMap {
	this := BusinessParamsMap{}
	return &this
}

// NewBusinessParamsMapWithDefaults instantiates a new BusinessParamsMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessParamsMapWithDefaults() *BusinessParamsMap {
	this := BusinessParamsMap{}
	return &this
}

// GetChangeTime returns the ChangeTime field value if set, zero value otherwise.
func (o *BusinessParamsMap) GetChangeTime() string {
	if o == nil || IsNil(o.ChangeTime) {
		var ret string
		return ret
	}
	return *o.ChangeTime
}

// GetChangeTimeOk returns a tuple with the ChangeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessParamsMap) GetChangeTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeTime) {
		return nil, false
	}
	return o.ChangeTime, true
}

// HasChangeTime returns a boolean if a field has been set.
func (o *BusinessParamsMap) HasChangeTime() bool {
	if o != nil && !IsNil(o.ChangeTime) {
		return true
	}

	return false
}

// SetChangeTime gets a reference to the given string and assigns it to the ChangeTime field.
func (o *BusinessParamsMap) SetChangeTime(v string) {
	o.ChangeTime = &v
}

// GetNewAmount returns the NewAmount field value if set, zero value otherwise.
func (o *BusinessParamsMap) GetNewAmount() string {
	if o == nil || IsNil(o.NewAmount) {
		var ret string
		return ret
	}
	return *o.NewAmount
}

// GetNewAmountOk returns a tuple with the NewAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessParamsMap) GetNewAmountOk() (*string, bool) {
	if o == nil || IsNil(o.NewAmount) {
		return nil, false
	}
	return o.NewAmount, true
}

// HasNewAmount returns a boolean if a field has been set.
func (o *BusinessParamsMap) HasNewAmount() bool {
	if o != nil && !IsNil(o.NewAmount) {
		return true
	}

	return false
}

// SetNewAmount gets a reference to the given string and assigns it to the NewAmount field.
func (o *BusinessParamsMap) SetNewAmount(v string) {
	o.NewAmount = &v
}

// GetOriAmount returns the OriAmount field value if set, zero value otherwise.
func (o *BusinessParamsMap) GetOriAmount() string {
	if o == nil || IsNil(o.OriAmount) {
		var ret string
		return ret
	}
	return *o.OriAmount
}

// GetOriAmountOk returns a tuple with the OriAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessParamsMap) GetOriAmountOk() (*string, bool) {
	if o == nil || IsNil(o.OriAmount) {
		return nil, false
	}
	return o.OriAmount, true
}

// HasOriAmount returns a boolean if a field has been set.
func (o *BusinessParamsMap) HasOriAmount() bool {
	if o != nil && !IsNil(o.OriAmount) {
		return true
	}

	return false
}

// SetOriAmount gets a reference to the given string and assigns it to the OriAmount field.
func (o *BusinessParamsMap) SetOriAmount(v string) {
	o.OriAmount = &v
}

func (o BusinessParamsMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessParamsMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChangeTime) {
		toSerialize["change_time"] = o.ChangeTime
	}
	if !IsNil(o.NewAmount) {
		toSerialize["new_amount"] = o.NewAmount
	}
	if !IsNil(o.OriAmount) {
		toSerialize["ori_amount"] = o.OriAmount
	}
	return toSerialize, nil
}

type NullableBusinessParamsMap struct {
	value *BusinessParamsMap
	isSet bool
}

func (v NullableBusinessParamsMap) Get() *BusinessParamsMap {
	return v.value
}

func (v *NullableBusinessParamsMap) Set(val *BusinessParamsMap) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessParamsMap) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessParamsMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessParamsMap(val *BusinessParamsMap) *NullableBusinessParamsMap {
	return &NullableBusinessParamsMap{value: val, isSet: true}
}

func (v NullableBusinessParamsMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessParamsMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



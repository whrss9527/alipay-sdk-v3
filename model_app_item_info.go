/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppItemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppItemInfo{}

// AppItemInfo struct for AppItemInfo
type AppItemInfo struct {
	// 小程序商品-支付宝内部商品id
	ItemId *string `json:"item_id,omitempty"`
	// 商品可用类型
	ItemUseType *string `json:"item_use_type,omitempty"`
	// 小程序id
	MiniAppId *string `json:"mini_app_id,omitempty"`
	// 外部商品ID
	OutItemId *string `json:"out_item_id,omitempty"`
}

// NewAppItemInfo instantiates a new AppItemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppItemInfo() *AppItemInfo {
	this := AppItemInfo{}
	return &this
}

// NewAppItemInfoWithDefaults instantiates a new AppItemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppItemInfoWithDefaults() *AppItemInfo {
	this := AppItemInfo{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *AppItemInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppItemInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *AppItemInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *AppItemInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetItemUseType returns the ItemUseType field value if set, zero value otherwise.
func (o *AppItemInfo) GetItemUseType() string {
	if o == nil || IsNil(o.ItemUseType) {
		var ret string
		return ret
	}
	return *o.ItemUseType
}

// GetItemUseTypeOk returns a tuple with the ItemUseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppItemInfo) GetItemUseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemUseType) {
		return nil, false
	}
	return o.ItemUseType, true
}

// HasItemUseType returns a boolean if a field has been set.
func (o *AppItemInfo) HasItemUseType() bool {
	if o != nil && !IsNil(o.ItemUseType) {
		return true
	}

	return false
}

// SetItemUseType gets a reference to the given string and assigns it to the ItemUseType field.
func (o *AppItemInfo) SetItemUseType(v string) {
	o.ItemUseType = &v
}

// GetMiniAppId returns the MiniAppId field value if set, zero value otherwise.
func (o *AppItemInfo) GetMiniAppId() string {
	if o == nil || IsNil(o.MiniAppId) {
		var ret string
		return ret
	}
	return *o.MiniAppId
}

// GetMiniAppIdOk returns a tuple with the MiniAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppItemInfo) GetMiniAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.MiniAppId) {
		return nil, false
	}
	return o.MiniAppId, true
}

// HasMiniAppId returns a boolean if a field has been set.
func (o *AppItemInfo) HasMiniAppId() bool {
	if o != nil && !IsNil(o.MiniAppId) {
		return true
	}

	return false
}

// SetMiniAppId gets a reference to the given string and assigns it to the MiniAppId field.
func (o *AppItemInfo) SetMiniAppId(v string) {
	o.MiniAppId = &v
}

// GetOutItemId returns the OutItemId field value if set, zero value otherwise.
func (o *AppItemInfo) GetOutItemId() string {
	if o == nil || IsNil(o.OutItemId) {
		var ret string
		return ret
	}
	return *o.OutItemId
}

// GetOutItemIdOk returns a tuple with the OutItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppItemInfo) GetOutItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutItemId) {
		return nil, false
	}
	return o.OutItemId, true
}

// HasOutItemId returns a boolean if a field has been set.
func (o *AppItemInfo) HasOutItemId() bool {
	if o != nil && !IsNil(o.OutItemId) {
		return true
	}

	return false
}

// SetOutItemId gets a reference to the given string and assigns it to the OutItemId field.
func (o *AppItemInfo) SetOutItemId(v string) {
	o.OutItemId = &v
}

func (o AppItemInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppItemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.ItemUseType) {
		toSerialize["item_use_type"] = o.ItemUseType
	}
	if !IsNil(o.MiniAppId) {
		toSerialize["mini_app_id"] = o.MiniAppId
	}
	if !IsNil(o.OutItemId) {
		toSerialize["out_item_id"] = o.OutItemId
	}
	return toSerialize, nil
}

type NullableAppItemInfo struct {
	value *AppItemInfo
	isSet bool
}

func (v NullableAppItemInfo) Get() *AppItemInfo {
	return v.value
}

func (v *NullableAppItemInfo) Set(val *AppItemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAppItemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAppItemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppItemInfo(val *AppItemInfo) *NullableAppItemInfo {
	return &NullableAppItemInfo{value: val, isSet: true}
}

func (v NullableAppItemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppItemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



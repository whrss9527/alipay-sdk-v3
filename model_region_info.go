/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the RegionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegionInfo{}

// RegionInfo struct for RegionInfo
type RegionInfo struct {
	// 地址所属区代码
	AreaCode *string `json:"area_code,omitempty"`
	// 地址所属区名称
	AreaName *string `json:"area_name,omitempty"`
	// 地址所属市代码
	CityCode *string `json:"city_code,omitempty"`
	// 地址所属市名称
	CityName *string `json:"city_name,omitempty"`
	// 地址所属省份代码
	ProvinceCode *string `json:"province_code,omitempty"`
	// 地址所属省份名称
	ProvinceName *string `json:"province_name,omitempty"`
}

// NewRegionInfo instantiates a new RegionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionInfo() *RegionInfo {
	this := RegionInfo{}
	return &this
}

// NewRegionInfoWithDefaults instantiates a new RegionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionInfoWithDefaults() *RegionInfo {
	this := RegionInfo{}
	return &this
}

// GetAreaCode returns the AreaCode field value if set, zero value otherwise.
func (o *RegionInfo) GetAreaCode() string {
	if o == nil || IsNil(o.AreaCode) {
		var ret string
		return ret
	}
	return *o.AreaCode
}

// GetAreaCodeOk returns a tuple with the AreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionInfo) GetAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCode) {
		return nil, false
	}
	return o.AreaCode, true
}

// HasAreaCode returns a boolean if a field has been set.
func (o *RegionInfo) HasAreaCode() bool {
	if o != nil && !IsNil(o.AreaCode) {
		return true
	}

	return false
}

// SetAreaCode gets a reference to the given string and assigns it to the AreaCode field.
func (o *RegionInfo) SetAreaCode(v string) {
	o.AreaCode = &v
}

// GetAreaName returns the AreaName field value if set, zero value otherwise.
func (o *RegionInfo) GetAreaName() string {
	if o == nil || IsNil(o.AreaName) {
		var ret string
		return ret
	}
	return *o.AreaName
}

// GetAreaNameOk returns a tuple with the AreaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionInfo) GetAreaNameOk() (*string, bool) {
	if o == nil || IsNil(o.AreaName) {
		return nil, false
	}
	return o.AreaName, true
}

// HasAreaName returns a boolean if a field has been set.
func (o *RegionInfo) HasAreaName() bool {
	if o != nil && !IsNil(o.AreaName) {
		return true
	}

	return false
}

// SetAreaName gets a reference to the given string and assigns it to the AreaName field.
func (o *RegionInfo) SetAreaName(v string) {
	o.AreaName = &v
}

// GetCityCode returns the CityCode field value if set, zero value otherwise.
func (o *RegionInfo) GetCityCode() string {
	if o == nil || IsNil(o.CityCode) {
		var ret string
		return ret
	}
	return *o.CityCode
}

// GetCityCodeOk returns a tuple with the CityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionInfo) GetCityCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CityCode) {
		return nil, false
	}
	return o.CityCode, true
}

// HasCityCode returns a boolean if a field has been set.
func (o *RegionInfo) HasCityCode() bool {
	if o != nil && !IsNil(o.CityCode) {
		return true
	}

	return false
}

// SetCityCode gets a reference to the given string and assigns it to the CityCode field.
func (o *RegionInfo) SetCityCode(v string) {
	o.CityCode = &v
}

// GetCityName returns the CityName field value if set, zero value otherwise.
func (o *RegionInfo) GetCityName() string {
	if o == nil || IsNil(o.CityName) {
		var ret string
		return ret
	}
	return *o.CityName
}

// GetCityNameOk returns a tuple with the CityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionInfo) GetCityNameOk() (*string, bool) {
	if o == nil || IsNil(o.CityName) {
		return nil, false
	}
	return o.CityName, true
}

// HasCityName returns a boolean if a field has been set.
func (o *RegionInfo) HasCityName() bool {
	if o != nil && !IsNil(o.CityName) {
		return true
	}

	return false
}

// SetCityName gets a reference to the given string and assigns it to the CityName field.
func (o *RegionInfo) SetCityName(v string) {
	o.CityName = &v
}

// GetProvinceCode returns the ProvinceCode field value if set, zero value otherwise.
func (o *RegionInfo) GetProvinceCode() string {
	if o == nil || IsNil(o.ProvinceCode) {
		var ret string
		return ret
	}
	return *o.ProvinceCode
}

// GetProvinceCodeOk returns a tuple with the ProvinceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionInfo) GetProvinceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProvinceCode) {
		return nil, false
	}
	return o.ProvinceCode, true
}

// HasProvinceCode returns a boolean if a field has been set.
func (o *RegionInfo) HasProvinceCode() bool {
	if o != nil && !IsNil(o.ProvinceCode) {
		return true
	}

	return false
}

// SetProvinceCode gets a reference to the given string and assigns it to the ProvinceCode field.
func (o *RegionInfo) SetProvinceCode(v string) {
	o.ProvinceCode = &v
}

// GetProvinceName returns the ProvinceName field value if set, zero value otherwise.
func (o *RegionInfo) GetProvinceName() string {
	if o == nil || IsNil(o.ProvinceName) {
		var ret string
		return ret
	}
	return *o.ProvinceName
}

// GetProvinceNameOk returns a tuple with the ProvinceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionInfo) GetProvinceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProvinceName) {
		return nil, false
	}
	return o.ProvinceName, true
}

// HasProvinceName returns a boolean if a field has been set.
func (o *RegionInfo) HasProvinceName() bool {
	if o != nil && !IsNil(o.ProvinceName) {
		return true
	}

	return false
}

// SetProvinceName gets a reference to the given string and assigns it to the ProvinceName field.
func (o *RegionInfo) SetProvinceName(v string) {
	o.ProvinceName = &v
}

func (o RegionInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AreaCode) {
		toSerialize["area_code"] = o.AreaCode
	}
	if !IsNil(o.AreaName) {
		toSerialize["area_name"] = o.AreaName
	}
	if !IsNil(o.CityCode) {
		toSerialize["city_code"] = o.CityCode
	}
	if !IsNil(o.CityName) {
		toSerialize["city_name"] = o.CityName
	}
	if !IsNil(o.ProvinceCode) {
		toSerialize["province_code"] = o.ProvinceCode
	}
	if !IsNil(o.ProvinceName) {
		toSerialize["province_name"] = o.ProvinceName
	}
	return toSerialize, nil
}

type NullableRegionInfo struct {
	value *RegionInfo
	isSet bool
}

func (v NullableRegionInfo) Get() *RegionInfo {
	return v.value
}

func (v *NullableRegionInfo) Set(val *RegionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionInfo(val *RegionInfo) *NullableRegionInfo {
	return &NullableRegionInfo{value: val, isSet: true}
}

func (v NullableRegionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the TemplateInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateInfo{}

// TemplateInfo struct for TemplateInfo
type TemplateInfo struct {
	// 模板填充项
	FillContents []FillContent `json:"fill_contents,omitempty"`
	// 文件名称
	Name       *string    `json:"name,omitempty"`
	Signfields *SignField `json:"signfields,omitempty"`
	// 模板id
	TemplateId *string `json:"template_id,omitempty"`
}

// NewTemplateInfo instantiates a new TemplateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateInfo() *TemplateInfo {
	this := TemplateInfo{}
	return &this
}

// NewTemplateInfoWithDefaults instantiates a new TemplateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateInfoWithDefaults() *TemplateInfo {
	this := TemplateInfo{}
	return &this
}

// GetFillContents returns the FillContents field value if set, zero value otherwise.
func (o *TemplateInfo) GetFillContents() []FillContent {
	if o == nil || IsNil(o.FillContents) {
		var ret []FillContent
		return ret
	}
	return o.FillContents
}

// GetFillContentsOk returns a tuple with the FillContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateInfo) GetFillContentsOk() ([]FillContent, bool) {
	if o == nil || IsNil(o.FillContents) {
		return nil, false
	}
	return o.FillContents, true
}

// HasFillContents returns a boolean if a field has been set.
func (o *TemplateInfo) HasFillContents() bool {
	if o != nil && !IsNil(o.FillContents) {
		return true
	}

	return false
}

// SetFillContents gets a reference to the given []FillContent and assigns it to the FillContents field.
func (o *TemplateInfo) SetFillContents(v []FillContent) {
	o.FillContents = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateInfo) SetName(v string) {
	o.Name = &v
}

// GetSignfields returns the Signfields field value if set, zero value otherwise.
func (o *TemplateInfo) GetSignfields() SignField {
	if o == nil || IsNil(o.Signfields) {
		var ret SignField
		return ret
	}
	return *o.Signfields
}

// GetSignfieldsOk returns a tuple with the Signfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateInfo) GetSignfieldsOk() (*SignField, bool) {
	if o == nil || IsNil(o.Signfields) {
		return nil, false
	}
	return o.Signfields, true
}

// HasSignfields returns a boolean if a field has been set.
func (o *TemplateInfo) HasSignfields() bool {
	if o != nil && !IsNil(o.Signfields) {
		return true
	}

	return false
}

// SetSignfields gets a reference to the given SignField and assigns it to the Signfields field.
func (o *TemplateInfo) SetSignfields(v SignField) {
	o.Signfields = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *TemplateInfo) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateInfo) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *TemplateInfo) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *TemplateInfo) SetTemplateId(v string) {
	o.TemplateId = &v
}

func (o TemplateInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FillContents) {
		toSerialize["fill_contents"] = o.FillContents
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Signfields) {
		toSerialize["signfields"] = o.Signfields
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	return toSerialize, nil
}

type NullableTemplateInfo struct {
	value *TemplateInfo
	isSet bool
}

func (v NullableTemplateInfo) Get() *TemplateInfo {
	return v.value
}

func (v *NullableTemplateInfo) Set(val *TemplateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateInfo(val *TemplateInfo) *NullableTemplateInfo {
	return &NullableTemplateInfo{value: val, isSet: true}
}

func (v NullableTemplateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

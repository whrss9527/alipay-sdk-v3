/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenCertifyIdentityParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenCertifyIdentityParam{}

// OpenCertifyIdentityParam struct for OpenCertifyIdentityParam
type OpenCertifyIdentityParam struct {
	// cert_digest： 身份信息摘要
	CertDigest *string `json:"cert_digest,omitempty"`
	// cert_name： 填入真实姓名
	CertName *string `json:"cert_name,omitempty"`
	// cert_no： 填入姓名相匹配的证件号码
	CertNo *string `json:"cert_no,omitempty"`
	// cert_type： 1、若为身份证，填IDENTITY_CARD； 2、若为港澳居民来往内地通行证，填HOME_VISIT_PERMIT_HK_MC； 3、若为台湾居民来往内地通行证，填HOME_VISIT_PERMIT_TAIWAN； 4、若为港澳居民居住证，填RESIDENCE_PERMIT_HK_MC； 5、若为台湾居民居住证，填RESIDENCE_PERMIT_TAIWAN； 6、外国人永久居留证，填PERMANENT_RESIDENCE_FOREIGNER；
	CertType *string `json:"cert_type,omitempty"`
	// facial_picture_front： 活体人脸图片base64串，主要用于离线人脸比对
	FacialPictureFront *string `json:"facial_picture_front,omitempty"`
	// identity_type 1.若本人验证，使用CERT_INFO； 2.若代他人验证，使用AGENT_CERT_INFO；
	IdentityType *string `json:"identity_type,omitempty"`
	// open_id： 开放平台用户ID
	OpenId *string `json:"open_id,omitempty"`
	// phone_no： 填写姓名相匹配的手机号
	PhoneNo *string `json:"phone_no,omitempty"`
	// user_id： 支付宝用户ID
	UserId *string `json:"user_id,omitempty"`
}

// NewOpenCertifyIdentityParam instantiates a new OpenCertifyIdentityParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenCertifyIdentityParam() *OpenCertifyIdentityParam {
	this := OpenCertifyIdentityParam{}
	return &this
}

// NewOpenCertifyIdentityParamWithDefaults instantiates a new OpenCertifyIdentityParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenCertifyIdentityParamWithDefaults() *OpenCertifyIdentityParam {
	this := OpenCertifyIdentityParam{}
	return &this
}

// GetCertDigest returns the CertDigest field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetCertDigest() string {
	if o == nil || IsNil(o.CertDigest) {
		var ret string
		return ret
	}
	return *o.CertDigest
}

// GetCertDigestOk returns a tuple with the CertDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetCertDigestOk() (*string, bool) {
	if o == nil || IsNil(o.CertDigest) {
		return nil, false
	}
	return o.CertDigest, true
}

// HasCertDigest returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasCertDigest() bool {
	if o != nil && !IsNil(o.CertDigest) {
		return true
	}

	return false
}

// SetCertDigest gets a reference to the given string and assigns it to the CertDigest field.
func (o *OpenCertifyIdentityParam) SetCertDigest(v string) {
	o.CertDigest = &v
}

// GetCertName returns the CertName field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetCertName() string {
	if o == nil || IsNil(o.CertName) {
		var ret string
		return ret
	}
	return *o.CertName
}

// GetCertNameOk returns a tuple with the CertName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetCertNameOk() (*string, bool) {
	if o == nil || IsNil(o.CertName) {
		return nil, false
	}
	return o.CertName, true
}

// HasCertName returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasCertName() bool {
	if o != nil && !IsNil(o.CertName) {
		return true
	}

	return false
}

// SetCertName gets a reference to the given string and assigns it to the CertName field.
func (o *OpenCertifyIdentityParam) SetCertName(v string) {
	o.CertName = &v
}

// GetCertNo returns the CertNo field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetCertNo() string {
	if o == nil || IsNil(o.CertNo) {
		var ret string
		return ret
	}
	return *o.CertNo
}

// GetCertNoOk returns a tuple with the CertNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetCertNoOk() (*string, bool) {
	if o == nil || IsNil(o.CertNo) {
		return nil, false
	}
	return o.CertNo, true
}

// HasCertNo returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasCertNo() bool {
	if o != nil && !IsNil(o.CertNo) {
		return true
	}

	return false
}

// SetCertNo gets a reference to the given string and assigns it to the CertNo field.
func (o *OpenCertifyIdentityParam) SetCertNo(v string) {
	o.CertNo = &v
}

// GetCertType returns the CertType field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetCertType() string {
	if o == nil || IsNil(o.CertType) {
		var ret string
		return ret
	}
	return *o.CertType
}

// GetCertTypeOk returns a tuple with the CertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetCertTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CertType) {
		return nil, false
	}
	return o.CertType, true
}

// HasCertType returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasCertType() bool {
	if o != nil && !IsNil(o.CertType) {
		return true
	}

	return false
}

// SetCertType gets a reference to the given string and assigns it to the CertType field.
func (o *OpenCertifyIdentityParam) SetCertType(v string) {
	o.CertType = &v
}

// GetFacialPictureFront returns the FacialPictureFront field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetFacialPictureFront() string {
	if o == nil || IsNil(o.FacialPictureFront) {
		var ret string
		return ret
	}
	return *o.FacialPictureFront
}

// GetFacialPictureFrontOk returns a tuple with the FacialPictureFront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetFacialPictureFrontOk() (*string, bool) {
	if o == nil || IsNil(o.FacialPictureFront) {
		return nil, false
	}
	return o.FacialPictureFront, true
}

// HasFacialPictureFront returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasFacialPictureFront() bool {
	if o != nil && !IsNil(o.FacialPictureFront) {
		return true
	}

	return false
}

// SetFacialPictureFront gets a reference to the given string and assigns it to the FacialPictureFront field.
func (o *OpenCertifyIdentityParam) SetFacialPictureFront(v string) {
	o.FacialPictureFront = &v
}

// GetIdentityType returns the IdentityType field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetIdentityType() string {
	if o == nil || IsNil(o.IdentityType) {
		var ret string
		return ret
	}
	return *o.IdentityType
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetIdentityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityType) {
		return nil, false
	}
	return o.IdentityType, true
}

// HasIdentityType returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasIdentityType() bool {
	if o != nil && !IsNil(o.IdentityType) {
		return true
	}

	return false
}

// SetIdentityType gets a reference to the given string and assigns it to the IdentityType field.
func (o *OpenCertifyIdentityParam) SetIdentityType(v string) {
	o.IdentityType = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *OpenCertifyIdentityParam) SetOpenId(v string) {
	o.OpenId = &v
}

// GetPhoneNo returns the PhoneNo field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetPhoneNo() string {
	if o == nil || IsNil(o.PhoneNo) {
		var ret string
		return ret
	}
	return *o.PhoneNo
}

// GetPhoneNoOk returns a tuple with the PhoneNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetPhoneNoOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNo) {
		return nil, false
	}
	return o.PhoneNo, true
}

// HasPhoneNo returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasPhoneNo() bool {
	if o != nil && !IsNil(o.PhoneNo) {
		return true
	}

	return false
}

// SetPhoneNo gets a reference to the given string and assigns it to the PhoneNo field.
func (o *OpenCertifyIdentityParam) SetPhoneNo(v string) {
	o.PhoneNo = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *OpenCertifyIdentityParam) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyIdentityParam) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *OpenCertifyIdentityParam) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *OpenCertifyIdentityParam) SetUserId(v string) {
	o.UserId = &v
}

func (o OpenCertifyIdentityParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenCertifyIdentityParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertDigest) {
		toSerialize["cert_digest"] = o.CertDigest
	}
	if !IsNil(o.CertName) {
		toSerialize["cert_name"] = o.CertName
	}
	if !IsNil(o.CertNo) {
		toSerialize["cert_no"] = o.CertNo
	}
	if !IsNil(o.CertType) {
		toSerialize["cert_type"] = o.CertType
	}
	if !IsNil(o.FacialPictureFront) {
		toSerialize["facial_picture_front"] = o.FacialPictureFront
	}
	if !IsNil(o.IdentityType) {
		toSerialize["identity_type"] = o.IdentityType
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.PhoneNo) {
		toSerialize["phone_no"] = o.PhoneNo
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableOpenCertifyIdentityParam struct {
	value *OpenCertifyIdentityParam
	isSet bool
}

func (v NullableOpenCertifyIdentityParam) Get() *OpenCertifyIdentityParam {
	return v.value
}

func (v *NullableOpenCertifyIdentityParam) Set(val *OpenCertifyIdentityParam) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenCertifyIdentityParam) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenCertifyIdentityParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenCertifyIdentityParam(val *OpenCertifyIdentityParam) *NullableOpenCertifyIdentityParam {
	return &NullableOpenCertifyIdentityParam{value: val, isSet: true}
}

func (v NullableOpenCertifyIdentityParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenCertifyIdentityParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MerchantMenber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantMenber{}

// MerchantMenber struct for MerchantMenber
type MerchantMenber struct {
	// 生日 yyyy-MM-dd
	Birth *string `json:"birth,omitempty"`
	// 手机号
	Cell *string `json:"cell,omitempty"`
	// 性别
	Gende *string `json:"gende,omitempty"`
	// 姓名
	Name *string `json:"name,omitempty"`
}

// NewMerchantMenber instantiates a new MerchantMenber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantMenber() *MerchantMenber {
	this := MerchantMenber{}
	return &this
}

// NewMerchantMenberWithDefaults instantiates a new MerchantMenber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantMenberWithDefaults() *MerchantMenber {
	this := MerchantMenber{}
	return &this
}

// GetBirth returns the Birth field value if set, zero value otherwise.
func (o *MerchantMenber) GetBirth() string {
	if o == nil || IsNil(o.Birth) {
		var ret string
		return ret
	}
	return *o.Birth
}

// GetBirthOk returns a tuple with the Birth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMenber) GetBirthOk() (*string, bool) {
	if o == nil || IsNil(o.Birth) {
		return nil, false
	}
	return o.Birth, true
}

// HasBirth returns a boolean if a field has been set.
func (o *MerchantMenber) HasBirth() bool {
	if o != nil && !IsNil(o.Birth) {
		return true
	}

	return false
}

// SetBirth gets a reference to the given string and assigns it to the Birth field.
func (o *MerchantMenber) SetBirth(v string) {
	o.Birth = &v
}

// GetCell returns the Cell field value if set, zero value otherwise.
func (o *MerchantMenber) GetCell() string {
	if o == nil || IsNil(o.Cell) {
		var ret string
		return ret
	}
	return *o.Cell
}

// GetCellOk returns a tuple with the Cell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMenber) GetCellOk() (*string, bool) {
	if o == nil || IsNil(o.Cell) {
		return nil, false
	}
	return o.Cell, true
}

// HasCell returns a boolean if a field has been set.
func (o *MerchantMenber) HasCell() bool {
	if o != nil && !IsNil(o.Cell) {
		return true
	}

	return false
}

// SetCell gets a reference to the given string and assigns it to the Cell field.
func (o *MerchantMenber) SetCell(v string) {
	o.Cell = &v
}

// GetGende returns the Gende field value if set, zero value otherwise.
func (o *MerchantMenber) GetGende() string {
	if o == nil || IsNil(o.Gende) {
		var ret string
		return ret
	}
	return *o.Gende
}

// GetGendeOk returns a tuple with the Gende field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMenber) GetGendeOk() (*string, bool) {
	if o == nil || IsNil(o.Gende) {
		return nil, false
	}
	return o.Gende, true
}

// HasGende returns a boolean if a field has been set.
func (o *MerchantMenber) HasGende() bool {
	if o != nil && !IsNil(o.Gende) {
		return true
	}

	return false
}

// SetGende gets a reference to the given string and assigns it to the Gende field.
func (o *MerchantMenber) SetGende(v string) {
	o.Gende = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MerchantMenber) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMenber) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MerchantMenber) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MerchantMenber) SetName(v string) {
	o.Name = &v
}

func (o MerchantMenber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantMenber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Birth) {
		toSerialize["birth"] = o.Birth
	}
	if !IsNil(o.Cell) {
		toSerialize["cell"] = o.Cell
	}
	if !IsNil(o.Gende) {
		toSerialize["gende"] = o.Gende
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableMerchantMenber struct {
	value *MerchantMenber
	isSet bool
}

func (v NullableMerchantMenber) Get() *MerchantMenber {
	return v.value
}

func (v *NullableMerchantMenber) Set(val *MerchantMenber) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantMenber) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantMenber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantMenber(val *MerchantMenber) *NullableMerchantMenber {
	return &NullableMerchantMenber{value: val, isSet: true}
}

func (v NullableMerchantMenber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantMenber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



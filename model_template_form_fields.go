/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateFormFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateFormFields{}

// TemplateFormFields struct for TemplateFormFields
type TemplateFormFields struct {
	// 开卡表单可填字段，可选字段选项不能与必填字段required重复
	Optional []string `json:"optional,omitempty"`
	// 开卡表单必填字段，必填字段必须有一个值，并且不能与可选字段optional里面重复
	Required []string `json:"required,omitempty"`
}

// NewTemplateFormFields instantiates a new TemplateFormFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateFormFields() *TemplateFormFields {
	this := TemplateFormFields{}
	return &this
}

// NewTemplateFormFieldsWithDefaults instantiates a new TemplateFormFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateFormFieldsWithDefaults() *TemplateFormFields {
	this := TemplateFormFields{}
	return &this
}

// GetOptional returns the Optional field value if set, zero value otherwise.
func (o *TemplateFormFields) GetOptional() []string {
	if o == nil || IsNil(o.Optional) {
		var ret []string
		return ret
	}
	return o.Optional
}

// GetOptionalOk returns a tuple with the Optional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFormFields) GetOptionalOk() ([]string, bool) {
	if o == nil || IsNil(o.Optional) {
		return nil, false
	}
	return o.Optional, true
}

// HasOptional returns a boolean if a field has been set.
func (o *TemplateFormFields) HasOptional() bool {
	if o != nil && !IsNil(o.Optional) {
		return true
	}

	return false
}

// SetOptional gets a reference to the given []string and assigns it to the Optional field.
func (o *TemplateFormFields) SetOptional(v []string) {
	o.Optional = v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *TemplateFormFields) GetRequired() []string {
	if o == nil || IsNil(o.Required) {
		var ret []string
		return ret
	}
	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFormFields) GetRequiredOk() ([]string, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *TemplateFormFields) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given []string and assigns it to the Required field.
func (o *TemplateFormFields) SetRequired(v []string) {
	o.Required = v
}

func (o TemplateFormFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateFormFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Optional) {
		toSerialize["optional"] = o.Optional
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	return toSerialize, nil
}

type NullableTemplateFormFields struct {
	value *TemplateFormFields
	isSet bool
}

func (v NullableTemplateFormFields) Get() *TemplateFormFields {
	return v.value
}

func (v *NullableTemplateFormFields) Set(val *TemplateFormFields) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateFormFields) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateFormFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateFormFields(val *TemplateFormFields) *NullableTemplateFormFields {
	return &NullableTemplateFormFields{value: val, isSet: true}
}

func (v NullableTemplateFormFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateFormFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EmployeeTitleDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmployeeTitleDTO{}

// EmployeeTitleDTO struct for EmployeeTitleDTO
type EmployeeTitleDTO struct {
	// 共同账户id,与enterprise_id两者必填其一
	AccountId *string `json:"account_id,omitempty"`
	// 创建人
	CreateBy *string `json:"create_by,omitempty"`
	// 企业域定义的员工id，与user_id两者必填其一
	EmployeeId *string `json:"employee_id,omitempty"`
	// 企业域定义的企业id，与account_id两者必填其一
	EnterpriseId *string `json:"enterprise_id,omitempty"`
	// 修改人
	ModifyBy *string `json:"modify_by,omitempty"`
	// 员工支付宝账号open_id,与employee_id两者必填其一
	OpenId *string `json:"open_id,omitempty"`
	// 抬头id
	TitleId *string `json:"title_id,omitempty"`
	// 关系标记
	TitleTag *string `json:"title_tag,omitempty"`
	// 员工支付宝账号2088,与employee_id两者必填其一
	UserId *string `json:"user_id,omitempty"`
}

// NewEmployeeTitleDTO instantiates a new EmployeeTitleDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmployeeTitleDTO() *EmployeeTitleDTO {
	this := EmployeeTitleDTO{}
	return &this
}

// NewEmployeeTitleDTOWithDefaults instantiates a new EmployeeTitleDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmployeeTitleDTOWithDefaults() *EmployeeTitleDTO {
	this := EmployeeTitleDTO{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *EmployeeTitleDTO) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCreateBy returns the CreateBy field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetCreateBy() string {
	if o == nil || IsNil(o.CreateBy) {
		var ret string
		return ret
	}
	return *o.CreateBy
}

// GetCreateByOk returns a tuple with the CreateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetCreateByOk() (*string, bool) {
	if o == nil || IsNil(o.CreateBy) {
		return nil, false
	}
	return o.CreateBy, true
}

// HasCreateBy returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasCreateBy() bool {
	if o != nil && !IsNil(o.CreateBy) {
		return true
	}

	return false
}

// SetCreateBy gets a reference to the given string and assigns it to the CreateBy field.
func (o *EmployeeTitleDTO) SetCreateBy(v string) {
	o.CreateBy = &v
}

// GetEmployeeId returns the EmployeeId field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetEmployeeId() string {
	if o == nil || IsNil(o.EmployeeId) {
		var ret string
		return ret
	}
	return *o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetEmployeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeId) {
		return nil, false
	}
	return o.EmployeeId, true
}

// HasEmployeeId returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasEmployeeId() bool {
	if o != nil && !IsNil(o.EmployeeId) {
		return true
	}

	return false
}

// SetEmployeeId gets a reference to the given string and assigns it to the EmployeeId field.
func (o *EmployeeTitleDTO) SetEmployeeId(v string) {
	o.EmployeeId = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetEnterpriseId() string {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret string
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetEnterpriseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given string and assigns it to the EnterpriseId field.
func (o *EmployeeTitleDTO) SetEnterpriseId(v string) {
	o.EnterpriseId = &v
}

// GetModifyBy returns the ModifyBy field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetModifyBy() string {
	if o == nil || IsNil(o.ModifyBy) {
		var ret string
		return ret
	}
	return *o.ModifyBy
}

// GetModifyByOk returns a tuple with the ModifyBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetModifyByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifyBy) {
		return nil, false
	}
	return o.ModifyBy, true
}

// HasModifyBy returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasModifyBy() bool {
	if o != nil && !IsNil(o.ModifyBy) {
		return true
	}

	return false
}

// SetModifyBy gets a reference to the given string and assigns it to the ModifyBy field.
func (o *EmployeeTitleDTO) SetModifyBy(v string) {
	o.ModifyBy = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *EmployeeTitleDTO) SetOpenId(v string) {
	o.OpenId = &v
}

// GetTitleId returns the TitleId field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetTitleId() string {
	if o == nil || IsNil(o.TitleId) {
		var ret string
		return ret
	}
	return *o.TitleId
}

// GetTitleIdOk returns a tuple with the TitleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetTitleIdOk() (*string, bool) {
	if o == nil || IsNil(o.TitleId) {
		return nil, false
	}
	return o.TitleId, true
}

// HasTitleId returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasTitleId() bool {
	if o != nil && !IsNil(o.TitleId) {
		return true
	}

	return false
}

// SetTitleId gets a reference to the given string and assigns it to the TitleId field.
func (o *EmployeeTitleDTO) SetTitleId(v string) {
	o.TitleId = &v
}

// GetTitleTag returns the TitleTag field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetTitleTag() string {
	if o == nil || IsNil(o.TitleTag) {
		var ret string
		return ret
	}
	return *o.TitleTag
}

// GetTitleTagOk returns a tuple with the TitleTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetTitleTagOk() (*string, bool) {
	if o == nil || IsNil(o.TitleTag) {
		return nil, false
	}
	return o.TitleTag, true
}

// HasTitleTag returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasTitleTag() bool {
	if o != nil && !IsNil(o.TitleTag) {
		return true
	}

	return false
}

// SetTitleTag gets a reference to the given string and assigns it to the TitleTag field.
func (o *EmployeeTitleDTO) SetTitleTag(v string) {
	o.TitleTag = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *EmployeeTitleDTO) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeTitleDTO) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *EmployeeTitleDTO) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *EmployeeTitleDTO) SetUserId(v string) {
	o.UserId = &v
}

func (o EmployeeTitleDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmployeeTitleDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.CreateBy) {
		toSerialize["create_by"] = o.CreateBy
	}
	if !IsNil(o.EmployeeId) {
		toSerialize["employee_id"] = o.EmployeeId
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if !IsNil(o.ModifyBy) {
		toSerialize["modify_by"] = o.ModifyBy
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.TitleId) {
		toSerialize["title_id"] = o.TitleId
	}
	if !IsNil(o.TitleTag) {
		toSerialize["title_tag"] = o.TitleTag
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableEmployeeTitleDTO struct {
	value *EmployeeTitleDTO
	isSet bool
}

func (v NullableEmployeeTitleDTO) Get() *EmployeeTitleDTO {
	return v.value
}

func (v *NullableEmployeeTitleDTO) Set(val *EmployeeTitleDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEmployeeTitleDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEmployeeTitleDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmployeeTitleDTO(val *EmployeeTitleDTO) *NullableEmployeeTitleDTO {
	return &NullableEmployeeTitleDTO{value: val, isSet: true}
}

func (v NullableEmployeeTitleDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmployeeTitleDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SpuAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpuAttribute{}

// SpuAttribute struct for SpuAttribute
type SpuAttribute struct {
	// 商品属性名
	Name *string `json:"name,omitempty"`
	// 商品属性值
	Value []string `json:"value,omitempty"`
}

// NewSpuAttribute instantiates a new SpuAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpuAttribute() *SpuAttribute {
	this := SpuAttribute{}
	return &this
}

// NewSpuAttributeWithDefaults instantiates a new SpuAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpuAttributeWithDefaults() *SpuAttribute {
	this := SpuAttribute{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SpuAttribute) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuAttribute) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SpuAttribute) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SpuAttribute) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SpuAttribute) GetValue() []string {
	if o == nil || IsNil(o.Value) {
		var ret []string
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpuAttribute) GetValueOk() ([]string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SpuAttribute) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []string and assigns it to the Value field.
func (o *SpuAttribute) SetValue(v []string) {
	o.Value = v
}

func (o SpuAttribute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpuAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableSpuAttribute struct {
	value *SpuAttribute
	isSet bool
}

func (v NullableSpuAttribute) Get() *SpuAttribute {
	return v.value
}

func (v *NullableSpuAttribute) Set(val *SpuAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableSpuAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableSpuAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpuAttribute(val *SpuAttribute) *NullableSpuAttribute {
	return &NullableSpuAttribute{value: val, isSet: true}
}

func (v NullableSpuAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpuAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



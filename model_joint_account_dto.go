/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the JointAccountDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JointAccountDTO{}

// JointAccountDTO struct for JointAccountDTO
type JointAccountDTO struct {
	// 共同账户ID
	AccountId *string `json:"account_id,omitempty"`
	// 共同账户账本名称
	AccountName *string `json:"account_name,omitempty"`
	// 账本创建人会员号
	UserId *string `json:"user_id,omitempty"`
}

// NewJointAccountDTO instantiates a new JointAccountDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJointAccountDTO() *JointAccountDTO {
	this := JointAccountDTO{}
	return &this
}

// NewJointAccountDTOWithDefaults instantiates a new JointAccountDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJointAccountDTOWithDefaults() *JointAccountDTO {
	this := JointAccountDTO{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *JointAccountDTO) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountDTO) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *JointAccountDTO) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *JointAccountDTO) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *JointAccountDTO) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountDTO) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *JointAccountDTO) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *JointAccountDTO) SetAccountName(v string) {
	o.AccountName = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *JointAccountDTO) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountDTO) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *JointAccountDTO) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *JointAccountDTO) SetUserId(v string) {
	o.UserId = &v
}

func (o JointAccountDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JointAccountDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableJointAccountDTO struct {
	value *JointAccountDTO
	isSet bool
}

func (v NullableJointAccountDTO) Get() *JointAccountDTO {
	return v.value
}

func (v *NullableJointAccountDTO) Set(val *JointAccountDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableJointAccountDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableJointAccountDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJointAccountDTO(val *JointAccountDTO) *NullableJointAccountDTO {
	return &NullableJointAccountDTO{value: val, isSet: true}
}

func (v NullableJointAccountDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJointAccountDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ReplyRecordResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplyRecordResponse{}

// ReplyRecordResponse struct for ReplyRecordResponse
type ReplyRecordResponse struct {
	// 回复内容
	Content *string `json:"content,omitempty"`
	// 回复时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 回复图片
	Images []string `json:"images,omitempty"`
	// 回复人名称
	ReplierName *string `json:"replier_name,omitempty"`
	// 用户：USER  商家：MERCHANT 系统：SYSTEM 审核小二：AUDITOR 政府单位：GOVERNMENT
	ReplierRole *string `json:"replier_role,omitempty"`
}

// NewReplyRecordResponse instantiates a new ReplyRecordResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplyRecordResponse() *ReplyRecordResponse {
	this := ReplyRecordResponse{}
	return &this
}

// NewReplyRecordResponseWithDefaults instantiates a new ReplyRecordResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplyRecordResponseWithDefaults() *ReplyRecordResponse {
	this := ReplyRecordResponse{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ReplyRecordResponse) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplyRecordResponse) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ReplyRecordResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ReplyRecordResponse) SetContent(v string) {
	o.Content = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *ReplyRecordResponse) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplyRecordResponse) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *ReplyRecordResponse) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *ReplyRecordResponse) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ReplyRecordResponse) GetImages() []string {
	if o == nil || IsNil(o.Images) {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplyRecordResponse) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ReplyRecordResponse) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *ReplyRecordResponse) SetImages(v []string) {
	o.Images = v
}

// GetReplierName returns the ReplierName field value if set, zero value otherwise.
func (o *ReplyRecordResponse) GetReplierName() string {
	if o == nil || IsNil(o.ReplierName) {
		var ret string
		return ret
	}
	return *o.ReplierName
}

// GetReplierNameOk returns a tuple with the ReplierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplyRecordResponse) GetReplierNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReplierName) {
		return nil, false
	}
	return o.ReplierName, true
}

// HasReplierName returns a boolean if a field has been set.
func (o *ReplyRecordResponse) HasReplierName() bool {
	if o != nil && !IsNil(o.ReplierName) {
		return true
	}

	return false
}

// SetReplierName gets a reference to the given string and assigns it to the ReplierName field.
func (o *ReplyRecordResponse) SetReplierName(v string) {
	o.ReplierName = &v
}

// GetReplierRole returns the ReplierRole field value if set, zero value otherwise.
func (o *ReplyRecordResponse) GetReplierRole() string {
	if o == nil || IsNil(o.ReplierRole) {
		var ret string
		return ret
	}
	return *o.ReplierRole
}

// GetReplierRoleOk returns a tuple with the ReplierRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplyRecordResponse) GetReplierRoleOk() (*string, bool) {
	if o == nil || IsNil(o.ReplierRole) {
		return nil, false
	}
	return o.ReplierRole, true
}

// HasReplierRole returns a boolean if a field has been set.
func (o *ReplyRecordResponse) HasReplierRole() bool {
	if o != nil && !IsNil(o.ReplierRole) {
		return true
	}

	return false
}

// SetReplierRole gets a reference to the given string and assigns it to the ReplierRole field.
func (o *ReplyRecordResponse) SetReplierRole(v string) {
	o.ReplierRole = &v
}

func (o ReplyRecordResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplyRecordResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.ReplierName) {
		toSerialize["replier_name"] = o.ReplierName
	}
	if !IsNil(o.ReplierRole) {
		toSerialize["replier_role"] = o.ReplierRole
	}
	return toSerialize, nil
}

type NullableReplyRecordResponse struct {
	value *ReplyRecordResponse
	isSet bool
}

func (v NullableReplyRecordResponse) Get() *ReplyRecordResponse {
	return v.value
}

func (v *NullableReplyRecordResponse) Set(val *ReplyRecordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReplyRecordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReplyRecordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplyRecordResponse(val *ReplyRecordResponse) *NullableReplyRecordResponse {
	return &NullableReplyRecordResponse{value: val, isSet: true}
}

func (v NullableReplyRecordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplyRecordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

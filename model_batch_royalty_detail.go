/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the BatchRoyaltyDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchRoyaltyDetail{}

// BatchRoyaltyDetail struct for BatchRoyaltyDetail
type BatchRoyaltyDetail struct {
	// 分账金额，单位元
	Amount *string `json:"amount,omitempty"`
	// 分账描述
	Desc *string `json:"desc,omitempty"`
	// 错误编码 BANK_CARD_ERROR：银行卡信息有误的场景，系统自动重试中 BANK_DISHONOR：银行退票
	ErrorCode *string `json:"error_code,omitempty"`
	// 错误描述
	ErrorDesc *string `json:"error_desc,omitempty"`
	// ACCEPT_SUCCESS：受理成功； SUCCESS：结算成功； FAIL：结算失败；FAIL_RETRY：失败重试。
	Status *string `json:"status,omitempty"`
	// 分账转入账户id。当分账账户id类型是cardSerialNo时，本参数为用户在支付宝绑定的卡编号；当分账账户id类型是userId时，本参数为用户的支付宝账号对应的支付宝唯一用户号；当分账账户id类型是loginName时，本参数为用户的支付宝登录号。
	TransInAccountId *string `json:"trans_in_account_id,omitempty"`
	// 分账转入账户id类型。 当settle_account_type 为bankCard时，本参数为cardSerialNo，表示分账账户id是银行卡编号; 当settle_account_type 为alipayBalance时，本参数为userId或者loginName，其中userId表示分账账户id是支付宝唯一用户号，loginName表示分账账户id是支付宝登录号。
	TransInAccountIdType *string `json:"trans_in_account_id_type,omitempty"`
	// 分账转入方的OpenId，OpenId是用户在应用（AppId）下的唯一用户标识。
	TransInAccountOpenId *string `json:"trans_in_account_open_id,omitempty"`
	// 分账账户类型。 bankCard: 分账账户为银行卡； alipayBalance: 分账账户为支付宝余额户
	TransInAccountType *string `json:"trans_in_account_type,omitempty"`
	// 分账转出主体账号。    当分账转出主体类型为SecondMerchant，本参数为二级商户的SecondMerchantID    当分账转出类型为Store，本参数为StoreID
	TransInEntityId *string `json:"trans_in_entity_id,omitempty"`
	// 分账转入主体类型。 SecondMerchant：分账转入主体为二级商户    Store: 结算门店
	TransInEntityType  *string      `json:"trans_in_entity_type,omitempty"`
	TransInSubMerchant *SubMerchant `json:"trans_in_sub_merchant,omitempty"`
	// 分账转出主体账号。    当分账转出主体类型为SecondMerchant，本参数为二级商户的SecondMerchantID    当分账转出类型为Store，本参数为StoreID
	TransOutEntityId *string `json:"trans_out_entity_id,omitempty"`
	// 分账转出主体类型。 SecondMerchant：结算主体为二级商户，Store：结算主体为门店。
	TransOutEntityType  *string      `json:"trans_out_entity_type,omitempty"`
	TransOutSubMerchant *SubMerchant `json:"trans_out_sub_merchant,omitempty"`
}

// NewBatchRoyaltyDetail instantiates a new BatchRoyaltyDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchRoyaltyDetail() *BatchRoyaltyDetail {
	this := BatchRoyaltyDetail{}
	return &this
}

// NewBatchRoyaltyDetailWithDefaults instantiates a new BatchRoyaltyDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchRoyaltyDetailWithDefaults() *BatchRoyaltyDetail {
	this := BatchRoyaltyDetail{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *BatchRoyaltyDetail) SetAmount(v string) {
	o.Amount = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *BatchRoyaltyDetail) SetDesc(v string) {
	o.Desc = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *BatchRoyaltyDetail) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorDesc returns the ErrorDesc field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetErrorDesc() string {
	if o == nil || IsNil(o.ErrorDesc) {
		var ret string
		return ret
	}
	return *o.ErrorDesc
}

// GetErrorDescOk returns a tuple with the ErrorDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetErrorDescOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDesc) {
		return nil, false
	}
	return o.ErrorDesc, true
}

// HasErrorDesc returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasErrorDesc() bool {
	if o != nil && !IsNil(o.ErrorDesc) {
		return true
	}

	return false
}

// SetErrorDesc gets a reference to the given string and assigns it to the ErrorDesc field.
func (o *BatchRoyaltyDetail) SetErrorDesc(v string) {
	o.ErrorDesc = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BatchRoyaltyDetail) SetStatus(v string) {
	o.Status = &v
}

// GetTransInAccountId returns the TransInAccountId field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInAccountId() string {
	if o == nil || IsNil(o.TransInAccountId) {
		var ret string
		return ret
	}
	return *o.TransInAccountId
}

// GetTransInAccountIdOk returns a tuple with the TransInAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountId) {
		return nil, false
	}
	return o.TransInAccountId, true
}

// HasTransInAccountId returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInAccountId() bool {
	if o != nil && !IsNil(o.TransInAccountId) {
		return true
	}

	return false
}

// SetTransInAccountId gets a reference to the given string and assigns it to the TransInAccountId field.
func (o *BatchRoyaltyDetail) SetTransInAccountId(v string) {
	o.TransInAccountId = &v
}

// GetTransInAccountIdType returns the TransInAccountIdType field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInAccountIdType() string {
	if o == nil || IsNil(o.TransInAccountIdType) {
		var ret string
		return ret
	}
	return *o.TransInAccountIdType
}

// GetTransInAccountIdTypeOk returns a tuple with the TransInAccountIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInAccountIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountIdType) {
		return nil, false
	}
	return o.TransInAccountIdType, true
}

// HasTransInAccountIdType returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInAccountIdType() bool {
	if o != nil && !IsNil(o.TransInAccountIdType) {
		return true
	}

	return false
}

// SetTransInAccountIdType gets a reference to the given string and assigns it to the TransInAccountIdType field.
func (o *BatchRoyaltyDetail) SetTransInAccountIdType(v string) {
	o.TransInAccountIdType = &v
}

// GetTransInAccountOpenId returns the TransInAccountOpenId field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInAccountOpenId() string {
	if o == nil || IsNil(o.TransInAccountOpenId) {
		var ret string
		return ret
	}
	return *o.TransInAccountOpenId
}

// GetTransInAccountOpenIdOk returns a tuple with the TransInAccountOpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInAccountOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountOpenId) {
		return nil, false
	}
	return o.TransInAccountOpenId, true
}

// HasTransInAccountOpenId returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInAccountOpenId() bool {
	if o != nil && !IsNil(o.TransInAccountOpenId) {
		return true
	}

	return false
}

// SetTransInAccountOpenId gets a reference to the given string and assigns it to the TransInAccountOpenId field.
func (o *BatchRoyaltyDetail) SetTransInAccountOpenId(v string) {
	o.TransInAccountOpenId = &v
}

// GetTransInAccountType returns the TransInAccountType field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInAccountType() string {
	if o == nil || IsNil(o.TransInAccountType) {
		var ret string
		return ret
	}
	return *o.TransInAccountType
}

// GetTransInAccountTypeOk returns a tuple with the TransInAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountType) {
		return nil, false
	}
	return o.TransInAccountType, true
}

// HasTransInAccountType returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInAccountType() bool {
	if o != nil && !IsNil(o.TransInAccountType) {
		return true
	}

	return false
}

// SetTransInAccountType gets a reference to the given string and assigns it to the TransInAccountType field.
func (o *BatchRoyaltyDetail) SetTransInAccountType(v string) {
	o.TransInAccountType = &v
}

// GetTransInEntityId returns the TransInEntityId field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInEntityId() string {
	if o == nil || IsNil(o.TransInEntityId) {
		var ret string
		return ret
	}
	return *o.TransInEntityId
}

// GetTransInEntityIdOk returns a tuple with the TransInEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransInEntityId) {
		return nil, false
	}
	return o.TransInEntityId, true
}

// HasTransInEntityId returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInEntityId() bool {
	if o != nil && !IsNil(o.TransInEntityId) {
		return true
	}

	return false
}

// SetTransInEntityId gets a reference to the given string and assigns it to the TransInEntityId field.
func (o *BatchRoyaltyDetail) SetTransInEntityId(v string) {
	o.TransInEntityId = &v
}

// GetTransInEntityType returns the TransInEntityType field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInEntityType() string {
	if o == nil || IsNil(o.TransInEntityType) {
		var ret string
		return ret
	}
	return *o.TransInEntityType
}

// GetTransInEntityTypeOk returns a tuple with the TransInEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInEntityType) {
		return nil, false
	}
	return o.TransInEntityType, true
}

// HasTransInEntityType returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInEntityType() bool {
	if o != nil && !IsNil(o.TransInEntityType) {
		return true
	}

	return false
}

// SetTransInEntityType gets a reference to the given string and assigns it to the TransInEntityType field.
func (o *BatchRoyaltyDetail) SetTransInEntityType(v string) {
	o.TransInEntityType = &v
}

// GetTransInSubMerchant returns the TransInSubMerchant field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransInSubMerchant() SubMerchant {
	if o == nil || IsNil(o.TransInSubMerchant) {
		var ret SubMerchant
		return ret
	}
	return *o.TransInSubMerchant
}

// GetTransInSubMerchantOk returns a tuple with the TransInSubMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransInSubMerchantOk() (*SubMerchant, bool) {
	if o == nil || IsNil(o.TransInSubMerchant) {
		return nil, false
	}
	return o.TransInSubMerchant, true
}

// HasTransInSubMerchant returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransInSubMerchant() bool {
	if o != nil && !IsNil(o.TransInSubMerchant) {
		return true
	}

	return false
}

// SetTransInSubMerchant gets a reference to the given SubMerchant and assigns it to the TransInSubMerchant field.
func (o *BatchRoyaltyDetail) SetTransInSubMerchant(v SubMerchant) {
	o.TransInSubMerchant = &v
}

// GetTransOutEntityId returns the TransOutEntityId field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransOutEntityId() string {
	if o == nil || IsNil(o.TransOutEntityId) {
		var ret string
		return ret
	}
	return *o.TransOutEntityId
}

// GetTransOutEntityIdOk returns a tuple with the TransOutEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransOutEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutEntityId) {
		return nil, false
	}
	return o.TransOutEntityId, true
}

// HasTransOutEntityId returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransOutEntityId() bool {
	if o != nil && !IsNil(o.TransOutEntityId) {
		return true
	}

	return false
}

// SetTransOutEntityId gets a reference to the given string and assigns it to the TransOutEntityId field.
func (o *BatchRoyaltyDetail) SetTransOutEntityId(v string) {
	o.TransOutEntityId = &v
}

// GetTransOutEntityType returns the TransOutEntityType field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransOutEntityType() string {
	if o == nil || IsNil(o.TransOutEntityType) {
		var ret string
		return ret
	}
	return *o.TransOutEntityType
}

// GetTransOutEntityTypeOk returns a tuple with the TransOutEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransOutEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutEntityType) {
		return nil, false
	}
	return o.TransOutEntityType, true
}

// HasTransOutEntityType returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransOutEntityType() bool {
	if o != nil && !IsNil(o.TransOutEntityType) {
		return true
	}

	return false
}

// SetTransOutEntityType gets a reference to the given string and assigns it to the TransOutEntityType field.
func (o *BatchRoyaltyDetail) SetTransOutEntityType(v string) {
	o.TransOutEntityType = &v
}

// GetTransOutSubMerchant returns the TransOutSubMerchant field value if set, zero value otherwise.
func (o *BatchRoyaltyDetail) GetTransOutSubMerchant() SubMerchant {
	if o == nil || IsNil(o.TransOutSubMerchant) {
		var ret SubMerchant
		return ret
	}
	return *o.TransOutSubMerchant
}

// GetTransOutSubMerchantOk returns a tuple with the TransOutSubMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchRoyaltyDetail) GetTransOutSubMerchantOk() (*SubMerchant, bool) {
	if o == nil || IsNil(o.TransOutSubMerchant) {
		return nil, false
	}
	return o.TransOutSubMerchant, true
}

// HasTransOutSubMerchant returns a boolean if a field has been set.
func (o *BatchRoyaltyDetail) HasTransOutSubMerchant() bool {
	if o != nil && !IsNil(o.TransOutSubMerchant) {
		return true
	}

	return false
}

// SetTransOutSubMerchant gets a reference to the given SubMerchant and assigns it to the TransOutSubMerchant field.
func (o *BatchRoyaltyDetail) SetTransOutSubMerchant(v SubMerchant) {
	o.TransOutSubMerchant = &v
}

func (o BatchRoyaltyDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchRoyaltyDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.ErrorDesc) {
		toSerialize["error_desc"] = o.ErrorDesc
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransInAccountId) {
		toSerialize["trans_in_account_id"] = o.TransInAccountId
	}
	if !IsNil(o.TransInAccountIdType) {
		toSerialize["trans_in_account_id_type"] = o.TransInAccountIdType
	}
	if !IsNil(o.TransInAccountOpenId) {
		toSerialize["trans_in_account_open_id"] = o.TransInAccountOpenId
	}
	if !IsNil(o.TransInAccountType) {
		toSerialize["trans_in_account_type"] = o.TransInAccountType
	}
	if !IsNil(o.TransInEntityId) {
		toSerialize["trans_in_entity_id"] = o.TransInEntityId
	}
	if !IsNil(o.TransInEntityType) {
		toSerialize["trans_in_entity_type"] = o.TransInEntityType
	}
	if !IsNil(o.TransInSubMerchant) {
		toSerialize["trans_in_sub_merchant"] = o.TransInSubMerchant
	}
	if !IsNil(o.TransOutEntityId) {
		toSerialize["trans_out_entity_id"] = o.TransOutEntityId
	}
	if !IsNil(o.TransOutEntityType) {
		toSerialize["trans_out_entity_type"] = o.TransOutEntityType
	}
	if !IsNil(o.TransOutSubMerchant) {
		toSerialize["trans_out_sub_merchant"] = o.TransOutSubMerchant
	}
	return toSerialize, nil
}

type NullableBatchRoyaltyDetail struct {
	value *BatchRoyaltyDetail
	isSet bool
}

func (v NullableBatchRoyaltyDetail) Get() *BatchRoyaltyDetail {
	return v.value
}

func (v *NullableBatchRoyaltyDetail) Set(val *BatchRoyaltyDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchRoyaltyDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchRoyaltyDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchRoyaltyDetail(val *BatchRoyaltyDetail) *NullableBatchRoyaltyDetail {
	return &NullableBatchRoyaltyDetail{value: val, isSet: true}
}

func (v NullableBatchRoyaltyDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchRoyaltyDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

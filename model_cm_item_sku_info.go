/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CmItemSkuInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmItemSkuInfo{}

// CmItemSkuInfo struct for CmItemSkuInfo
type CmItemSkuInfo struct {
	// 创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 更新时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 库存
	Inventory *int32 `json:"inventory,omitempty"`
	// 商品ID
	ItemId *string `json:"item_id,omitempty"`
	// 素材列表
	MaterialList []MaterialInfo `json:"material_list,omitempty"`
	// 标价，单位分
	OriginalPrice *int32 `json:"original_price,omitempty"`
	// 售价，单位分
	Price *int32 `json:"price,omitempty"`
	// 剩余库存
	RemainInventory *int32 `json:"remain_inventory,omitempty"`
	// 商品SKU ID
	SkuId *string `json:"sku_id,omitempty"`
	// SKU属性列表
	SkuPropertyList []ItemSkuPropertyInfo `json:"sku_property_list,omitempty"`
	// 商品SKU状态
	Status *string `json:"status,omitempty"`
}

// NewCmItemSkuInfo instantiates a new CmItemSkuInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmItemSkuInfo() *CmItemSkuInfo {
	this := CmItemSkuInfo{}
	return &this
}

// NewCmItemSkuInfoWithDefaults instantiates a new CmItemSkuInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmItemSkuInfoWithDefaults() *CmItemSkuInfo {
	this := CmItemSkuInfo{}
	return &this
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *CmItemSkuInfo) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *CmItemSkuInfo) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetInventory() int32 {
	if o == nil || IsNil(o.Inventory) {
		var ret int32
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetInventoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given int32 and assigns it to the Inventory field.
func (o *CmItemSkuInfo) SetInventory(v int32) {
	o.Inventory = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *CmItemSkuInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetMaterialList returns the MaterialList field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetMaterialList() []MaterialInfo {
	if o == nil || IsNil(o.MaterialList) {
		var ret []MaterialInfo
		return ret
	}
	return o.MaterialList
}

// GetMaterialListOk returns a tuple with the MaterialList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetMaterialListOk() ([]MaterialInfo, bool) {
	if o == nil || IsNil(o.MaterialList) {
		return nil, false
	}
	return o.MaterialList, true
}

// HasMaterialList returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasMaterialList() bool {
	if o != nil && !IsNil(o.MaterialList) {
		return true
	}

	return false
}

// SetMaterialList gets a reference to the given []MaterialInfo and assigns it to the MaterialList field.
func (o *CmItemSkuInfo) SetMaterialList(v []MaterialInfo) {
	o.MaterialList = v
}

// GetOriginalPrice returns the OriginalPrice field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetOriginalPrice() int32 {
	if o == nil || IsNil(o.OriginalPrice) {
		var ret int32
		return ret
	}
	return *o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetOriginalPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginalPrice) {
		return nil, false
	}
	return o.OriginalPrice, true
}

// HasOriginalPrice returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasOriginalPrice() bool {
	if o != nil && !IsNil(o.OriginalPrice) {
		return true
	}

	return false
}

// SetOriginalPrice gets a reference to the given int32 and assigns it to the OriginalPrice field.
func (o *CmItemSkuInfo) SetOriginalPrice(v int32) {
	o.OriginalPrice = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *CmItemSkuInfo) SetPrice(v int32) {
	o.Price = &v
}

// GetRemainInventory returns the RemainInventory field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetRemainInventory() int32 {
	if o == nil || IsNil(o.RemainInventory) {
		var ret int32
		return ret
	}
	return *o.RemainInventory
}

// GetRemainInventoryOk returns a tuple with the RemainInventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetRemainInventoryOk() (*int32, bool) {
	if o == nil || IsNil(o.RemainInventory) {
		return nil, false
	}
	return o.RemainInventory, true
}

// HasRemainInventory returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasRemainInventory() bool {
	if o != nil && !IsNil(o.RemainInventory) {
		return true
	}

	return false
}

// SetRemainInventory gets a reference to the given int32 and assigns it to the RemainInventory field.
func (o *CmItemSkuInfo) SetRemainInventory(v int32) {
	o.RemainInventory = &v
}

// GetSkuId returns the SkuId field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetSkuId() string {
	if o == nil || IsNil(o.SkuId) {
		var ret string
		return ret
	}
	return *o.SkuId
}

// GetSkuIdOk returns a tuple with the SkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetSkuIdOk() (*string, bool) {
	if o == nil || IsNil(o.SkuId) {
		return nil, false
	}
	return o.SkuId, true
}

// HasSkuId returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasSkuId() bool {
	if o != nil && !IsNil(o.SkuId) {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given string and assigns it to the SkuId field.
func (o *CmItemSkuInfo) SetSkuId(v string) {
	o.SkuId = &v
}

// GetSkuPropertyList returns the SkuPropertyList field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetSkuPropertyList() []ItemSkuPropertyInfo {
	if o == nil || IsNil(o.SkuPropertyList) {
		var ret []ItemSkuPropertyInfo
		return ret
	}
	return o.SkuPropertyList
}

// GetSkuPropertyListOk returns a tuple with the SkuPropertyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetSkuPropertyListOk() ([]ItemSkuPropertyInfo, bool) {
	if o == nil || IsNil(o.SkuPropertyList) {
		return nil, false
	}
	return o.SkuPropertyList, true
}

// HasSkuPropertyList returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasSkuPropertyList() bool {
	if o != nil && !IsNil(o.SkuPropertyList) {
		return true
	}

	return false
}

// SetSkuPropertyList gets a reference to the given []ItemSkuPropertyInfo and assigns it to the SkuPropertyList field.
func (o *CmItemSkuInfo) SetSkuPropertyList(v []ItemSkuPropertyInfo) {
	o.SkuPropertyList = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CmItemSkuInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmItemSkuInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CmItemSkuInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CmItemSkuInfo) SetStatus(v string) {
	o.Status = &v
}

func (o CmItemSkuInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmItemSkuInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.MaterialList) {
		toSerialize["material_list"] = o.MaterialList
	}
	if !IsNil(o.OriginalPrice) {
		toSerialize["original_price"] = o.OriginalPrice
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.RemainInventory) {
		toSerialize["remain_inventory"] = o.RemainInventory
	}
	if !IsNil(o.SkuId) {
		toSerialize["sku_id"] = o.SkuId
	}
	if !IsNil(o.SkuPropertyList) {
		toSerialize["sku_property_list"] = o.SkuPropertyList
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCmItemSkuInfo struct {
	value *CmItemSkuInfo
	isSet bool
}

func (v NullableCmItemSkuInfo) Get() *CmItemSkuInfo {
	return v.value
}

func (v *NullableCmItemSkuInfo) Set(val *CmItemSkuInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCmItemSkuInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCmItemSkuInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmItemSkuInfo(val *CmItemSkuInfo) *NullableCmItemSkuInfo {
	return &NullableCmItemSkuInfo{value: val, isSet: true}
}

func (v NullableCmItemSkuInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmItemSkuInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



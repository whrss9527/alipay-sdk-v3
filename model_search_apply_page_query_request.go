/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchApplyPageQueryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchApplyPageQueryRequest{}

// SearchApplyPageQueryRequest struct for SearchApplyPageQueryRequest
type SearchApplyPageQueryRequest struct {
	// 申请类型 BASE：基础信息， BRAND_BOX：品牌直达，SERVICE_BOX服务直达
	ApplyType *string `json:"apply_type,omitempty"`
	// 筛选状态数组 AUDIT AGREE REJECT CANCEL EDIT
	AuditStatusList []string `json:"audit_status_list,omitempty"`
	// 类目编码
	CategoryCode *string `json:"category_code,omitempty"`
	// 服务名称
	Name *string `json:"name,omitempty"`
	// 当前页码
	PageNum *string `json:"page_num,omitempty"`
	// 页面的显示记录条数
	PageSize *string `json:"page_size,omitempty"`
	// 服务code
	ServiceCode *string `json:"service_code,omitempty"`
	// 小程序appid
	ServiceId *string `json:"service_id,omitempty"`
	// 起始记录，起始：0
	StartRow *string `json:"start_row,omitempty"`
	// 二级服务code
	SubServiceCode *string `json:"sub_service_code,omitempty"`
}

// NewSearchApplyPageQueryRequest instantiates a new SearchApplyPageQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchApplyPageQueryRequest() *SearchApplyPageQueryRequest {
	this := SearchApplyPageQueryRequest{}
	return &this
}

// NewSearchApplyPageQueryRequestWithDefaults instantiates a new SearchApplyPageQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchApplyPageQueryRequestWithDefaults() *SearchApplyPageQueryRequest {
	this := SearchApplyPageQueryRequest{}
	return &this
}

// GetApplyType returns the ApplyType field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetApplyType() string {
	if o == nil || IsNil(o.ApplyType) {
		var ret string
		return ret
	}
	return *o.ApplyType
}

// GetApplyTypeOk returns a tuple with the ApplyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetApplyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApplyType) {
		return nil, false
	}
	return o.ApplyType, true
}

// HasApplyType returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasApplyType() bool {
	if o != nil && !IsNil(o.ApplyType) {
		return true
	}

	return false
}

// SetApplyType gets a reference to the given string and assigns it to the ApplyType field.
func (o *SearchApplyPageQueryRequest) SetApplyType(v string) {
	o.ApplyType = &v
}

// GetAuditStatusList returns the AuditStatusList field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetAuditStatusList() []string {
	if o == nil || IsNil(o.AuditStatusList) {
		var ret []string
		return ret
	}
	return o.AuditStatusList
}

// GetAuditStatusListOk returns a tuple with the AuditStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetAuditStatusListOk() ([]string, bool) {
	if o == nil || IsNil(o.AuditStatusList) {
		return nil, false
	}
	return o.AuditStatusList, true
}

// HasAuditStatusList returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasAuditStatusList() bool {
	if o != nil && !IsNil(o.AuditStatusList) {
		return true
	}

	return false
}

// SetAuditStatusList gets a reference to the given []string and assigns it to the AuditStatusList field.
func (o *SearchApplyPageQueryRequest) SetAuditStatusList(v []string) {
	o.AuditStatusList = v
}

// GetCategoryCode returns the CategoryCode field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetCategoryCode() string {
	if o == nil || IsNil(o.CategoryCode) {
		var ret string
		return ret
	}
	return *o.CategoryCode
}

// GetCategoryCodeOk returns a tuple with the CategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetCategoryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryCode) {
		return nil, false
	}
	return o.CategoryCode, true
}

// HasCategoryCode returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasCategoryCode() bool {
	if o != nil && !IsNil(o.CategoryCode) {
		return true
	}

	return false
}

// SetCategoryCode gets a reference to the given string and assigns it to the CategoryCode field.
func (o *SearchApplyPageQueryRequest) SetCategoryCode(v string) {
	o.CategoryCode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchApplyPageQueryRequest) SetName(v string) {
	o.Name = &v
}

// GetPageNum returns the PageNum field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetPageNum() string {
	if o == nil || IsNil(o.PageNum) {
		var ret string
		return ret
	}
	return *o.PageNum
}

// GetPageNumOk returns a tuple with the PageNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetPageNumOk() (*string, bool) {
	if o == nil || IsNil(o.PageNum) {
		return nil, false
	}
	return o.PageNum, true
}

// HasPageNum returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasPageNum() bool {
	if o != nil && !IsNil(o.PageNum) {
		return true
	}

	return false
}

// SetPageNum gets a reference to the given string and assigns it to the PageNum field.
func (o *SearchApplyPageQueryRequest) SetPageNum(v string) {
	o.PageNum = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetPageSize() string {
	if o == nil || IsNil(o.PageSize) {
		var ret string
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetPageSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given string and assigns it to the PageSize field.
func (o *SearchApplyPageQueryRequest) SetPageSize(v string) {
	o.PageSize = &v
}

// GetServiceCode returns the ServiceCode field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetServiceCode() string {
	if o == nil || IsNil(o.ServiceCode) {
		var ret string
		return ret
	}
	return *o.ServiceCode
}

// GetServiceCodeOk returns a tuple with the ServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetServiceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceCode) {
		return nil, false
	}
	return o.ServiceCode, true
}

// HasServiceCode returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasServiceCode() bool {
	if o != nil && !IsNil(o.ServiceCode) {
		return true
	}

	return false
}

// SetServiceCode gets a reference to the given string and assigns it to the ServiceCode field.
func (o *SearchApplyPageQueryRequest) SetServiceCode(v string) {
	o.ServiceCode = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *SearchApplyPageQueryRequest) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetStartRow returns the StartRow field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetStartRow() string {
	if o == nil || IsNil(o.StartRow) {
		var ret string
		return ret
	}
	return *o.StartRow
}

// GetStartRowOk returns a tuple with the StartRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetStartRowOk() (*string, bool) {
	if o == nil || IsNil(o.StartRow) {
		return nil, false
	}
	return o.StartRow, true
}

// HasStartRow returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasStartRow() bool {
	if o != nil && !IsNil(o.StartRow) {
		return true
	}

	return false
}

// SetStartRow gets a reference to the given string and assigns it to the StartRow field.
func (o *SearchApplyPageQueryRequest) SetStartRow(v string) {
	o.StartRow = &v
}

// GetSubServiceCode returns the SubServiceCode field value if set, zero value otherwise.
func (o *SearchApplyPageQueryRequest) GetSubServiceCode() string {
	if o == nil || IsNil(o.SubServiceCode) {
		var ret string
		return ret
	}
	return *o.SubServiceCode
}

// GetSubServiceCodeOk returns a tuple with the SubServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchApplyPageQueryRequest) GetSubServiceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SubServiceCode) {
		return nil, false
	}
	return o.SubServiceCode, true
}

// HasSubServiceCode returns a boolean if a field has been set.
func (o *SearchApplyPageQueryRequest) HasSubServiceCode() bool {
	if o != nil && !IsNil(o.SubServiceCode) {
		return true
	}

	return false
}

// SetSubServiceCode gets a reference to the given string and assigns it to the SubServiceCode field.
func (o *SearchApplyPageQueryRequest) SetSubServiceCode(v string) {
	o.SubServiceCode = &v
}

func (o SearchApplyPageQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchApplyPageQueryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplyType) {
		toSerialize["apply_type"] = o.ApplyType
	}
	if !IsNil(o.AuditStatusList) {
		toSerialize["audit_status_list"] = o.AuditStatusList
	}
	if !IsNil(o.CategoryCode) {
		toSerialize["category_code"] = o.CategoryCode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PageNum) {
		toSerialize["page_num"] = o.PageNum
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.ServiceCode) {
		toSerialize["service_code"] = o.ServiceCode
	}
	if !IsNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !IsNil(o.StartRow) {
		toSerialize["start_row"] = o.StartRow
	}
	if !IsNil(o.SubServiceCode) {
		toSerialize["sub_service_code"] = o.SubServiceCode
	}
	return toSerialize, nil
}

type NullableSearchApplyPageQueryRequest struct {
	value *SearchApplyPageQueryRequest
	isSet bool
}

func (v NullableSearchApplyPageQueryRequest) Get() *SearchApplyPageQueryRequest {
	return v.value
}

func (v *NullableSearchApplyPageQueryRequest) Set(val *SearchApplyPageQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchApplyPageQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchApplyPageQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchApplyPageQueryRequest(val *SearchApplyPageQueryRequest) *NullableSearchApplyPageQueryRequest {
	return &NullableSearchApplyPageQueryRequest{value: val, isSet: true}
}

func (v NullableSearchApplyPageQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchApplyPageQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



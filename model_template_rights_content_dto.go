/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateRightsContentDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateRightsContentDTO{}

// TemplateRightsContentDTO struct for TemplateRightsContentDTO
type TemplateRightsContentDTO struct {
	// 权益内容详情
	Detail *string `json:"detail,omitempty"`
	// 权益icon图片Id（目前用于开卡授权页使用），通过接口（alipay.offline.material.image.upload）上传图片
	LogoId *string `json:"logo_id,omitempty"`
	// 权益内容标题
	Title *string `json:"title,omitempty"`
}

// NewTemplateRightsContentDTO instantiates a new TemplateRightsContentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateRightsContentDTO() *TemplateRightsContentDTO {
	this := TemplateRightsContentDTO{}
	return &this
}

// NewTemplateRightsContentDTOWithDefaults instantiates a new TemplateRightsContentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateRightsContentDTOWithDefaults() *TemplateRightsContentDTO {
	this := TemplateRightsContentDTO{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *TemplateRightsContentDTO) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRightsContentDTO) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *TemplateRightsContentDTO) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *TemplateRightsContentDTO) SetDetail(v string) {
	o.Detail = &v
}

// GetLogoId returns the LogoId field value if set, zero value otherwise.
func (o *TemplateRightsContentDTO) GetLogoId() string {
	if o == nil || IsNil(o.LogoId) {
		var ret string
		return ret
	}
	return *o.LogoId
}

// GetLogoIdOk returns a tuple with the LogoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRightsContentDTO) GetLogoIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogoId) {
		return nil, false
	}
	return o.LogoId, true
}

// HasLogoId returns a boolean if a field has been set.
func (o *TemplateRightsContentDTO) HasLogoId() bool {
	if o != nil && !IsNil(o.LogoId) {
		return true
	}

	return false
}

// SetLogoId gets a reference to the given string and assigns it to the LogoId field.
func (o *TemplateRightsContentDTO) SetLogoId(v string) {
	o.LogoId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TemplateRightsContentDTO) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRightsContentDTO) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TemplateRightsContentDTO) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TemplateRightsContentDTO) SetTitle(v string) {
	o.Title = &v
}

func (o TemplateRightsContentDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateRightsContentDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.LogoId) {
		toSerialize["logo_id"] = o.LogoId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableTemplateRightsContentDTO struct {
	value *TemplateRightsContentDTO
	isSet bool
}

func (v NullableTemplateRightsContentDTO) Get() *TemplateRightsContentDTO {
	return v.value
}

func (v *NullableTemplateRightsContentDTO) Set(val *TemplateRightsContentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateRightsContentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateRightsContentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateRightsContentDTO(val *TemplateRightsContentDTO) *NullableTemplateRightsContentDTO {
	return &NullableTemplateRightsContentDTO{value: val, isSet: true}
}

func (v NullableTemplateRightsContentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateRightsContentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



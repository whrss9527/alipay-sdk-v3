/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ProductInviteStatusInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductInviteStatusInfo{}

// ProductInviteStatusInfo struct for ProductInviteStatusInfo
type ProductInviteStatusInfo struct {
	// 产品编码
	ProductCode *string `json:"product_code,omitempty"`
	// 产品名称
	ProductName *string `json:"product_name,omitempty"`
	// NONE：未签约，表示还没有签约该产品 MERCHANT_AUDITING：审核中，已经有合约在审核中，请等待审核完成 MERCHANT_CONFIRM_SUCCESS：已生效，表示合约已经生效，不需要再签约了 MERCHANT_APPLY_ORDER_CANCELED：审核未通过
	Status *string `json:"status,omitempty"`
}

// NewProductInviteStatusInfo instantiates a new ProductInviteStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductInviteStatusInfo() *ProductInviteStatusInfo {
	this := ProductInviteStatusInfo{}
	return &this
}

// NewProductInviteStatusInfoWithDefaults instantiates a new ProductInviteStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductInviteStatusInfoWithDefaults() *ProductInviteStatusInfo {
	this := ProductInviteStatusInfo{}
	return &this
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *ProductInviteStatusInfo) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInviteStatusInfo) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *ProductInviteStatusInfo) HasProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *ProductInviteStatusInfo) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *ProductInviteStatusInfo) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInviteStatusInfo) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *ProductInviteStatusInfo) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *ProductInviteStatusInfo) SetProductName(v string) {
	o.ProductName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductInviteStatusInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInviteStatusInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductInviteStatusInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProductInviteStatusInfo) SetStatus(v string) {
	o.Status = &v
}

func (o ProductInviteStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductInviteStatusInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductCode) {
		toSerialize["product_code"] = o.ProductCode
	}
	if !IsNil(o.ProductName) {
		toSerialize["product_name"] = o.ProductName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableProductInviteStatusInfo struct {
	value *ProductInviteStatusInfo
	isSet bool
}

func (v NullableProductInviteStatusInfo) Get() *ProductInviteStatusInfo {
	return v.value
}

func (v *NullableProductInviteStatusInfo) Set(val *ProductInviteStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProductInviteStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProductInviteStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductInviteStatusInfo(val *ProductInviteStatusInfo) *NullableProductInviteStatusInfo {
	return &NullableProductInviteStatusInfo{value: val, isSet: true}
}

func (v NullableProductInviteStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductInviteStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

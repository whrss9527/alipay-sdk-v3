/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the MiniPackageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MiniPackageInfo{}

// MiniPackageInfo struct for MiniPackageInfo
type MiniPackageInfo struct {
	// 功能包文档地址
	DocUrl *string `json:"doc_url,omitempty"`
	// 功能包描述
	PackageDesc *string `json:"package_desc,omitempty"`
	// 功能包名称
	PackageName *string `json:"package_name,omitempty"`
	// 功能包开通方式
	PackageOpenType *string `json:"package_open_type,omitempty"`
	// 功能包签约状态
	Status *string `json:"status,omitempty"`
}

// NewMiniPackageInfo instantiates a new MiniPackageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiniPackageInfo() *MiniPackageInfo {
	this := MiniPackageInfo{}
	return &this
}

// NewMiniPackageInfoWithDefaults instantiates a new MiniPackageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiniPackageInfoWithDefaults() *MiniPackageInfo {
	this := MiniPackageInfo{}
	return &this
}

// GetDocUrl returns the DocUrl field value if set, zero value otherwise.
func (o *MiniPackageInfo) GetDocUrl() string {
	if o == nil || IsNil(o.DocUrl) {
		var ret string
		return ret
	}
	return *o.DocUrl
}

// GetDocUrlOk returns a tuple with the DocUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniPackageInfo) GetDocUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DocUrl) {
		return nil, false
	}
	return o.DocUrl, true
}

// HasDocUrl returns a boolean if a field has been set.
func (o *MiniPackageInfo) HasDocUrl() bool {
	if o != nil && !IsNil(o.DocUrl) {
		return true
	}

	return false
}

// SetDocUrl gets a reference to the given string and assigns it to the DocUrl field.
func (o *MiniPackageInfo) SetDocUrl(v string) {
	o.DocUrl = &v
}

// GetPackageDesc returns the PackageDesc field value if set, zero value otherwise.
func (o *MiniPackageInfo) GetPackageDesc() string {
	if o == nil || IsNil(o.PackageDesc) {
		var ret string
		return ret
	}
	return *o.PackageDesc
}

// GetPackageDescOk returns a tuple with the PackageDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniPackageInfo) GetPackageDescOk() (*string, bool) {
	if o == nil || IsNil(o.PackageDesc) {
		return nil, false
	}
	return o.PackageDesc, true
}

// HasPackageDesc returns a boolean if a field has been set.
func (o *MiniPackageInfo) HasPackageDesc() bool {
	if o != nil && !IsNil(o.PackageDesc) {
		return true
	}

	return false
}

// SetPackageDesc gets a reference to the given string and assigns it to the PackageDesc field.
func (o *MiniPackageInfo) SetPackageDesc(v string) {
	o.PackageDesc = &v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise.
func (o *MiniPackageInfo) GetPackageName() string {
	if o == nil || IsNil(o.PackageName) {
		var ret string
		return ret
	}
	return *o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniPackageInfo) GetPackageNameOk() (*string, bool) {
	if o == nil || IsNil(o.PackageName) {
		return nil, false
	}
	return o.PackageName, true
}

// HasPackageName returns a boolean if a field has been set.
func (o *MiniPackageInfo) HasPackageName() bool {
	if o != nil && !IsNil(o.PackageName) {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given string and assigns it to the PackageName field.
func (o *MiniPackageInfo) SetPackageName(v string) {
	o.PackageName = &v
}

// GetPackageOpenType returns the PackageOpenType field value if set, zero value otherwise.
func (o *MiniPackageInfo) GetPackageOpenType() string {
	if o == nil || IsNil(o.PackageOpenType) {
		var ret string
		return ret
	}
	return *o.PackageOpenType
}

// GetPackageOpenTypeOk returns a tuple with the PackageOpenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniPackageInfo) GetPackageOpenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PackageOpenType) {
		return nil, false
	}
	return o.PackageOpenType, true
}

// HasPackageOpenType returns a boolean if a field has been set.
func (o *MiniPackageInfo) HasPackageOpenType() bool {
	if o != nil && !IsNil(o.PackageOpenType) {
		return true
	}

	return false
}

// SetPackageOpenType gets a reference to the given string and assigns it to the PackageOpenType field.
func (o *MiniPackageInfo) SetPackageOpenType(v string) {
	o.PackageOpenType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MiniPackageInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniPackageInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MiniPackageInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MiniPackageInfo) SetStatus(v string) {
	o.Status = &v
}

func (o MiniPackageInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MiniPackageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocUrl) {
		toSerialize["doc_url"] = o.DocUrl
	}
	if !IsNil(o.PackageDesc) {
		toSerialize["package_desc"] = o.PackageDesc
	}
	if !IsNil(o.PackageName) {
		toSerialize["package_name"] = o.PackageName
	}
	if !IsNil(o.PackageOpenType) {
		toSerialize["package_open_type"] = o.PackageOpenType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableMiniPackageInfo struct {
	value *MiniPackageInfo
	isSet bool
}

func (v NullableMiniPackageInfo) Get() *MiniPackageInfo {
	return v.value
}

func (v *NullableMiniPackageInfo) Set(val *MiniPackageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMiniPackageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMiniPackageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiniPackageInfo(val *MiniPackageInfo) *NullableMiniPackageInfo {
	return &NullableMiniPackageInfo{value: val, isSet: true}
}

func (v NullableMiniPackageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiniPackageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

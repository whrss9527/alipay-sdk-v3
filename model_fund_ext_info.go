/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the FundExtInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FundExtInfo{}

// FundExtInfo struct for FundExtInfo
type FundExtInfo struct {
	// 出资主体账号，fund_identity_type是ALIPAY_USER_ID填支付宝会员ID（2088开头）； 是ALIPAY_LOGON_ID 填支付宝登录号
	FundIdentity *string `json:"fund_identity,omitempty"`
	// 出资主体账号类型，目前支持如下类型： 1、ALIPAY_USER_ID 支付宝的会员ID 2、ALIPAY_LOGON_ID：支付宝登录号，支持邮箱和手机号格式
	FundIdentityType *string `json:"fund_identity_type,omitempty"`
}

// NewFundExtInfo instantiates a new FundExtInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundExtInfo() *FundExtInfo {
	this := FundExtInfo{}
	return &this
}

// NewFundExtInfoWithDefaults instantiates a new FundExtInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundExtInfoWithDefaults() *FundExtInfo {
	this := FundExtInfo{}
	return &this
}

// GetFundIdentity returns the FundIdentity field value if set, zero value otherwise.
func (o *FundExtInfo) GetFundIdentity() string {
	if o == nil || IsNil(o.FundIdentity) {
		var ret string
		return ret
	}
	return *o.FundIdentity
}

// GetFundIdentityOk returns a tuple with the FundIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundExtInfo) GetFundIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.FundIdentity) {
		return nil, false
	}
	return o.FundIdentity, true
}

// HasFundIdentity returns a boolean if a field has been set.
func (o *FundExtInfo) HasFundIdentity() bool {
	if o != nil && !IsNil(o.FundIdentity) {
		return true
	}

	return false
}

// SetFundIdentity gets a reference to the given string and assigns it to the FundIdentity field.
func (o *FundExtInfo) SetFundIdentity(v string) {
	o.FundIdentity = &v
}

// GetFundIdentityType returns the FundIdentityType field value if set, zero value otherwise.
func (o *FundExtInfo) GetFundIdentityType() string {
	if o == nil || IsNil(o.FundIdentityType) {
		var ret string
		return ret
	}
	return *o.FundIdentityType
}

// GetFundIdentityTypeOk returns a tuple with the FundIdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundExtInfo) GetFundIdentityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FundIdentityType) {
		return nil, false
	}
	return o.FundIdentityType, true
}

// HasFundIdentityType returns a boolean if a field has been set.
func (o *FundExtInfo) HasFundIdentityType() bool {
	if o != nil && !IsNil(o.FundIdentityType) {
		return true
	}

	return false
}

// SetFundIdentityType gets a reference to the given string and assigns it to the FundIdentityType field.
func (o *FundExtInfo) SetFundIdentityType(v string) {
	o.FundIdentityType = &v
}

func (o FundExtInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FundExtInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FundIdentity) {
		toSerialize["fund_identity"] = o.FundIdentity
	}
	if !IsNil(o.FundIdentityType) {
		toSerialize["fund_identity_type"] = o.FundIdentityType
	}
	return toSerialize, nil
}

type NullableFundExtInfo struct {
	value *FundExtInfo
	isSet bool
}

func (v NullableFundExtInfo) Get() *FundExtInfo {
	return v.value
}

func (v *NullableFundExtInfo) Set(val *FundExtInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFundExtInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFundExtInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundExtInfo(val *FundExtInfo) *NullableFundExtInfo {
	return &NullableFundExtInfo{value: val, isSet: true}
}

func (v NullableFundExtInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundExtInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

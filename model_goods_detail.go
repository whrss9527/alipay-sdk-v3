/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GoodsDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsDetail{}

// GoodsDetail struct for GoodsDetail
type GoodsDetail struct {
	// 支付宝定义的统一商品编号
	AlipayGoodsId *string `json:"alipay_goods_id,omitempty"`
	// 商品描述信息
	Body *string `json:"body,omitempty"`
	// 商品类目树，从商品类目根节点到叶子节点的类目id组成，类目id值使用|分割
	CategoriesTree *string `json:"categories_tree,omitempty"`
	// 商品类目
	GoodsCategory *string `json:"goods_category,omitempty"`
	// 商品的编号，该参数传入支付券上绑定商品goods_id, 倘若无支付券需要消费，该字段传入商品最小粒度的商品ID（如：若商品有sku粒度，则传商户sku粒度的ID）
	GoodsId *string `json:"goods_id,omitempty"`
	// 商品名称
	GoodsName *string `json:"goods_name,omitempty"`
	// 商家侧小程序商品ID，指商家提报给小程序商品库的商品。当前接口的extend_params.trade_component_order_id字段不为空时该字段必填，且与交易组件订单参数保持一致。了解小程序商品请参考：<a href=\"https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7\">https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7</a>
	OutItemId *string `json:"out_item_id,omitempty"`
	// 商家侧小程序商品ID，指商家提报给小程序商品库的商品。当前接口的extend_params.trade_component_order_id字段不为空时该字段必填，且与交易组件订单参数保持一致。了解小程序商品请参考：<a target=\"_blank\" href=\"https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7\" >https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7</a>
	OutSkuId *string `json:"out_sku_id,omitempty"`
	// 商品单价，单位为元
	Price *string `json:"price,omitempty"`
	// 商品数量
	Quantity *int32 `json:"quantity,omitempty"`
	// 商品的展示地址
	ShowUrl *string `json:"show_url,omitempty"`
}

// NewGoodsDetail instantiates a new GoodsDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsDetail() *GoodsDetail {
	this := GoodsDetail{}
	return &this
}

// NewGoodsDetailWithDefaults instantiates a new GoodsDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsDetailWithDefaults() *GoodsDetail {
	this := GoodsDetail{}
	return &this
}

// GetAlipayGoodsId returns the AlipayGoodsId field value if set, zero value otherwise.
func (o *GoodsDetail) GetAlipayGoodsId() string {
	if o == nil || IsNil(o.AlipayGoodsId) {
		var ret string
		return ret
	}
	return *o.AlipayGoodsId
}

// GetAlipayGoodsIdOk returns a tuple with the AlipayGoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetAlipayGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlipayGoodsId) {
		return nil, false
	}
	return o.AlipayGoodsId, true
}

// HasAlipayGoodsId returns a boolean if a field has been set.
func (o *GoodsDetail) HasAlipayGoodsId() bool {
	if o != nil && !IsNil(o.AlipayGoodsId) {
		return true
	}

	return false
}

// SetAlipayGoodsId gets a reference to the given string and assigns it to the AlipayGoodsId field.
func (o *GoodsDetail) SetAlipayGoodsId(v string) {
	o.AlipayGoodsId = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *GoodsDetail) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *GoodsDetail) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *GoodsDetail) SetBody(v string) {
	o.Body = &v
}

// GetCategoriesTree returns the CategoriesTree field value if set, zero value otherwise.
func (o *GoodsDetail) GetCategoriesTree() string {
	if o == nil || IsNil(o.CategoriesTree) {
		var ret string
		return ret
	}
	return *o.CategoriesTree
}

// GetCategoriesTreeOk returns a tuple with the CategoriesTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetCategoriesTreeOk() (*string, bool) {
	if o == nil || IsNil(o.CategoriesTree) {
		return nil, false
	}
	return o.CategoriesTree, true
}

// HasCategoriesTree returns a boolean if a field has been set.
func (o *GoodsDetail) HasCategoriesTree() bool {
	if o != nil && !IsNil(o.CategoriesTree) {
		return true
	}

	return false
}

// SetCategoriesTree gets a reference to the given string and assigns it to the CategoriesTree field.
func (o *GoodsDetail) SetCategoriesTree(v string) {
	o.CategoriesTree = &v
}

// GetGoodsCategory returns the GoodsCategory field value if set, zero value otherwise.
func (o *GoodsDetail) GetGoodsCategory() string {
	if o == nil || IsNil(o.GoodsCategory) {
		var ret string
		return ret
	}
	return *o.GoodsCategory
}

// GetGoodsCategoryOk returns a tuple with the GoodsCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetGoodsCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsCategory) {
		return nil, false
	}
	return o.GoodsCategory, true
}

// HasGoodsCategory returns a boolean if a field has been set.
func (o *GoodsDetail) HasGoodsCategory() bool {
	if o != nil && !IsNil(o.GoodsCategory) {
		return true
	}

	return false
}

// SetGoodsCategory gets a reference to the given string and assigns it to the GoodsCategory field.
func (o *GoodsDetail) SetGoodsCategory(v string) {
	o.GoodsCategory = &v
}

// GetGoodsId returns the GoodsId field value if set, zero value otherwise.
func (o *GoodsDetail) GetGoodsId() string {
	if o == nil || IsNil(o.GoodsId) {
		var ret string
		return ret
	}
	return *o.GoodsId
}

// GetGoodsIdOk returns a tuple with the GoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsId) {
		return nil, false
	}
	return o.GoodsId, true
}

// HasGoodsId returns a boolean if a field has been set.
func (o *GoodsDetail) HasGoodsId() bool {
	if o != nil && !IsNil(o.GoodsId) {
		return true
	}

	return false
}

// SetGoodsId gets a reference to the given string and assigns it to the GoodsId field.
func (o *GoodsDetail) SetGoodsId(v string) {
	o.GoodsId = &v
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *GoodsDetail) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *GoodsDetail) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *GoodsDetail) SetGoodsName(v string) {
	o.GoodsName = &v
}

// GetOutItemId returns the OutItemId field value if set, zero value otherwise.
func (o *GoodsDetail) GetOutItemId() string {
	if o == nil || IsNil(o.OutItemId) {
		var ret string
		return ret
	}
	return *o.OutItemId
}

// GetOutItemIdOk returns a tuple with the OutItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetOutItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutItemId) {
		return nil, false
	}
	return o.OutItemId, true
}

// HasOutItemId returns a boolean if a field has been set.
func (o *GoodsDetail) HasOutItemId() bool {
	if o != nil && !IsNil(o.OutItemId) {
		return true
	}

	return false
}

// SetOutItemId gets a reference to the given string and assigns it to the OutItemId field.
func (o *GoodsDetail) SetOutItemId(v string) {
	o.OutItemId = &v
}

// GetOutSkuId returns the OutSkuId field value if set, zero value otherwise.
func (o *GoodsDetail) GetOutSkuId() string {
	if o == nil || IsNil(o.OutSkuId) {
		var ret string
		return ret
	}
	return *o.OutSkuId
}

// GetOutSkuIdOk returns a tuple with the OutSkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetOutSkuIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutSkuId) {
		return nil, false
	}
	return o.OutSkuId, true
}

// HasOutSkuId returns a boolean if a field has been set.
func (o *GoodsDetail) HasOutSkuId() bool {
	if o != nil && !IsNil(o.OutSkuId) {
		return true
	}

	return false
}

// SetOutSkuId gets a reference to the given string and assigns it to the OutSkuId field.
func (o *GoodsDetail) SetOutSkuId(v string) {
	o.OutSkuId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GoodsDetail) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GoodsDetail) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *GoodsDetail) SetPrice(v string) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *GoodsDetail) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *GoodsDetail) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *GoodsDetail) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetShowUrl returns the ShowUrl field value if set, zero value otherwise.
func (o *GoodsDetail) GetShowUrl() string {
	if o == nil || IsNil(o.ShowUrl) {
		var ret string
		return ret
	}
	return *o.ShowUrl
}

// GetShowUrlOk returns a tuple with the ShowUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetail) GetShowUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ShowUrl) {
		return nil, false
	}
	return o.ShowUrl, true
}

// HasShowUrl returns a boolean if a field has been set.
func (o *GoodsDetail) HasShowUrl() bool {
	if o != nil && !IsNil(o.ShowUrl) {
		return true
	}

	return false
}

// SetShowUrl gets a reference to the given string and assigns it to the ShowUrl field.
func (o *GoodsDetail) SetShowUrl(v string) {
	o.ShowUrl = &v
}

func (o GoodsDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlipayGoodsId) {
		toSerialize["alipay_goods_id"] = o.AlipayGoodsId
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.CategoriesTree) {
		toSerialize["categories_tree"] = o.CategoriesTree
	}
	if !IsNil(o.GoodsCategory) {
		toSerialize["goods_category"] = o.GoodsCategory
	}
	if !IsNil(o.GoodsId) {
		toSerialize["goods_id"] = o.GoodsId
	}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	if !IsNil(o.OutItemId) {
		toSerialize["out_item_id"] = o.OutItemId
	}
	if !IsNil(o.OutSkuId) {
		toSerialize["out_sku_id"] = o.OutSkuId
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.ShowUrl) {
		toSerialize["show_url"] = o.ShowUrl
	}
	return toSerialize, nil
}

type NullableGoodsDetail struct {
	value *GoodsDetail
	isSet bool
}

func (v NullableGoodsDetail) Get() *GoodsDetail {
	return v.value
}

func (v *NullableGoodsDetail) Set(val *GoodsDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsDetail(val *GoodsDetail) *NullableGoodsDetail {
	return &NullableGoodsDetail{value: val, isSet: true}
}

func (v NullableGoodsDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



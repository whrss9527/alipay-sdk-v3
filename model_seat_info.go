/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the SeatInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeatInfo{}

// SeatInfo struct for SeatInfo
type SeatInfo struct {
	// 座位等级
	SeatClass *string `json:"seat_class,omitempty"`
	// 座位号
	SeatNo *string `json:"seat_no,omitempty"`
}

// NewSeatInfo instantiates a new SeatInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeatInfo() *SeatInfo {
	this := SeatInfo{}
	return &this
}

// NewSeatInfoWithDefaults instantiates a new SeatInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeatInfoWithDefaults() *SeatInfo {
	this := SeatInfo{}
	return &this
}

// GetSeatClass returns the SeatClass field value if set, zero value otherwise.
func (o *SeatInfo) GetSeatClass() string {
	if o == nil || IsNil(o.SeatClass) {
		var ret string
		return ret
	}
	return *o.SeatClass
}

// GetSeatClassOk returns a tuple with the SeatClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeatInfo) GetSeatClassOk() (*string, bool) {
	if o == nil || IsNil(o.SeatClass) {
		return nil, false
	}
	return o.SeatClass, true
}

// HasSeatClass returns a boolean if a field has been set.
func (o *SeatInfo) HasSeatClass() bool {
	if o != nil && !IsNil(o.SeatClass) {
		return true
	}

	return false
}

// SetSeatClass gets a reference to the given string and assigns it to the SeatClass field.
func (o *SeatInfo) SetSeatClass(v string) {
	o.SeatClass = &v
}

// GetSeatNo returns the SeatNo field value if set, zero value otherwise.
func (o *SeatInfo) GetSeatNo() string {
	if o == nil || IsNil(o.SeatNo) {
		var ret string
		return ret
	}
	return *o.SeatNo
}

// GetSeatNoOk returns a tuple with the SeatNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeatInfo) GetSeatNoOk() (*string, bool) {
	if o == nil || IsNil(o.SeatNo) {
		return nil, false
	}
	return o.SeatNo, true
}

// HasSeatNo returns a boolean if a field has been set.
func (o *SeatInfo) HasSeatNo() bool {
	if o != nil && !IsNil(o.SeatNo) {
		return true
	}

	return false
}

// SetSeatNo gets a reference to the given string and assigns it to the SeatNo field.
func (o *SeatInfo) SetSeatNo(v string) {
	o.SeatNo = &v
}

func (o SeatInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeatInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SeatClass) {
		toSerialize["seat_class"] = o.SeatClass
	}
	if !IsNil(o.SeatNo) {
		toSerialize["seat_no"] = o.SeatNo
	}
	return toSerialize, nil
}

type NullableSeatInfo struct {
	value *SeatInfo
	isSet bool
}

func (v NullableSeatInfo) Get() *SeatInfo {
	return v.value
}

func (v *NullableSeatInfo) Set(val *SeatInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSeatInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSeatInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeatInfo(val *SeatInfo) *NullableSeatInfo {
	return &NullableSeatInfo{value: val, isSet: true}
}

func (v NullableSeatInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeatInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AuthorizeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeInfo{}

// AuthorizeInfo struct for AuthorizeInfo
type AuthorizeInfo struct {
	// 授权方身份证明(当前只支持图片类型，请调用alipay.open.mini.miniapp.brand.upload接口上传图片,可以上传多个授权方身份证明)
	AuthIds []string `json:"auth_ids,omitempty"`
	// 授权有效资质(当前只支持图片类型，请调用alipay.open.mini.miniapp.brand.upload接口上传图片，可以上传多个授权有效资质)
	AuthMaterials []string `json:"auth_materials,omitempty"`
	// 被授权人名称
	AuthName *string `json:"auth_name,omitempty"`
	// 授权有效期(结束日期)
	EndDate *string `json:"end_date,omitempty"`
	// 授权有效期(开始日期)
	StartDate *string `json:"start_date,omitempty"`
}

// NewAuthorizeInfo instantiates a new AuthorizeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeInfo() *AuthorizeInfo {
	this := AuthorizeInfo{}
	return &this
}

// NewAuthorizeInfoWithDefaults instantiates a new AuthorizeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeInfoWithDefaults() *AuthorizeInfo {
	this := AuthorizeInfo{}
	return &this
}

// GetAuthIds returns the AuthIds field value if set, zero value otherwise.
func (o *AuthorizeInfo) GetAuthIds() []string {
	if o == nil || IsNil(o.AuthIds) {
		var ret []string
		return ret
	}
	return o.AuthIds
}

// GetAuthIdsOk returns a tuple with the AuthIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeInfo) GetAuthIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthIds) {
		return nil, false
	}
	return o.AuthIds, true
}

// HasAuthIds returns a boolean if a field has been set.
func (o *AuthorizeInfo) HasAuthIds() bool {
	if o != nil && !IsNil(o.AuthIds) {
		return true
	}

	return false
}

// SetAuthIds gets a reference to the given []string and assigns it to the AuthIds field.
func (o *AuthorizeInfo) SetAuthIds(v []string) {
	o.AuthIds = v
}

// GetAuthMaterials returns the AuthMaterials field value if set, zero value otherwise.
func (o *AuthorizeInfo) GetAuthMaterials() []string {
	if o == nil || IsNil(o.AuthMaterials) {
		var ret []string
		return ret
	}
	return o.AuthMaterials
}

// GetAuthMaterialsOk returns a tuple with the AuthMaterials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeInfo) GetAuthMaterialsOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthMaterials) {
		return nil, false
	}
	return o.AuthMaterials, true
}

// HasAuthMaterials returns a boolean if a field has been set.
func (o *AuthorizeInfo) HasAuthMaterials() bool {
	if o != nil && !IsNil(o.AuthMaterials) {
		return true
	}

	return false
}

// SetAuthMaterials gets a reference to the given []string and assigns it to the AuthMaterials field.
func (o *AuthorizeInfo) SetAuthMaterials(v []string) {
	o.AuthMaterials = v
}

// GetAuthName returns the AuthName field value if set, zero value otherwise.
func (o *AuthorizeInfo) GetAuthName() string {
	if o == nil || IsNil(o.AuthName) {
		var ret string
		return ret
	}
	return *o.AuthName
}

// GetAuthNameOk returns a tuple with the AuthName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeInfo) GetAuthNameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthName) {
		return nil, false
	}
	return o.AuthName, true
}

// HasAuthName returns a boolean if a field has been set.
func (o *AuthorizeInfo) HasAuthName() bool {
	if o != nil && !IsNil(o.AuthName) {
		return true
	}

	return false
}

// SetAuthName gets a reference to the given string and assigns it to the AuthName field.
func (o *AuthorizeInfo) SetAuthName(v string) {
	o.AuthName = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AuthorizeInfo) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeInfo) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AuthorizeInfo) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *AuthorizeInfo) SetEndDate(v string) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AuthorizeInfo) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizeInfo) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AuthorizeInfo) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AuthorizeInfo) SetStartDate(v string) {
	o.StartDate = &v
}

func (o AuthorizeInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthIds) {
		toSerialize["auth_ids"] = o.AuthIds
	}
	if !IsNil(o.AuthMaterials) {
		toSerialize["auth_materials"] = o.AuthMaterials
	}
	if !IsNil(o.AuthName) {
		toSerialize["auth_name"] = o.AuthName
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableAuthorizeInfo struct {
	value *AuthorizeInfo
	isSet bool
}

func (v NullableAuthorizeInfo) Get() *AuthorizeInfo {
	return v.value
}

func (v *NullableAuthorizeInfo) Set(val *AuthorizeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeInfo(val *AuthorizeInfo) *NullableAuthorizeInfo {
	return &NullableAuthorizeInfo{value: val, isSet: true}
}

func (v NullableAuthorizeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the JointAccountBillDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JointAccountBillDetail{}

// JointAccountBillDetail struct for JointAccountBillDetail
type JointAccountBillDetail struct {
	// 消费金额，单位：元
	Amount *string `json:"amount,omitempty"`
	// 账单业务号
	BillNo *string `json:"bill_no,omitempty"`
	// 业务时间
	BizDate *string `json:"biz_date,omitempty"`
	// 订单号
	BizNo *string `json:"biz_no,omitempty"`
	// 外部单号
	BizOutNo *string `json:"biz_out_no,omitempty"`
	// 企业ID
	EnterpriseId *string `json:"enterprise_id,omitempty"`
	// 1-退款，2-支付
	InOut *string `json:"in_out,omitempty"`
	// 用户支付宝uid
	OpenId *string `json:"open_id,omitempty"`
	// 账单标题
	Title *string `json:"title,omitempty"`
	// 用户支付宝uid
	UserId *string `json:"user_id,omitempty"`
}

// NewJointAccountBillDetail instantiates a new JointAccountBillDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJointAccountBillDetail() *JointAccountBillDetail {
	this := JointAccountBillDetail{}
	return &this
}

// NewJointAccountBillDetailWithDefaults instantiates a new JointAccountBillDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJointAccountBillDetailWithDefaults() *JointAccountBillDetail {
	this := JointAccountBillDetail{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *JointAccountBillDetail) SetAmount(v string) {
	o.Amount = &v
}

// GetBillNo returns the BillNo field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetBillNo() string {
	if o == nil || IsNil(o.BillNo) {
		var ret string
		return ret
	}
	return *o.BillNo
}

// GetBillNoOk returns a tuple with the BillNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetBillNoOk() (*string, bool) {
	if o == nil || IsNil(o.BillNo) {
		return nil, false
	}
	return o.BillNo, true
}

// HasBillNo returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasBillNo() bool {
	if o != nil && !IsNil(o.BillNo) {
		return true
	}

	return false
}

// SetBillNo gets a reference to the given string and assigns it to the BillNo field.
func (o *JointAccountBillDetail) SetBillNo(v string) {
	o.BillNo = &v
}

// GetBizDate returns the BizDate field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetBizDate() string {
	if o == nil || IsNil(o.BizDate) {
		var ret string
		return ret
	}
	return *o.BizDate
}

// GetBizDateOk returns a tuple with the BizDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetBizDateOk() (*string, bool) {
	if o == nil || IsNil(o.BizDate) {
		return nil, false
	}
	return o.BizDate, true
}

// HasBizDate returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasBizDate() bool {
	if o != nil && !IsNil(o.BizDate) {
		return true
	}

	return false
}

// SetBizDate gets a reference to the given string and assigns it to the BizDate field.
func (o *JointAccountBillDetail) SetBizDate(v string) {
	o.BizDate = &v
}

// GetBizNo returns the BizNo field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetBizNo() string {
	if o == nil || IsNil(o.BizNo) {
		var ret string
		return ret
	}
	return *o.BizNo
}

// GetBizNoOk returns a tuple with the BizNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetBizNoOk() (*string, bool) {
	if o == nil || IsNil(o.BizNo) {
		return nil, false
	}
	return o.BizNo, true
}

// HasBizNo returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasBizNo() bool {
	if o != nil && !IsNil(o.BizNo) {
		return true
	}

	return false
}

// SetBizNo gets a reference to the given string and assigns it to the BizNo field.
func (o *JointAccountBillDetail) SetBizNo(v string) {
	o.BizNo = &v
}

// GetBizOutNo returns the BizOutNo field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetBizOutNo() string {
	if o == nil || IsNil(o.BizOutNo) {
		var ret string
		return ret
	}
	return *o.BizOutNo
}

// GetBizOutNoOk returns a tuple with the BizOutNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetBizOutNoOk() (*string, bool) {
	if o == nil || IsNil(o.BizOutNo) {
		return nil, false
	}
	return o.BizOutNo, true
}

// HasBizOutNo returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasBizOutNo() bool {
	if o != nil && !IsNil(o.BizOutNo) {
		return true
	}

	return false
}

// SetBizOutNo gets a reference to the given string and assigns it to the BizOutNo field.
func (o *JointAccountBillDetail) SetBizOutNo(v string) {
	o.BizOutNo = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetEnterpriseId() string {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret string
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetEnterpriseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given string and assigns it to the EnterpriseId field.
func (o *JointAccountBillDetail) SetEnterpriseId(v string) {
	o.EnterpriseId = &v
}

// GetInOut returns the InOut field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetInOut() string {
	if o == nil || IsNil(o.InOut) {
		var ret string
		return ret
	}
	return *o.InOut
}

// GetInOutOk returns a tuple with the InOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetInOutOk() (*string, bool) {
	if o == nil || IsNil(o.InOut) {
		return nil, false
	}
	return o.InOut, true
}

// HasInOut returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasInOut() bool {
	if o != nil && !IsNil(o.InOut) {
		return true
	}

	return false
}

// SetInOut gets a reference to the given string and assigns it to the InOut field.
func (o *JointAccountBillDetail) SetInOut(v string) {
	o.InOut = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *JointAccountBillDetail) SetOpenId(v string) {
	o.OpenId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *JointAccountBillDetail) SetTitle(v string) {
	o.Title = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *JointAccountBillDetail) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountBillDetail) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *JointAccountBillDetail) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *JointAccountBillDetail) SetUserId(v string) {
	o.UserId = &v
}

func (o JointAccountBillDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JointAccountBillDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.BillNo) {
		toSerialize["bill_no"] = o.BillNo
	}
	if !IsNil(o.BizDate) {
		toSerialize["biz_date"] = o.BizDate
	}
	if !IsNil(o.BizNo) {
		toSerialize["biz_no"] = o.BizNo
	}
	if !IsNil(o.BizOutNo) {
		toSerialize["biz_out_no"] = o.BizOutNo
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if !IsNil(o.InOut) {
		toSerialize["in_out"] = o.InOut
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableJointAccountBillDetail struct {
	value *JointAccountBillDetail
	isSet bool
}

func (v NullableJointAccountBillDetail) Get() *JointAccountBillDetail {
	return v.value
}

func (v *NullableJointAccountBillDetail) Set(val *JointAccountBillDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableJointAccountBillDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableJointAccountBillDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJointAccountBillDetail(val *JointAccountBillDetail) *NullableJointAccountBillDetail {
	return &NullableJointAccountBillDetail{value: val, isSet: true}
}

func (v NullableJointAccountBillDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJointAccountBillDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

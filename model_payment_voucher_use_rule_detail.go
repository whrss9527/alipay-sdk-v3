/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the PaymentVoucherUseRuleDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentVoucherUseRuleDetail{}

// PaymentVoucherUseRuleDetail struct for PaymentVoucherUseRuleDetail
type PaymentVoucherUseRuleDetail struct {
	FixVoucher *PaymentFixVoucher `json:"fix_voucher,omitempty"`
	// 核销跳转方式,默认CAN_USE(详情页展示可使用按钮)
	UseMode *string `json:"use_mode,omitempty"`
	// 核销跳转链接 限制: 1、只有use_mode为SELF_LINK时该值有效且必传。 2、核销跳转链接必须是支付宝小程序链接。
	UseUrl *string `json:"use_url,omitempty"`
	// 每个支付宝账号的核销次数限制。 默认不限制
	VoucherQuantityLimitPerUser *int32 `json:"voucher_quantity_limit_per_user,omitempty"`
	// 核销次数限制周期配置。默认值LIFE_CYCLE表示限制每个支付宝账号在整个活动期间核销次数。
	VoucherQuantityLimitPerUserPeriodType *string                    `json:"voucher_quantity_limit_per_user_period_type,omitempty"`
	VoucherValidPeriod                    *PaymentVoucherValidPeriod `json:"voucher_valid_period,omitempty"`
}

// NewPaymentVoucherUseRuleDetail instantiates a new PaymentVoucherUseRuleDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentVoucherUseRuleDetail() *PaymentVoucherUseRuleDetail {
	this := PaymentVoucherUseRuleDetail{}
	return &this
}

// NewPaymentVoucherUseRuleDetailWithDefaults instantiates a new PaymentVoucherUseRuleDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentVoucherUseRuleDetailWithDefaults() *PaymentVoucherUseRuleDetail {
	this := PaymentVoucherUseRuleDetail{}
	return &this
}

// GetFixVoucher returns the FixVoucher field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleDetail) GetFixVoucher() PaymentFixVoucher {
	if o == nil || IsNil(o.FixVoucher) {
		var ret PaymentFixVoucher
		return ret
	}
	return *o.FixVoucher
}

// GetFixVoucherOk returns a tuple with the FixVoucher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleDetail) GetFixVoucherOk() (*PaymentFixVoucher, bool) {
	if o == nil || IsNil(o.FixVoucher) {
		return nil, false
	}
	return o.FixVoucher, true
}

// HasFixVoucher returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleDetail) HasFixVoucher() bool {
	if o != nil && !IsNil(o.FixVoucher) {
		return true
	}

	return false
}

// SetFixVoucher gets a reference to the given PaymentFixVoucher and assigns it to the FixVoucher field.
func (o *PaymentVoucherUseRuleDetail) SetFixVoucher(v PaymentFixVoucher) {
	o.FixVoucher = &v
}

// GetUseMode returns the UseMode field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleDetail) GetUseMode() string {
	if o == nil || IsNil(o.UseMode) {
		var ret string
		return ret
	}
	return *o.UseMode
}

// GetUseModeOk returns a tuple with the UseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleDetail) GetUseModeOk() (*string, bool) {
	if o == nil || IsNil(o.UseMode) {
		return nil, false
	}
	return o.UseMode, true
}

// HasUseMode returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleDetail) HasUseMode() bool {
	if o != nil && !IsNil(o.UseMode) {
		return true
	}

	return false
}

// SetUseMode gets a reference to the given string and assigns it to the UseMode field.
func (o *PaymentVoucherUseRuleDetail) SetUseMode(v string) {
	o.UseMode = &v
}

// GetUseUrl returns the UseUrl field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleDetail) GetUseUrl() string {
	if o == nil || IsNil(o.UseUrl) {
		var ret string
		return ret
	}
	return *o.UseUrl
}

// GetUseUrlOk returns a tuple with the UseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleDetail) GetUseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UseUrl) {
		return nil, false
	}
	return o.UseUrl, true
}

// HasUseUrl returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleDetail) HasUseUrl() bool {
	if o != nil && !IsNil(o.UseUrl) {
		return true
	}

	return false
}

// SetUseUrl gets a reference to the given string and assigns it to the UseUrl field.
func (o *PaymentVoucherUseRuleDetail) SetUseUrl(v string) {
	o.UseUrl = &v
}

// GetVoucherQuantityLimitPerUser returns the VoucherQuantityLimitPerUser field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleDetail) GetVoucherQuantityLimitPerUser() int32 {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUser) {
		var ret int32
		return ret
	}
	return *o.VoucherQuantityLimitPerUser
}

// GetVoucherQuantityLimitPerUserOk returns a tuple with the VoucherQuantityLimitPerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleDetail) GetVoucherQuantityLimitPerUserOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUser) {
		return nil, false
	}
	return o.VoucherQuantityLimitPerUser, true
}

// HasVoucherQuantityLimitPerUser returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleDetail) HasVoucherQuantityLimitPerUser() bool {
	if o != nil && !IsNil(o.VoucherQuantityLimitPerUser) {
		return true
	}

	return false
}

// SetVoucherQuantityLimitPerUser gets a reference to the given int32 and assigns it to the VoucherQuantityLimitPerUser field.
func (o *PaymentVoucherUseRuleDetail) SetVoucherQuantityLimitPerUser(v int32) {
	o.VoucherQuantityLimitPerUser = &v
}

// GetVoucherQuantityLimitPerUserPeriodType returns the VoucherQuantityLimitPerUserPeriodType field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleDetail) GetVoucherQuantityLimitPerUserPeriodType() string {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUserPeriodType) {
		var ret string
		return ret
	}
	return *o.VoucherQuantityLimitPerUserPeriodType
}

// GetVoucherQuantityLimitPerUserPeriodTypeOk returns a tuple with the VoucherQuantityLimitPerUserPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleDetail) GetVoucherQuantityLimitPerUserPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherQuantityLimitPerUserPeriodType) {
		return nil, false
	}
	return o.VoucherQuantityLimitPerUserPeriodType, true
}

// HasVoucherQuantityLimitPerUserPeriodType returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleDetail) HasVoucherQuantityLimitPerUserPeriodType() bool {
	if o != nil && !IsNil(o.VoucherQuantityLimitPerUserPeriodType) {
		return true
	}

	return false
}

// SetVoucherQuantityLimitPerUserPeriodType gets a reference to the given string and assigns it to the VoucherQuantityLimitPerUserPeriodType field.
func (o *PaymentVoucherUseRuleDetail) SetVoucherQuantityLimitPerUserPeriodType(v string) {
	o.VoucherQuantityLimitPerUserPeriodType = &v
}

// GetVoucherValidPeriod returns the VoucherValidPeriod field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleDetail) GetVoucherValidPeriod() PaymentVoucherValidPeriod {
	if o == nil || IsNil(o.VoucherValidPeriod) {
		var ret PaymentVoucherValidPeriod
		return ret
	}
	return *o.VoucherValidPeriod
}

// GetVoucherValidPeriodOk returns a tuple with the VoucherValidPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleDetail) GetVoucherValidPeriodOk() (*PaymentVoucherValidPeriod, bool) {
	if o == nil || IsNil(o.VoucherValidPeriod) {
		return nil, false
	}
	return o.VoucherValidPeriod, true
}

// HasVoucherValidPeriod returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleDetail) HasVoucherValidPeriod() bool {
	if o != nil && !IsNil(o.VoucherValidPeriod) {
		return true
	}

	return false
}

// SetVoucherValidPeriod gets a reference to the given PaymentVoucherValidPeriod and assigns it to the VoucherValidPeriod field.
func (o *PaymentVoucherUseRuleDetail) SetVoucherValidPeriod(v PaymentVoucherValidPeriod) {
	o.VoucherValidPeriod = &v
}

func (o PaymentVoucherUseRuleDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentVoucherUseRuleDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FixVoucher) {
		toSerialize["fix_voucher"] = o.FixVoucher
	}
	if !IsNil(o.UseMode) {
		toSerialize["use_mode"] = o.UseMode
	}
	if !IsNil(o.UseUrl) {
		toSerialize["use_url"] = o.UseUrl
	}
	if !IsNil(o.VoucherQuantityLimitPerUser) {
		toSerialize["voucher_quantity_limit_per_user"] = o.VoucherQuantityLimitPerUser
	}
	if !IsNil(o.VoucherQuantityLimitPerUserPeriodType) {
		toSerialize["voucher_quantity_limit_per_user_period_type"] = o.VoucherQuantityLimitPerUserPeriodType
	}
	if !IsNil(o.VoucherValidPeriod) {
		toSerialize["voucher_valid_period"] = o.VoucherValidPeriod
	}
	return toSerialize, nil
}

type NullablePaymentVoucherUseRuleDetail struct {
	value *PaymentVoucherUseRuleDetail
	isSet bool
}

func (v NullablePaymentVoucherUseRuleDetail) Get() *PaymentVoucherUseRuleDetail {
	return v.value
}

func (v *NullablePaymentVoucherUseRuleDetail) Set(val *PaymentVoucherUseRuleDetail) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentVoucherUseRuleDetail) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentVoucherUseRuleDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentVoucherUseRuleDetail(val *PaymentVoucherUseRuleDetail) *NullablePaymentVoucherUseRuleDetail {
	return &NullablePaymentVoucherUseRuleDetail{value: val, isSet: true}
}

func (v NullablePaymentVoucherUseRuleDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentVoucherUseRuleDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

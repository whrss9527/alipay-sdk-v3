/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssetShareSourceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetShareSourceInfo{}

// AssetShareSourceInfo struct for AssetShareSourceInfo
type AssetShareSourceInfo struct {
	// 当前规则可用的资产来源类型，搭配source_id_list使用。
	ShareMode *string `json:"share_mode,omitempty"`
	// 资产共享来源id列表，与share_mode配合设置
	SourceIdList []string `json:"source_id_list,omitempty"`
}

// NewAssetShareSourceInfo instantiates a new AssetShareSourceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetShareSourceInfo() *AssetShareSourceInfo {
	this := AssetShareSourceInfo{}
	return &this
}

// NewAssetShareSourceInfoWithDefaults instantiates a new AssetShareSourceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetShareSourceInfoWithDefaults() *AssetShareSourceInfo {
	this := AssetShareSourceInfo{}
	return &this
}

// GetShareMode returns the ShareMode field value if set, zero value otherwise.
func (o *AssetShareSourceInfo) GetShareMode() string {
	if o == nil || IsNil(o.ShareMode) {
		var ret string
		return ret
	}
	return *o.ShareMode
}

// GetShareModeOk returns a tuple with the ShareMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetShareSourceInfo) GetShareModeOk() (*string, bool) {
	if o == nil || IsNil(o.ShareMode) {
		return nil, false
	}
	return o.ShareMode, true
}

// HasShareMode returns a boolean if a field has been set.
func (o *AssetShareSourceInfo) HasShareMode() bool {
	if o != nil && !IsNil(o.ShareMode) {
		return true
	}

	return false
}

// SetShareMode gets a reference to the given string and assigns it to the ShareMode field.
func (o *AssetShareSourceInfo) SetShareMode(v string) {
	o.ShareMode = &v
}

// GetSourceIdList returns the SourceIdList field value if set, zero value otherwise.
func (o *AssetShareSourceInfo) GetSourceIdList() []string {
	if o == nil || IsNil(o.SourceIdList) {
		var ret []string
		return ret
	}
	return o.SourceIdList
}

// GetSourceIdListOk returns a tuple with the SourceIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetShareSourceInfo) GetSourceIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.SourceIdList) {
		return nil, false
	}
	return o.SourceIdList, true
}

// HasSourceIdList returns a boolean if a field has been set.
func (o *AssetShareSourceInfo) HasSourceIdList() bool {
	if o != nil && !IsNil(o.SourceIdList) {
		return true
	}

	return false
}

// SetSourceIdList gets a reference to the given []string and assigns it to the SourceIdList field.
func (o *AssetShareSourceInfo) SetSourceIdList(v []string) {
	o.SourceIdList = v
}

func (o AssetShareSourceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetShareSourceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShareMode) {
		toSerialize["share_mode"] = o.ShareMode
	}
	if !IsNil(o.SourceIdList) {
		toSerialize["source_id_list"] = o.SourceIdList
	}
	return toSerialize, nil
}

type NullableAssetShareSourceInfo struct {
	value *AssetShareSourceInfo
	isSet bool
}

func (v NullableAssetShareSourceInfo) Get() *AssetShareSourceInfo {
	return v.value
}

func (v *NullableAssetShareSourceInfo) Set(val *AssetShareSourceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetShareSourceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetShareSourceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetShareSourceInfo(val *AssetShareSourceInfo) *NullableAssetShareSourceInfo {
	return &NullableAssetShareSourceInfo{value: val, isSet: true}
}

func (v NullableAssetShareSourceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetShareSourceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



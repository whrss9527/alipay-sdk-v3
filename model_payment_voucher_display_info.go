/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentVoucherDisplayInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentVoucherDisplayInfo{}

// PaymentVoucherDisplayInfo struct for PaymentVoucherDisplayInfo
type PaymentVoucherDisplayInfo struct {
	// 商户品牌名称。
	BrandName *string `json:"brand_name,omitempty"`
	// 商家客服电话，会展示在支付宝卡包券详情页。
	CustomerServiceMobile *string `json:"customer_service_mobile,omitempty"`
	// 用于说明详细的活动规则，会展示在支付宝卡包券详情页。
	VoucherDescription *string `json:"voucher_description,omitempty"`
	// 券详细图列表，会展示在用户支付宝卡包券详情页 需要通过 alipay.marketing.material.image.upload接口上传图片，指定file_key为PROMO_VOUCHER_DETAIL_IMAGE ,接口返回的resource_id即为该参数的值 上传图片尺寸600*600，支持格式：png、jpg、jpeg、bmp，大小不超过2MB 限制 1.voucher_image填入，该值才能填入； 2.最多3张；
	VoucherDetailImages []string `json:"voucher_detail_images,omitempty"`
	// 券详情页封面图，会展示在用户支付宝卡包券详情页 需要通过  alipay.marketing.material.image.upload接口上传图片，指定file_key为PROMO_VOUCHER_IMAGE，接口返回的resource_id即为该参数的值  限制: 该字段在兑换券场景下必传 上传图片尺寸670*335，支持格式：png、jpg、jpeg、bmp，大小不超过2MB 限制: 1.指定可核销商品(available_goods)时必传
	VoucherImage *string `json:"voucher_image,omitempty"`
}

// NewPaymentVoucherDisplayInfo instantiates a new PaymentVoucherDisplayInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentVoucherDisplayInfo() *PaymentVoucherDisplayInfo {
	this := PaymentVoucherDisplayInfo{}
	return &this
}

// NewPaymentVoucherDisplayInfoWithDefaults instantiates a new PaymentVoucherDisplayInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentVoucherDisplayInfoWithDefaults() *PaymentVoucherDisplayInfo {
	this := PaymentVoucherDisplayInfo{}
	return &this
}

// GetBrandName returns the BrandName field value if set, zero value otherwise.
func (o *PaymentVoucherDisplayInfo) GetBrandName() string {
	if o == nil || IsNil(o.BrandName) {
		var ret string
		return ret
	}
	return *o.BrandName
}

// GetBrandNameOk returns a tuple with the BrandName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherDisplayInfo) GetBrandNameOk() (*string, bool) {
	if o == nil || IsNil(o.BrandName) {
		return nil, false
	}
	return o.BrandName, true
}

// HasBrandName returns a boolean if a field has been set.
func (o *PaymentVoucherDisplayInfo) HasBrandName() bool {
	if o != nil && !IsNil(o.BrandName) {
		return true
	}

	return false
}

// SetBrandName gets a reference to the given string and assigns it to the BrandName field.
func (o *PaymentVoucherDisplayInfo) SetBrandName(v string) {
	o.BrandName = &v
}

// GetCustomerServiceMobile returns the CustomerServiceMobile field value if set, zero value otherwise.
func (o *PaymentVoucherDisplayInfo) GetCustomerServiceMobile() string {
	if o == nil || IsNil(o.CustomerServiceMobile) {
		var ret string
		return ret
	}
	return *o.CustomerServiceMobile
}

// GetCustomerServiceMobileOk returns a tuple with the CustomerServiceMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherDisplayInfo) GetCustomerServiceMobileOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerServiceMobile) {
		return nil, false
	}
	return o.CustomerServiceMobile, true
}

// HasCustomerServiceMobile returns a boolean if a field has been set.
func (o *PaymentVoucherDisplayInfo) HasCustomerServiceMobile() bool {
	if o != nil && !IsNil(o.CustomerServiceMobile) {
		return true
	}

	return false
}

// SetCustomerServiceMobile gets a reference to the given string and assigns it to the CustomerServiceMobile field.
func (o *PaymentVoucherDisplayInfo) SetCustomerServiceMobile(v string) {
	o.CustomerServiceMobile = &v
}

// GetVoucherDescription returns the VoucherDescription field value if set, zero value otherwise.
func (o *PaymentVoucherDisplayInfo) GetVoucherDescription() string {
	if o == nil || IsNil(o.VoucherDescription) {
		var ret string
		return ret
	}
	return *o.VoucherDescription
}

// GetVoucherDescriptionOk returns a tuple with the VoucherDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherDisplayInfo) GetVoucherDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherDescription) {
		return nil, false
	}
	return o.VoucherDescription, true
}

// HasVoucherDescription returns a boolean if a field has been set.
func (o *PaymentVoucherDisplayInfo) HasVoucherDescription() bool {
	if o != nil && !IsNil(o.VoucherDescription) {
		return true
	}

	return false
}

// SetVoucherDescription gets a reference to the given string and assigns it to the VoucherDescription field.
func (o *PaymentVoucherDisplayInfo) SetVoucherDescription(v string) {
	o.VoucherDescription = &v
}

// GetVoucherDetailImages returns the VoucherDetailImages field value if set, zero value otherwise.
func (o *PaymentVoucherDisplayInfo) GetVoucherDetailImages() []string {
	if o == nil || IsNil(o.VoucherDetailImages) {
		var ret []string
		return ret
	}
	return o.VoucherDetailImages
}

// GetVoucherDetailImagesOk returns a tuple with the VoucherDetailImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherDisplayInfo) GetVoucherDetailImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.VoucherDetailImages) {
		return nil, false
	}
	return o.VoucherDetailImages, true
}

// HasVoucherDetailImages returns a boolean if a field has been set.
func (o *PaymentVoucherDisplayInfo) HasVoucherDetailImages() bool {
	if o != nil && !IsNil(o.VoucherDetailImages) {
		return true
	}

	return false
}

// SetVoucherDetailImages gets a reference to the given []string and assigns it to the VoucherDetailImages field.
func (o *PaymentVoucherDisplayInfo) SetVoucherDetailImages(v []string) {
	o.VoucherDetailImages = v
}

// GetVoucherImage returns the VoucherImage field value if set, zero value otherwise.
func (o *PaymentVoucherDisplayInfo) GetVoucherImage() string {
	if o == nil || IsNil(o.VoucherImage) {
		var ret string
		return ret
	}
	return *o.VoucherImage
}

// GetVoucherImageOk returns a tuple with the VoucherImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherDisplayInfo) GetVoucherImageOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherImage) {
		return nil, false
	}
	return o.VoucherImage, true
}

// HasVoucherImage returns a boolean if a field has been set.
func (o *PaymentVoucherDisplayInfo) HasVoucherImage() bool {
	if o != nil && !IsNil(o.VoucherImage) {
		return true
	}

	return false
}

// SetVoucherImage gets a reference to the given string and assigns it to the VoucherImage field.
func (o *PaymentVoucherDisplayInfo) SetVoucherImage(v string) {
	o.VoucherImage = &v
}

func (o PaymentVoucherDisplayInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentVoucherDisplayInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrandName) {
		toSerialize["brand_name"] = o.BrandName
	}
	if !IsNil(o.CustomerServiceMobile) {
		toSerialize["customer_service_mobile"] = o.CustomerServiceMobile
	}
	if !IsNil(o.VoucherDescription) {
		toSerialize["voucher_description"] = o.VoucherDescription
	}
	if !IsNil(o.VoucherDetailImages) {
		toSerialize["voucher_detail_images"] = o.VoucherDetailImages
	}
	if !IsNil(o.VoucherImage) {
		toSerialize["voucher_image"] = o.VoucherImage
	}
	return toSerialize, nil
}

type NullablePaymentVoucherDisplayInfo struct {
	value *PaymentVoucherDisplayInfo
	isSet bool
}

func (v NullablePaymentVoucherDisplayInfo) Get() *PaymentVoucherDisplayInfo {
	return v.value
}

func (v *NullablePaymentVoucherDisplayInfo) Set(val *PaymentVoucherDisplayInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentVoucherDisplayInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentVoucherDisplayInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentVoucherDisplayInfo(val *PaymentVoucherDisplayInfo) *NullablePaymentVoucherDisplayInfo {
	return &NullablePaymentVoucherDisplayInfo{value: val, isSet: true}
}

func (v NullablePaymentVoucherDisplayInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentVoucherDisplayInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



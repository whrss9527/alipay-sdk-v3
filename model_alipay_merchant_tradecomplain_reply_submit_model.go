/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AlipayMerchantTradecomplainReplySubmitModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlipayMerchantTradecomplainReplySubmitModel{}

// AlipayMerchantTradecomplainReplySubmitModel struct for AlipayMerchantTradecomplainReplySubmitModel
type AlipayMerchantTradecomplainReplySubmitModel struct {
	// 支付宝侧投诉单号
	ComplainEventId *string `json:"complain_event_id,omitempty"`
	// 回复留言内容
	ReplyContent *string `json:"reply_content,omitempty"`
	// 商家处理问题反馈时的回复凭证的图片id，多个逗号隔开（图片id可以通过\"商户上传处理图片\"接口获取）
	ReplyImages *string `json:"reply_images,omitempty"`
}

// NewAlipayMerchantTradecomplainReplySubmitModel instantiates a new AlipayMerchantTradecomplainReplySubmitModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlipayMerchantTradecomplainReplySubmitModel() *AlipayMerchantTradecomplainReplySubmitModel {
	this := AlipayMerchantTradecomplainReplySubmitModel{}
	return &this
}

// NewAlipayMerchantTradecomplainReplySubmitModelWithDefaults instantiates a new AlipayMerchantTradecomplainReplySubmitModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlipayMerchantTradecomplainReplySubmitModelWithDefaults() *AlipayMerchantTradecomplainReplySubmitModel {
	this := AlipayMerchantTradecomplainReplySubmitModel{}
	return &this
}

// GetComplainEventId returns the ComplainEventId field value if set, zero value otherwise.
func (o *AlipayMerchantTradecomplainReplySubmitModel) GetComplainEventId() string {
	if o == nil || IsNil(o.ComplainEventId) {
		var ret string
		return ret
	}
	return *o.ComplainEventId
}

// GetComplainEventIdOk returns a tuple with the ComplainEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlipayMerchantTradecomplainReplySubmitModel) GetComplainEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComplainEventId) {
		return nil, false
	}
	return o.ComplainEventId, true
}

// HasComplainEventId returns a boolean if a field has been set.
func (o *AlipayMerchantTradecomplainReplySubmitModel) HasComplainEventId() bool {
	if o != nil && !IsNil(o.ComplainEventId) {
		return true
	}

	return false
}

// SetComplainEventId gets a reference to the given string and assigns it to the ComplainEventId field.
func (o *AlipayMerchantTradecomplainReplySubmitModel) SetComplainEventId(v string) {
	o.ComplainEventId = &v
}

// GetReplyContent returns the ReplyContent field value if set, zero value otherwise.
func (o *AlipayMerchantTradecomplainReplySubmitModel) GetReplyContent() string {
	if o == nil || IsNil(o.ReplyContent) {
		var ret string
		return ret
	}
	return *o.ReplyContent
}

// GetReplyContentOk returns a tuple with the ReplyContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlipayMerchantTradecomplainReplySubmitModel) GetReplyContentOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyContent) {
		return nil, false
	}
	return o.ReplyContent, true
}

// HasReplyContent returns a boolean if a field has been set.
func (o *AlipayMerchantTradecomplainReplySubmitModel) HasReplyContent() bool {
	if o != nil && !IsNil(o.ReplyContent) {
		return true
	}

	return false
}

// SetReplyContent gets a reference to the given string and assigns it to the ReplyContent field.
func (o *AlipayMerchantTradecomplainReplySubmitModel) SetReplyContent(v string) {
	o.ReplyContent = &v
}

// GetReplyImages returns the ReplyImages field value if set, zero value otherwise.
func (o *AlipayMerchantTradecomplainReplySubmitModel) GetReplyImages() string {
	if o == nil || IsNil(o.ReplyImages) {
		var ret string
		return ret
	}
	return *o.ReplyImages
}

// GetReplyImagesOk returns a tuple with the ReplyImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlipayMerchantTradecomplainReplySubmitModel) GetReplyImagesOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyImages) {
		return nil, false
	}
	return o.ReplyImages, true
}

// HasReplyImages returns a boolean if a field has been set.
func (o *AlipayMerchantTradecomplainReplySubmitModel) HasReplyImages() bool {
	if o != nil && !IsNil(o.ReplyImages) {
		return true
	}

	return false
}

// SetReplyImages gets a reference to the given string and assigns it to the ReplyImages field.
func (o *AlipayMerchantTradecomplainReplySubmitModel) SetReplyImages(v string) {
	o.ReplyImages = &v
}

func (o AlipayMerchantTradecomplainReplySubmitModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlipayMerchantTradecomplainReplySubmitModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComplainEventId) {
		toSerialize["complain_event_id"] = o.ComplainEventId
	}
	if !IsNil(o.ReplyContent) {
		toSerialize["reply_content"] = o.ReplyContent
	}
	if !IsNil(o.ReplyImages) {
		toSerialize["reply_images"] = o.ReplyImages
	}
	return toSerialize, nil
}

type NullableAlipayMerchantTradecomplainReplySubmitModel struct {
	value *AlipayMerchantTradecomplainReplySubmitModel
	isSet bool
}

func (v NullableAlipayMerchantTradecomplainReplySubmitModel) Get() *AlipayMerchantTradecomplainReplySubmitModel {
	return v.value
}

func (v *NullableAlipayMerchantTradecomplainReplySubmitModel) Set(val *AlipayMerchantTradecomplainReplySubmitModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAlipayMerchantTradecomplainReplySubmitModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAlipayMerchantTradecomplainReplySubmitModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlipayMerchantTradecomplainReplySubmitModel(val *AlipayMerchantTradecomplainReplySubmitModel) *NullableAlipayMerchantTradecomplainReplySubmitModel {
	return &NullableAlipayMerchantTradecomplainReplySubmitModel{value: val, isSet: true}
}

func (v NullableAlipayMerchantTradecomplainReplySubmitModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlipayMerchantTradecomplainReplySubmitModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeliveryMerchantInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryMerchantInfo{}

// DeliveryMerchantInfo struct for DeliveryMerchantInfo
type DeliveryMerchantInfo struct {
	// 商户id
	MerchantId *string `json:"merchant_id,omitempty"`
	// 商户id类型。
	MerchantIdType *string `json:"merchant_id_type,omitempty"`
}

// NewDeliveryMerchantInfo instantiates a new DeliveryMerchantInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryMerchantInfo() *DeliveryMerchantInfo {
	this := DeliveryMerchantInfo{}
	return &this
}

// NewDeliveryMerchantInfoWithDefaults instantiates a new DeliveryMerchantInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryMerchantInfoWithDefaults() *DeliveryMerchantInfo {
	this := DeliveryMerchantInfo{}
	return &this
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *DeliveryMerchantInfo) GetMerchantId() string {
	if o == nil || IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryMerchantInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *DeliveryMerchantInfo) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *DeliveryMerchantInfo) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetMerchantIdType returns the MerchantIdType field value if set, zero value otherwise.
func (o *DeliveryMerchantInfo) GetMerchantIdType() string {
	if o == nil || IsNil(o.MerchantIdType) {
		var ret string
		return ret
	}
	return *o.MerchantIdType
}

// GetMerchantIdTypeOk returns a tuple with the MerchantIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryMerchantInfo) GetMerchantIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantIdType) {
		return nil, false
	}
	return o.MerchantIdType, true
}

// HasMerchantIdType returns a boolean if a field has been set.
func (o *DeliveryMerchantInfo) HasMerchantIdType() bool {
	if o != nil && !IsNil(o.MerchantIdType) {
		return true
	}

	return false
}

// SetMerchantIdType gets a reference to the given string and assigns it to the MerchantIdType field.
func (o *DeliveryMerchantInfo) SetMerchantIdType(v string) {
	o.MerchantIdType = &v
}

func (o DeliveryMerchantInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryMerchantInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MerchantId) {
		toSerialize["merchant_id"] = o.MerchantId
	}
	if !IsNil(o.MerchantIdType) {
		toSerialize["merchant_id_type"] = o.MerchantIdType
	}
	return toSerialize, nil
}

type NullableDeliveryMerchantInfo struct {
	value *DeliveryMerchantInfo
	isSet bool
}

func (v NullableDeliveryMerchantInfo) Get() *DeliveryMerchantInfo {
	return v.value
}

func (v *NullableDeliveryMerchantInfo) Set(val *DeliveryMerchantInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryMerchantInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryMerchantInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryMerchantInfo(val *DeliveryMerchantInfo) *NullableDeliveryMerchantInfo {
	return &NullableDeliveryMerchantInfo{value: val, isSet: true}
}

func (v NullableDeliveryMerchantInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryMerchantInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



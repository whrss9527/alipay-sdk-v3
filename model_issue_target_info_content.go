/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the IssueTargetInfoContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueTargetInfoContent{}

// IssueTargetInfoContent struct for IssueTargetInfoContent
type IssueTargetInfoContent struct {
	// 发放金额
	IssueQuota *string `json:"issue_quota,omitempty"`
	// 切换open_id前请使用：owner类型为PHONE时该字段表示员工手机号，owner类型为为EMPLOYEE时该字段表示为员工支付宝uid，owner类型为为ENTERPRISE_PAY_UID时该字段表示为员工企业码id
	OwnerId *string `json:"owner_id,omitempty"`
	// 切换open_id后请使用：owner类型，PHONE为员工手机号，EMPLOYEE为员工open_id
	OwnerOpenId *string `json:"owner_open_id,omitempty"`
	// owner类型，用来表示owner_id的类型; enterprise_id支持PHONE、ENTERPRISE_PAY_UID类型；account_id支持EMPLOYEE类型
	OwnerType *string `json:"owner_type,omitempty"`
	// 员工姓名
	UserName *string `json:"user_name,omitempty"`
}

// NewIssueTargetInfoContent instantiates a new IssueTargetInfoContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueTargetInfoContent() *IssueTargetInfoContent {
	this := IssueTargetInfoContent{}
	return &this
}

// NewIssueTargetInfoContentWithDefaults instantiates a new IssueTargetInfoContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueTargetInfoContentWithDefaults() *IssueTargetInfoContent {
	this := IssueTargetInfoContent{}
	return &this
}

// GetIssueQuota returns the IssueQuota field value if set, zero value otherwise.
func (o *IssueTargetInfoContent) GetIssueQuota() string {
	if o == nil || IsNil(o.IssueQuota) {
		var ret string
		return ret
	}
	return *o.IssueQuota
}

// GetIssueQuotaOk returns a tuple with the IssueQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueTargetInfoContent) GetIssueQuotaOk() (*string, bool) {
	if o == nil || IsNil(o.IssueQuota) {
		return nil, false
	}
	return o.IssueQuota, true
}

// HasIssueQuota returns a boolean if a field has been set.
func (o *IssueTargetInfoContent) HasIssueQuota() bool {
	if o != nil && !IsNil(o.IssueQuota) {
		return true
	}

	return false
}

// SetIssueQuota gets a reference to the given string and assigns it to the IssueQuota field.
func (o *IssueTargetInfoContent) SetIssueQuota(v string) {
	o.IssueQuota = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *IssueTargetInfoContent) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueTargetInfoContent) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *IssueTargetInfoContent) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *IssueTargetInfoContent) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetOwnerOpenId returns the OwnerOpenId field value if set, zero value otherwise.
func (o *IssueTargetInfoContent) GetOwnerOpenId() string {
	if o == nil || IsNil(o.OwnerOpenId) {
		var ret string
		return ret
	}
	return *o.OwnerOpenId
}

// GetOwnerOpenIdOk returns a tuple with the OwnerOpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueTargetInfoContent) GetOwnerOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerOpenId) {
		return nil, false
	}
	return o.OwnerOpenId, true
}

// HasOwnerOpenId returns a boolean if a field has been set.
func (o *IssueTargetInfoContent) HasOwnerOpenId() bool {
	if o != nil && !IsNil(o.OwnerOpenId) {
		return true
	}

	return false
}

// SetOwnerOpenId gets a reference to the given string and assigns it to the OwnerOpenId field.
func (o *IssueTargetInfoContent) SetOwnerOpenId(v string) {
	o.OwnerOpenId = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *IssueTargetInfoContent) GetOwnerType() string {
	if o == nil || IsNil(o.OwnerType) {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueTargetInfoContent) GetOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerType) {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *IssueTargetInfoContent) HasOwnerType() bool {
	if o != nil && !IsNil(o.OwnerType) {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *IssueTargetInfoContent) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *IssueTargetInfoContent) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueTargetInfoContent) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *IssueTargetInfoContent) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *IssueTargetInfoContent) SetUserName(v string) {
	o.UserName = &v
}

func (o IssueTargetInfoContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueTargetInfoContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssueQuota) {
		toSerialize["issue_quota"] = o.IssueQuota
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.OwnerOpenId) {
		toSerialize["owner_open_id"] = o.OwnerOpenId
	}
	if !IsNil(o.OwnerType) {
		toSerialize["owner_type"] = o.OwnerType
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableIssueTargetInfoContent struct {
	value *IssueTargetInfoContent
	isSet bool
}

func (v NullableIssueTargetInfoContent) Get() *IssueTargetInfoContent {
	return v.value
}

func (v *NullableIssueTargetInfoContent) Set(val *IssueTargetInfoContent) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueTargetInfoContent) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueTargetInfoContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueTargetInfoContent(val *IssueTargetInfoContent) *NullableIssueTargetInfoContent {
	return &NullableIssueTargetInfoContent{value: val, isSet: true}
}

func (v NullableIssueTargetInfoContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueTargetInfoContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the MiniAppAuditReason type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MiniAppAuditReason{}

// MiniAppAuditReason struct for MiniAppAuditReason
type MiniAppAuditReason struct {
	// 审核图片列表
	AuditImages []string `json:"audit_images,omitempty"`
	// 驳回原因列表
	Memos []MiniAppAuditReasonMemo `json:"memos,omitempty"`
}

// NewMiniAppAuditReason instantiates a new MiniAppAuditReason object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiniAppAuditReason() *MiniAppAuditReason {
	this := MiniAppAuditReason{}
	return &this
}

// NewMiniAppAuditReasonWithDefaults instantiates a new MiniAppAuditReason object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiniAppAuditReasonWithDefaults() *MiniAppAuditReason {
	this := MiniAppAuditReason{}
	return &this
}

// GetAuditImages returns the AuditImages field value if set, zero value otherwise.
func (o *MiniAppAuditReason) GetAuditImages() []string {
	if o == nil || IsNil(o.AuditImages) {
		var ret []string
		return ret
	}
	return o.AuditImages
}

// GetAuditImagesOk returns a tuple with the AuditImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniAppAuditReason) GetAuditImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.AuditImages) {
		return nil, false
	}
	return o.AuditImages, true
}

// HasAuditImages returns a boolean if a field has been set.
func (o *MiniAppAuditReason) HasAuditImages() bool {
	if o != nil && !IsNil(o.AuditImages) {
		return true
	}

	return false
}

// SetAuditImages gets a reference to the given []string and assigns it to the AuditImages field.
func (o *MiniAppAuditReason) SetAuditImages(v []string) {
	o.AuditImages = v
}

// GetMemos returns the Memos field value if set, zero value otherwise.
func (o *MiniAppAuditReason) GetMemos() []MiniAppAuditReasonMemo {
	if o == nil || IsNil(o.Memos) {
		var ret []MiniAppAuditReasonMemo
		return ret
	}
	return o.Memos
}

// GetMemosOk returns a tuple with the Memos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniAppAuditReason) GetMemosOk() ([]MiniAppAuditReasonMemo, bool) {
	if o == nil || IsNil(o.Memos) {
		return nil, false
	}
	return o.Memos, true
}

// HasMemos returns a boolean if a field has been set.
func (o *MiniAppAuditReason) HasMemos() bool {
	if o != nil && !IsNil(o.Memos) {
		return true
	}

	return false
}

// SetMemos gets a reference to the given []MiniAppAuditReasonMemo and assigns it to the Memos field.
func (o *MiniAppAuditReason) SetMemos(v []MiniAppAuditReasonMemo) {
	o.Memos = v
}

func (o MiniAppAuditReason) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MiniAppAuditReason) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditImages) {
		toSerialize["audit_images"] = o.AuditImages
	}
	if !IsNil(o.Memos) {
		toSerialize["memos"] = o.Memos
	}
	return toSerialize, nil
}

type NullableMiniAppAuditReason struct {
	value *MiniAppAuditReason
	isSet bool
}

func (v NullableMiniAppAuditReason) Get() *MiniAppAuditReason {
	return v.value
}

func (v *NullableMiniAppAuditReason) Set(val *MiniAppAuditReason) {
	v.value = val
	v.isSet = true
}

func (v NullableMiniAppAuditReason) IsSet() bool {
	return v.isSet
}

func (v *NullableMiniAppAuditReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiniAppAuditReason(val *MiniAppAuditReason) *NullableMiniAppAuditReason {
	return &NullableMiniAppAuditReason{value: val, isSet: true}
}

func (v NullableMiniAppAuditReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiniAppAuditReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

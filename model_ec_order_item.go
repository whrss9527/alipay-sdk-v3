/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EcOrderItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EcOrderItem{}

// EcOrderItem struct for EcOrderItem
type EcOrderItem struct {
	// 共同账户ID
	AccountId *string `json:"account_id,omitempty"`
	// 外部业务号
	BizOutNo *string `json:"biz_out_no,omitempty"`
	// 员工ID
	EmployeeId *string `json:"employee_id,omitempty"`
	// 企业ID
	EnterpriseId *string `json:"enterprise_id,omitempty"`
	// 创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 修改时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 用户支付宝UID
	OpenId *string `json:"open_id,omitempty"`
	// 订单内容，JSON格式。
	OrderContent *string `json:"order_content,omitempty"`
	// 订单ID
	OrderId *string `json:"order_id,omitempty"`
	// 订单类型 METRO：地铁 TAKEAWAY：外卖 OTHER：其他
	OrderType *string `json:"order_type,omitempty"`
	// 合作伙伴ID
	PartnerId *string `json:"partner_id,omitempty"`
	// 关联支付宝交易号
	PayNo *string `json:"pay_no,omitempty"`
	// 用户支付宝UID
	UserId *string `json:"user_id,omitempty"`
}

// NewEcOrderItem instantiates a new EcOrderItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEcOrderItem() *EcOrderItem {
	this := EcOrderItem{}
	return &this
}

// NewEcOrderItemWithDefaults instantiates a new EcOrderItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEcOrderItemWithDefaults() *EcOrderItem {
	this := EcOrderItem{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *EcOrderItem) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *EcOrderItem) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *EcOrderItem) SetAccountId(v string) {
	o.AccountId = &v
}

// GetBizOutNo returns the BizOutNo field value if set, zero value otherwise.
func (o *EcOrderItem) GetBizOutNo() string {
	if o == nil || IsNil(o.BizOutNo) {
		var ret string
		return ret
	}
	return *o.BizOutNo
}

// GetBizOutNoOk returns a tuple with the BizOutNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetBizOutNoOk() (*string, bool) {
	if o == nil || IsNil(o.BizOutNo) {
		return nil, false
	}
	return o.BizOutNo, true
}

// HasBizOutNo returns a boolean if a field has been set.
func (o *EcOrderItem) HasBizOutNo() bool {
	if o != nil && !IsNil(o.BizOutNo) {
		return true
	}

	return false
}

// SetBizOutNo gets a reference to the given string and assigns it to the BizOutNo field.
func (o *EcOrderItem) SetBizOutNo(v string) {
	o.BizOutNo = &v
}

// GetEmployeeId returns the EmployeeId field value if set, zero value otherwise.
func (o *EcOrderItem) GetEmployeeId() string {
	if o == nil || IsNil(o.EmployeeId) {
		var ret string
		return ret
	}
	return *o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetEmployeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeId) {
		return nil, false
	}
	return o.EmployeeId, true
}

// HasEmployeeId returns a boolean if a field has been set.
func (o *EcOrderItem) HasEmployeeId() bool {
	if o != nil && !IsNil(o.EmployeeId) {
		return true
	}

	return false
}

// SetEmployeeId gets a reference to the given string and assigns it to the EmployeeId field.
func (o *EcOrderItem) SetEmployeeId(v string) {
	o.EmployeeId = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *EcOrderItem) GetEnterpriseId() string {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret string
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetEnterpriseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *EcOrderItem) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given string and assigns it to the EnterpriseId field.
func (o *EcOrderItem) SetEnterpriseId(v string) {
	o.EnterpriseId = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *EcOrderItem) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *EcOrderItem) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *EcOrderItem) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *EcOrderItem) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *EcOrderItem) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *EcOrderItem) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *EcOrderItem) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *EcOrderItem) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *EcOrderItem) SetOpenId(v string) {
	o.OpenId = &v
}

// GetOrderContent returns the OrderContent field value if set, zero value otherwise.
func (o *EcOrderItem) GetOrderContent() string {
	if o == nil || IsNil(o.OrderContent) {
		var ret string
		return ret
	}
	return *o.OrderContent
}

// GetOrderContentOk returns a tuple with the OrderContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetOrderContentOk() (*string, bool) {
	if o == nil || IsNil(o.OrderContent) {
		return nil, false
	}
	return o.OrderContent, true
}

// HasOrderContent returns a boolean if a field has been set.
func (o *EcOrderItem) HasOrderContent() bool {
	if o != nil && !IsNil(o.OrderContent) {
		return true
	}

	return false
}

// SetOrderContent gets a reference to the given string and assigns it to the OrderContent field.
func (o *EcOrderItem) SetOrderContent(v string) {
	o.OrderContent = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *EcOrderItem) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *EcOrderItem) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *EcOrderItem) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *EcOrderItem) GetOrderType() string {
	if o == nil || IsNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetOrderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *EcOrderItem) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *EcOrderItem) SetOrderType(v string) {
	o.OrderType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *EcOrderItem) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *EcOrderItem) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *EcOrderItem) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetPayNo returns the PayNo field value if set, zero value otherwise.
func (o *EcOrderItem) GetPayNo() string {
	if o == nil || IsNil(o.PayNo) {
		var ret string
		return ret
	}
	return *o.PayNo
}

// GetPayNoOk returns a tuple with the PayNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetPayNoOk() (*string, bool) {
	if o == nil || IsNil(o.PayNo) {
		return nil, false
	}
	return o.PayNo, true
}

// HasPayNo returns a boolean if a field has been set.
func (o *EcOrderItem) HasPayNo() bool {
	if o != nil && !IsNil(o.PayNo) {
		return true
	}

	return false
}

// SetPayNo gets a reference to the given string and assigns it to the PayNo field.
func (o *EcOrderItem) SetPayNo(v string) {
	o.PayNo = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *EcOrderItem) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EcOrderItem) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *EcOrderItem) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *EcOrderItem) SetUserId(v string) {
	o.UserId = &v
}

func (o EcOrderItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EcOrderItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.BizOutNo) {
		toSerialize["biz_out_no"] = o.BizOutNo
	}
	if !IsNil(o.EmployeeId) {
		toSerialize["employee_id"] = o.EmployeeId
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.OrderContent) {
		toSerialize["order_content"] = o.OrderContent
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.OrderType) {
		toSerialize["order_type"] = o.OrderType
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partner_id"] = o.PartnerId
	}
	if !IsNil(o.PayNo) {
		toSerialize["pay_no"] = o.PayNo
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableEcOrderItem struct {
	value *EcOrderItem
	isSet bool
}

func (v NullableEcOrderItem) Get() *EcOrderItem {
	return v.value
}

func (v *NullableEcOrderItem) Set(val *EcOrderItem) {
	v.value = val
	v.isSet = true
}

func (v NullableEcOrderItem) IsSet() bool {
	return v.isSet
}

func (v *NullableEcOrderItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEcOrderItem(val *EcOrderItem) *NullableEcOrderItem {
	return &NullableEcOrderItem{value: val, isSet: true}
}

func (v NullableEcOrderItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEcOrderItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



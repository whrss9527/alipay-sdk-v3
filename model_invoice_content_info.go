/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the InvoiceContentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceContentInfo{}

// InvoiceContentInfo struct for InvoiceContentInfo
type InvoiceContentInfo struct {
	// 含税金额（元）
	Amount *string `json:"amount,omitempty"`
	// 发票项目名称/货物名称
	ItemName *string `json:"item_name,omitempty"`
	// 商品编码/税收分类编码
	ItemNo *string `json:"item_no,omitempty"`
	// 单位
	ItemUnit *string `json:"item_unit,omitempty"`
	// 单价（元）
	Price *string `json:"price,omitempty"`
	// 商品数量
	Quantity *string `json:"quantity,omitempty"`
	// 发票行性质。0表示正常行，1表示折扣行，2表示被折扣行
	RowType *string `json:"row_type,omitempty"`
	// 规格型号
	Specification *string `json:"specification,omitempty"`
	// 不含税金额（元）
	SumPrice *string `json:"sum_price,omitempty"`
	// 税额
	Tax *string `json:"tax,omitempty"`
	// 税率
	TaxRate *string `json:"tax_rate,omitempty"`
	// 税率标识，只有税率为0的情况才有值，0=出口零税率，1=免税，2=不征收，3=普通零税率
	ZeroRateFlag *string `json:"zero_rate_flag,omitempty"`
}

// NewInvoiceContentInfo instantiates a new InvoiceContentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceContentInfo() *InvoiceContentInfo {
	this := InvoiceContentInfo{}
	return &this
}

// NewInvoiceContentInfoWithDefaults instantiates a new InvoiceContentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceContentInfoWithDefaults() *InvoiceContentInfo {
	this := InvoiceContentInfo{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *InvoiceContentInfo) SetAmount(v string) {
	o.Amount = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetItemName() string {
	if o == nil || IsNil(o.ItemName) {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ItemName) {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasItemName() bool {
	if o != nil && !IsNil(o.ItemName) {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *InvoiceContentInfo) SetItemName(v string) {
	o.ItemName = &v
}

// GetItemNo returns the ItemNo field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetItemNo() string {
	if o == nil || IsNil(o.ItemNo) {
		var ret string
		return ret
	}
	return *o.ItemNo
}

// GetItemNoOk returns a tuple with the ItemNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetItemNoOk() (*string, bool) {
	if o == nil || IsNil(o.ItemNo) {
		return nil, false
	}
	return o.ItemNo, true
}

// HasItemNo returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasItemNo() bool {
	if o != nil && !IsNil(o.ItemNo) {
		return true
	}

	return false
}

// SetItemNo gets a reference to the given string and assigns it to the ItemNo field.
func (o *InvoiceContentInfo) SetItemNo(v string) {
	o.ItemNo = &v
}

// GetItemUnit returns the ItemUnit field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetItemUnit() string {
	if o == nil || IsNil(o.ItemUnit) {
		var ret string
		return ret
	}
	return *o.ItemUnit
}

// GetItemUnitOk returns a tuple with the ItemUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetItemUnitOk() (*string, bool) {
	if o == nil || IsNil(o.ItemUnit) {
		return nil, false
	}
	return o.ItemUnit, true
}

// HasItemUnit returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasItemUnit() bool {
	if o != nil && !IsNil(o.ItemUnit) {
		return true
	}

	return false
}

// SetItemUnit gets a reference to the given string and assigns it to the ItemUnit field.
func (o *InvoiceContentInfo) SetItemUnit(v string) {
	o.ItemUnit = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *InvoiceContentInfo) SetPrice(v string) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetQuantity() string {
	if o == nil || IsNil(o.Quantity) {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *InvoiceContentInfo) SetQuantity(v string) {
	o.Quantity = &v
}

// GetRowType returns the RowType field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetRowType() string {
	if o == nil || IsNil(o.RowType) {
		var ret string
		return ret
	}
	return *o.RowType
}

// GetRowTypeOk returns a tuple with the RowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetRowTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RowType) {
		return nil, false
	}
	return o.RowType, true
}

// HasRowType returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasRowType() bool {
	if o != nil && !IsNil(o.RowType) {
		return true
	}

	return false
}

// SetRowType gets a reference to the given string and assigns it to the RowType field.
func (o *InvoiceContentInfo) SetRowType(v string) {
	o.RowType = &v
}

// GetSpecification returns the Specification field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetSpecification() string {
	if o == nil || IsNil(o.Specification) {
		var ret string
		return ret
	}
	return *o.Specification
}

// GetSpecificationOk returns a tuple with the Specification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetSpecificationOk() (*string, bool) {
	if o == nil || IsNil(o.Specification) {
		return nil, false
	}
	return o.Specification, true
}

// HasSpecification returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasSpecification() bool {
	if o != nil && !IsNil(o.Specification) {
		return true
	}

	return false
}

// SetSpecification gets a reference to the given string and assigns it to the Specification field.
func (o *InvoiceContentInfo) SetSpecification(v string) {
	o.Specification = &v
}

// GetSumPrice returns the SumPrice field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetSumPrice() string {
	if o == nil || IsNil(o.SumPrice) {
		var ret string
		return ret
	}
	return *o.SumPrice
}

// GetSumPriceOk returns a tuple with the SumPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetSumPriceOk() (*string, bool) {
	if o == nil || IsNil(o.SumPrice) {
		return nil, false
	}
	return o.SumPrice, true
}

// HasSumPrice returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasSumPrice() bool {
	if o != nil && !IsNil(o.SumPrice) {
		return true
	}

	return false
}

// SetSumPrice gets a reference to the given string and assigns it to the SumPrice field.
func (o *InvoiceContentInfo) SetSumPrice(v string) {
	o.SumPrice = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetTax() string {
	if o == nil || IsNil(o.Tax) {
		var ret string
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetTaxOk() (*string, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given string and assigns it to the Tax field.
func (o *InvoiceContentInfo) SetTax(v string) {
	o.Tax = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetTaxRate() string {
	if o == nil || IsNil(o.TaxRate) {
		var ret string
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetTaxRateOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasTaxRate() bool {
	if o != nil && !IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given string and assigns it to the TaxRate field.
func (o *InvoiceContentInfo) SetTaxRate(v string) {
	o.TaxRate = &v
}

// GetZeroRateFlag returns the ZeroRateFlag field value if set, zero value otherwise.
func (o *InvoiceContentInfo) GetZeroRateFlag() string {
	if o == nil || IsNil(o.ZeroRateFlag) {
		var ret string
		return ret
	}
	return *o.ZeroRateFlag
}

// GetZeroRateFlagOk returns a tuple with the ZeroRateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceContentInfo) GetZeroRateFlagOk() (*string, bool) {
	if o == nil || IsNil(o.ZeroRateFlag) {
		return nil, false
	}
	return o.ZeroRateFlag, true
}

// HasZeroRateFlag returns a boolean if a field has been set.
func (o *InvoiceContentInfo) HasZeroRateFlag() bool {
	if o != nil && !IsNil(o.ZeroRateFlag) {
		return true
	}

	return false
}

// SetZeroRateFlag gets a reference to the given string and assigns it to the ZeroRateFlag field.
func (o *InvoiceContentInfo) SetZeroRateFlag(v string) {
	o.ZeroRateFlag = &v
}

func (o InvoiceContentInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceContentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ItemName) {
		toSerialize["item_name"] = o.ItemName
	}
	if !IsNil(o.ItemNo) {
		toSerialize["item_no"] = o.ItemNo
	}
	if !IsNil(o.ItemUnit) {
		toSerialize["item_unit"] = o.ItemUnit
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.RowType) {
		toSerialize["row_type"] = o.RowType
	}
	if !IsNil(o.Specification) {
		toSerialize["specification"] = o.Specification
	}
	if !IsNil(o.SumPrice) {
		toSerialize["sum_price"] = o.SumPrice
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.TaxRate) {
		toSerialize["tax_rate"] = o.TaxRate
	}
	if !IsNil(o.ZeroRateFlag) {
		toSerialize["zero_rate_flag"] = o.ZeroRateFlag
	}
	return toSerialize, nil
}

type NullableInvoiceContentInfo struct {
	value *InvoiceContentInfo
	isSet bool
}

func (v NullableInvoiceContentInfo) Get() *InvoiceContentInfo {
	return v.value
}

func (v *NullableInvoiceContentInfo) Set(val *InvoiceContentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceContentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceContentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceContentInfo(val *InvoiceContentInfo) *NullableInvoiceContentInfo {
	return &NullableInvoiceContentInfo{value: val, isSet: true}
}

func (v NullableInvoiceContentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceContentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

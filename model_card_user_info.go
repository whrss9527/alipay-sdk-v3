/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the CardUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardUserInfo{}

// CardUserInfo struct for CardUserInfo
type CardUserInfo struct {
	// 用户open_id
	OpenId *string `json:"open_id,omitempty"`
	// 用户唯一标识, 根据user_uni_id_type类型来定 （目前暂支持支付宝userId）  支付宝userId说明：支付宝用户号是以2088开头的16位纯数字组成
	UserUniId *string `json:"user_uni_id,omitempty"`
	// 用户唯一标识类型
	UserUniIdType *string `json:"user_uni_id_type,omitempty"`
}

// NewCardUserInfo instantiates a new CardUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardUserInfo() *CardUserInfo {
	this := CardUserInfo{}
	return &this
}

// NewCardUserInfoWithDefaults instantiates a new CardUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardUserInfoWithDefaults() *CardUserInfo {
	this := CardUserInfo{}
	return &this
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *CardUserInfo) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUserInfo) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *CardUserInfo) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *CardUserInfo) SetOpenId(v string) {
	o.OpenId = &v
}

// GetUserUniId returns the UserUniId field value if set, zero value otherwise.
func (o *CardUserInfo) GetUserUniId() string {
	if o == nil || IsNil(o.UserUniId) {
		var ret string
		return ret
	}
	return *o.UserUniId
}

// GetUserUniIdOk returns a tuple with the UserUniId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUserInfo) GetUserUniIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserUniId) {
		return nil, false
	}
	return o.UserUniId, true
}

// HasUserUniId returns a boolean if a field has been set.
func (o *CardUserInfo) HasUserUniId() bool {
	if o != nil && !IsNil(o.UserUniId) {
		return true
	}

	return false
}

// SetUserUniId gets a reference to the given string and assigns it to the UserUniId field.
func (o *CardUserInfo) SetUserUniId(v string) {
	o.UserUniId = &v
}

// GetUserUniIdType returns the UserUniIdType field value if set, zero value otherwise.
func (o *CardUserInfo) GetUserUniIdType() string {
	if o == nil || IsNil(o.UserUniIdType) {
		var ret string
		return ret
	}
	return *o.UserUniIdType
}

// GetUserUniIdTypeOk returns a tuple with the UserUniIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUserInfo) GetUserUniIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UserUniIdType) {
		return nil, false
	}
	return o.UserUniIdType, true
}

// HasUserUniIdType returns a boolean if a field has been set.
func (o *CardUserInfo) HasUserUniIdType() bool {
	if o != nil && !IsNil(o.UserUniIdType) {
		return true
	}

	return false
}

// SetUserUniIdType gets a reference to the given string and assigns it to the UserUniIdType field.
func (o *CardUserInfo) SetUserUniIdType(v string) {
	o.UserUniIdType = &v
}

func (o CardUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.UserUniId) {
		toSerialize["user_uni_id"] = o.UserUniId
	}
	if !IsNil(o.UserUniIdType) {
		toSerialize["user_uni_id_type"] = o.UserUniIdType
	}
	return toSerialize, nil
}

type NullableCardUserInfo struct {
	value *CardUserInfo
	isSet bool
}

func (v NullableCardUserInfo) Get() *CardUserInfo {
	return v.value
}

func (v *NullableCardUserInfo) Set(val *CardUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCardUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCardUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardUserInfo(val *CardUserInfo) *NullableCardUserInfo {
	return &NullableCardUserInfo{value: val, isSet: true}
}

func (v NullableCardUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

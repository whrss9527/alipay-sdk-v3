/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PluginBetaItemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PluginBetaItemInfo{}

// PluginBetaItemInfo struct for PluginBetaItemInfo
type PluginBetaItemInfo struct {
	// 小程序名称
	AppName *string `json:"app_name,omitempty"`
	// 被邀测状态，待确认WAITCHECK/确认CHECKED/拒绝REJECT
	BetaStatus *string `json:"beta_status,omitempty"`
	// 拒绝原因
	Memo *string `json:"memo,omitempty"`
	// 小程序ID
	MiniAppId *string `json:"mini_app_id,omitempty"`
	// 插件id
	PluginId *string `json:"plugin_id,omitempty"`
	// 插件版本
	PluginVersion *string `json:"plugin_version,omitempty"`
	// 邀测二维码
	QrCodeUrl *string `json:"qr_code_url,omitempty"`
}

// NewPluginBetaItemInfo instantiates a new PluginBetaItemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginBetaItemInfo() *PluginBetaItemInfo {
	this := PluginBetaItemInfo{}
	return &this
}

// NewPluginBetaItemInfoWithDefaults instantiates a new PluginBetaItemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginBetaItemInfoWithDefaults() *PluginBetaItemInfo {
	this := PluginBetaItemInfo{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *PluginBetaItemInfo) SetAppName(v string) {
	o.AppName = &v
}

// GetBetaStatus returns the BetaStatus field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetBetaStatus() string {
	if o == nil || IsNil(o.BetaStatus) {
		var ret string
		return ret
	}
	return *o.BetaStatus
}

// GetBetaStatusOk returns a tuple with the BetaStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetBetaStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BetaStatus) {
		return nil, false
	}
	return o.BetaStatus, true
}

// HasBetaStatus returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasBetaStatus() bool {
	if o != nil && !IsNil(o.BetaStatus) {
		return true
	}

	return false
}

// SetBetaStatus gets a reference to the given string and assigns it to the BetaStatus field.
func (o *PluginBetaItemInfo) SetBetaStatus(v string) {
	o.BetaStatus = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *PluginBetaItemInfo) SetMemo(v string) {
	o.Memo = &v
}

// GetMiniAppId returns the MiniAppId field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetMiniAppId() string {
	if o == nil || IsNil(o.MiniAppId) {
		var ret string
		return ret
	}
	return *o.MiniAppId
}

// GetMiniAppIdOk returns a tuple with the MiniAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetMiniAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.MiniAppId) {
		return nil, false
	}
	return o.MiniAppId, true
}

// HasMiniAppId returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasMiniAppId() bool {
	if o != nil && !IsNil(o.MiniAppId) {
		return true
	}

	return false
}

// SetMiniAppId gets a reference to the given string and assigns it to the MiniAppId field.
func (o *PluginBetaItemInfo) SetMiniAppId(v string) {
	o.MiniAppId = &v
}

// GetPluginId returns the PluginId field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetPluginId() string {
	if o == nil || IsNil(o.PluginId) {
		var ret string
		return ret
	}
	return *o.PluginId
}

// GetPluginIdOk returns a tuple with the PluginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetPluginIdOk() (*string, bool) {
	if o == nil || IsNil(o.PluginId) {
		return nil, false
	}
	return o.PluginId, true
}

// HasPluginId returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasPluginId() bool {
	if o != nil && !IsNil(o.PluginId) {
		return true
	}

	return false
}

// SetPluginId gets a reference to the given string and assigns it to the PluginId field.
func (o *PluginBetaItemInfo) SetPluginId(v string) {
	o.PluginId = &v
}

// GetPluginVersion returns the PluginVersion field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetPluginVersion() string {
	if o == nil || IsNil(o.PluginVersion) {
		var ret string
		return ret
	}
	return *o.PluginVersion
}

// GetPluginVersionOk returns a tuple with the PluginVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetPluginVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PluginVersion) {
		return nil, false
	}
	return o.PluginVersion, true
}

// HasPluginVersion returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasPluginVersion() bool {
	if o != nil && !IsNil(o.PluginVersion) {
		return true
	}

	return false
}

// SetPluginVersion gets a reference to the given string and assigns it to the PluginVersion field.
func (o *PluginBetaItemInfo) SetPluginVersion(v string) {
	o.PluginVersion = &v
}

// GetQrCodeUrl returns the QrCodeUrl field value if set, zero value otherwise.
func (o *PluginBetaItemInfo) GetQrCodeUrl() string {
	if o == nil || IsNil(o.QrCodeUrl) {
		var ret string
		return ret
	}
	return *o.QrCodeUrl
}

// GetQrCodeUrlOk returns a tuple with the QrCodeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginBetaItemInfo) GetQrCodeUrlOk() (*string, bool) {
	if o == nil || IsNil(o.QrCodeUrl) {
		return nil, false
	}
	return o.QrCodeUrl, true
}

// HasQrCodeUrl returns a boolean if a field has been set.
func (o *PluginBetaItemInfo) HasQrCodeUrl() bool {
	if o != nil && !IsNil(o.QrCodeUrl) {
		return true
	}

	return false
}

// SetQrCodeUrl gets a reference to the given string and assigns it to the QrCodeUrl field.
func (o *PluginBetaItemInfo) SetQrCodeUrl(v string) {
	o.QrCodeUrl = &v
}

func (o PluginBetaItemInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PluginBetaItemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["app_name"] = o.AppName
	}
	if !IsNil(o.BetaStatus) {
		toSerialize["beta_status"] = o.BetaStatus
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.MiniAppId) {
		toSerialize["mini_app_id"] = o.MiniAppId
	}
	if !IsNil(o.PluginId) {
		toSerialize["plugin_id"] = o.PluginId
	}
	if !IsNil(o.PluginVersion) {
		toSerialize["plugin_version"] = o.PluginVersion
	}
	if !IsNil(o.QrCodeUrl) {
		toSerialize["qr_code_url"] = o.QrCodeUrl
	}
	return toSerialize, nil
}

type NullablePluginBetaItemInfo struct {
	value *PluginBetaItemInfo
	isSet bool
}

func (v NullablePluginBetaItemInfo) Get() *PluginBetaItemInfo {
	return v.value
}

func (v *NullablePluginBetaItemInfo) Set(val *PluginBetaItemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginBetaItemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginBetaItemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginBetaItemInfo(val *PluginBetaItemInfo) *NullablePluginBetaItemInfo {
	return &NullablePluginBetaItemInfo{value: val, isSet: true}
}

func (v NullablePluginBetaItemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginBetaItemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



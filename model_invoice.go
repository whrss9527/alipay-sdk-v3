/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	// 邮箱地址
	Email *string `json:"email,omitempty"`
	// 发票内容，配送服务费
	InvoiceContent *string `json:"invoice_content,omitempty"`
	// 发票金额
	InvoiceFee *string `json:"invoice_fee,omitempty"`
	// 发票抬头，如支付宝（杭州）信息技术有限公司
	InvoiceTitle *string `json:"invoice_title,omitempty"`
	// 发票类型，0：默认电子发票
	InvoiceType *int32 `json:"invoice_type,omitempty"`
	// 手机号码
	Phone *string `json:"phone,omitempty"`
	// 收件人姓名
	Receiver *string `json:"receiver,omitempty"`
	// 税号
	TaxNumber *string `json:"tax_number,omitempty"`
	// 抬头类型，0：企业单位，1：个人/非企业
	TitleType *int32 `json:"title_type,omitempty"`
}

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice() *Invoice {
	this := Invoice{}
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Invoice) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Invoice) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Invoice) SetEmail(v string) {
	o.Email = &v
}

// GetInvoiceContent returns the InvoiceContent field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceContent() string {
	if o == nil || IsNil(o.InvoiceContent) {
		var ret string
		return ret
	}
	return *o.InvoiceContent
}

// GetInvoiceContentOk returns a tuple with the InvoiceContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceContentOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceContent) {
		return nil, false
	}
	return o.InvoiceContent, true
}

// HasInvoiceContent returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceContent() bool {
	if o != nil && !IsNil(o.InvoiceContent) {
		return true
	}

	return false
}

// SetInvoiceContent gets a reference to the given string and assigns it to the InvoiceContent field.
func (o *Invoice) SetInvoiceContent(v string) {
	o.InvoiceContent = &v
}

// GetInvoiceFee returns the InvoiceFee field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceFee() string {
	if o == nil || IsNil(o.InvoiceFee) {
		var ret string
		return ret
	}
	return *o.InvoiceFee
}

// GetInvoiceFeeOk returns a tuple with the InvoiceFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceFeeOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceFee) {
		return nil, false
	}
	return o.InvoiceFee, true
}

// HasInvoiceFee returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceFee() bool {
	if o != nil && !IsNil(o.InvoiceFee) {
		return true
	}

	return false
}

// SetInvoiceFee gets a reference to the given string and assigns it to the InvoiceFee field.
func (o *Invoice) SetInvoiceFee(v string) {
	o.InvoiceFee = &v
}

// GetInvoiceTitle returns the InvoiceTitle field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceTitle() string {
	if o == nil || IsNil(o.InvoiceTitle) {
		var ret string
		return ret
	}
	return *o.InvoiceTitle
}

// GetInvoiceTitleOk returns a tuple with the InvoiceTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceTitleOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceTitle) {
		return nil, false
	}
	return o.InvoiceTitle, true
}

// HasInvoiceTitle returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceTitle() bool {
	if o != nil && !IsNil(o.InvoiceTitle) {
		return true
	}

	return false
}

// SetInvoiceTitle gets a reference to the given string and assigns it to the InvoiceTitle field.
func (o *Invoice) SetInvoiceTitle(v string) {
	o.InvoiceTitle = &v
}

// GetInvoiceType returns the InvoiceType field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceType() int32 {
	if o == nil || IsNil(o.InvoiceType) {
		var ret int32
		return ret
	}
	return *o.InvoiceType
}

// GetInvoiceTypeOk returns a tuple with the InvoiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceType) {
		return nil, false
	}
	return o.InvoiceType, true
}

// HasInvoiceType returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceType() bool {
	if o != nil && !IsNil(o.InvoiceType) {
		return true
	}

	return false
}

// SetInvoiceType gets a reference to the given int32 and assigns it to the InvoiceType field.
func (o *Invoice) SetInvoiceType(v int32) {
	o.InvoiceType = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *Invoice) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *Invoice) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *Invoice) SetPhone(v string) {
	o.Phone = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *Invoice) GetReceiver() string {
	if o == nil || IsNil(o.Receiver) {
		var ret string
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetReceiverOk() (*string, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *Invoice) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given string and assigns it to the Receiver field.
func (o *Invoice) SetReceiver(v string) {
	o.Receiver = &v
}

// GetTaxNumber returns the TaxNumber field value if set, zero value otherwise.
func (o *Invoice) GetTaxNumber() string {
	if o == nil || IsNil(o.TaxNumber) {
		var ret string
		return ret
	}
	return *o.TaxNumber
}

// GetTaxNumberOk returns a tuple with the TaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxNumber) {
		return nil, false
	}
	return o.TaxNumber, true
}

// HasTaxNumber returns a boolean if a field has been set.
func (o *Invoice) HasTaxNumber() bool {
	if o != nil && !IsNil(o.TaxNumber) {
		return true
	}

	return false
}

// SetTaxNumber gets a reference to the given string and assigns it to the TaxNumber field.
func (o *Invoice) SetTaxNumber(v string) {
	o.TaxNumber = &v
}

// GetTitleType returns the TitleType field value if set, zero value otherwise.
func (o *Invoice) GetTitleType() int32 {
	if o == nil || IsNil(o.TitleType) {
		var ret int32
		return ret
	}
	return *o.TitleType
}

// GetTitleTypeOk returns a tuple with the TitleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTitleTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.TitleType) {
		return nil, false
	}
	return o.TitleType, true
}

// HasTitleType returns a boolean if a field has been set.
func (o *Invoice) HasTitleType() bool {
	if o != nil && !IsNil(o.TitleType) {
		return true
	}

	return false
}

// SetTitleType gets a reference to the given int32 and assigns it to the TitleType field.
func (o *Invoice) SetTitleType(v int32) {
	o.TitleType = &v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.InvoiceContent) {
		toSerialize["invoice_content"] = o.InvoiceContent
	}
	if !IsNil(o.InvoiceFee) {
		toSerialize["invoice_fee"] = o.InvoiceFee
	}
	if !IsNil(o.InvoiceTitle) {
		toSerialize["invoice_title"] = o.InvoiceTitle
	}
	if !IsNil(o.InvoiceType) {
		toSerialize["invoice_type"] = o.InvoiceType
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	if !IsNil(o.TaxNumber) {
		toSerialize["tax_number"] = o.TaxNumber
	}
	if !IsNil(o.TitleType) {
		toSerialize["title_type"] = o.TitleType
	}
	return toSerialize, nil
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



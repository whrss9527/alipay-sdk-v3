/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ItemSkuInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemSkuInfo{}

// ItemSkuInfo struct for ItemSkuInfo
type ItemSkuInfo struct {
	// 成本价，单位分
	CostPrice *int32 `json:"cost_price,omitempty"`
	// SKU扩展信息
	ExtInfo []ItemExtInfo `json:"ext_info,omitempty"`
	// 创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 更新时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 商品id
	ItemId *string `json:"item_id,omitempty"`
	// 标价，单位分
	OriginalPrice *int32 `json:"original_price,omitempty"`
	// 售价，单位分
	Price *int32 `json:"price,omitempty"`
	// 商品sku id
	SkuId *string `json:"sku_id,omitempty"`
	// 商品SKU状态：EFFECT、INVALID
	Status *string `json:"status,omitempty"`
}

// NewItemSkuInfo instantiates a new ItemSkuInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemSkuInfo() *ItemSkuInfo {
	this := ItemSkuInfo{}
	return &this
}

// NewItemSkuInfoWithDefaults instantiates a new ItemSkuInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemSkuInfoWithDefaults() *ItemSkuInfo {
	this := ItemSkuInfo{}
	return &this
}

// GetCostPrice returns the CostPrice field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetCostPrice() int32 {
	if o == nil || IsNil(o.CostPrice) {
		var ret int32
		return ret
	}
	return *o.CostPrice
}

// GetCostPriceOk returns a tuple with the CostPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetCostPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.CostPrice) {
		return nil, false
	}
	return o.CostPrice, true
}

// HasCostPrice returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasCostPrice() bool {
	if o != nil && !IsNil(o.CostPrice) {
		return true
	}

	return false
}

// SetCostPrice gets a reference to the given int32 and assigns it to the CostPrice field.
func (o *ItemSkuInfo) SetCostPrice(v int32) {
	o.CostPrice = &v
}

// GetExtInfo returns the ExtInfo field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetExtInfo() []ItemExtInfo {
	if o == nil || IsNil(o.ExtInfo) {
		var ret []ItemExtInfo
		return ret
	}
	return o.ExtInfo
}

// GetExtInfoOk returns a tuple with the ExtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetExtInfoOk() ([]ItemExtInfo, bool) {
	if o == nil || IsNil(o.ExtInfo) {
		return nil, false
	}
	return o.ExtInfo, true
}

// HasExtInfo returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasExtInfo() bool {
	if o != nil && !IsNil(o.ExtInfo) {
		return true
	}

	return false
}

// SetExtInfo gets a reference to the given []ItemExtInfo and assigns it to the ExtInfo field.
func (o *ItemSkuInfo) SetExtInfo(v []ItemExtInfo) {
	o.ExtInfo = v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *ItemSkuInfo) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *ItemSkuInfo) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ItemSkuInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetOriginalPrice returns the OriginalPrice field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetOriginalPrice() int32 {
	if o == nil || IsNil(o.OriginalPrice) {
		var ret int32
		return ret
	}
	return *o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetOriginalPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginalPrice) {
		return nil, false
	}
	return o.OriginalPrice, true
}

// HasOriginalPrice returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasOriginalPrice() bool {
	if o != nil && !IsNil(o.OriginalPrice) {
		return true
	}

	return false
}

// SetOriginalPrice gets a reference to the given int32 and assigns it to the OriginalPrice field.
func (o *ItemSkuInfo) SetOriginalPrice(v int32) {
	o.OriginalPrice = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *ItemSkuInfo) SetPrice(v int32) {
	o.Price = &v
}

// GetSkuId returns the SkuId field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetSkuId() string {
	if o == nil || IsNil(o.SkuId) {
		var ret string
		return ret
	}
	return *o.SkuId
}

// GetSkuIdOk returns a tuple with the SkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetSkuIdOk() (*string, bool) {
	if o == nil || IsNil(o.SkuId) {
		return nil, false
	}
	return o.SkuId, true
}

// HasSkuId returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasSkuId() bool {
	if o != nil && !IsNil(o.SkuId) {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given string and assigns it to the SkuId field.
func (o *ItemSkuInfo) SetSkuId(v string) {
	o.SkuId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ItemSkuInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSkuInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ItemSkuInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ItemSkuInfo) SetStatus(v string) {
	o.Status = &v
}

func (o ItemSkuInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemSkuInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CostPrice) {
		toSerialize["cost_price"] = o.CostPrice
	}
	if !IsNil(o.ExtInfo) {
		toSerialize["ext_info"] = o.ExtInfo
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.OriginalPrice) {
		toSerialize["original_price"] = o.OriginalPrice
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.SkuId) {
		toSerialize["sku_id"] = o.SkuId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableItemSkuInfo struct {
	value *ItemSkuInfo
	isSet bool
}

func (v NullableItemSkuInfo) Get() *ItemSkuInfo {
	return v.value
}

func (v *NullableItemSkuInfo) Set(val *ItemSkuInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableItemSkuInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableItemSkuInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemSkuInfo(val *ItemSkuInfo) *NullableItemSkuInfo {
	return &NullableItemSkuInfo{value: val, isSet: true}
}

func (v NullableItemSkuInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemSkuInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ShopCommentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopCommentInfo{}

// ShopCommentInfo struct for ShopCommentInfo
type ShopCommentInfo struct {
	// 店铺30天平均人气值
	AvgPopularity *string `json:"avg_popularity,omitempty"`
	// avg_popularity字段展示文案
	AvgPopularityName *string `json:"avg_popularity_name,omitempty"`
	// 门店评分，评分越高，门店质量越高
	Score *string `json:"score,omitempty"`
	// 门店星级，0~5,越高，店铺质量越高
	Star *string `json:"star,omitempty"`
}

// NewShopCommentInfo instantiates a new ShopCommentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopCommentInfo() *ShopCommentInfo {
	this := ShopCommentInfo{}
	return &this
}

// NewShopCommentInfoWithDefaults instantiates a new ShopCommentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopCommentInfoWithDefaults() *ShopCommentInfo {
	this := ShopCommentInfo{}
	return &this
}

// GetAvgPopularity returns the AvgPopularity field value if set, zero value otherwise.
func (o *ShopCommentInfo) GetAvgPopularity() string {
	if o == nil || IsNil(o.AvgPopularity) {
		var ret string
		return ret
	}
	return *o.AvgPopularity
}

// GetAvgPopularityOk returns a tuple with the AvgPopularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCommentInfo) GetAvgPopularityOk() (*string, bool) {
	if o == nil || IsNil(o.AvgPopularity) {
		return nil, false
	}
	return o.AvgPopularity, true
}

// HasAvgPopularity returns a boolean if a field has been set.
func (o *ShopCommentInfo) HasAvgPopularity() bool {
	if o != nil && !IsNil(o.AvgPopularity) {
		return true
	}

	return false
}

// SetAvgPopularity gets a reference to the given string and assigns it to the AvgPopularity field.
func (o *ShopCommentInfo) SetAvgPopularity(v string) {
	o.AvgPopularity = &v
}

// GetAvgPopularityName returns the AvgPopularityName field value if set, zero value otherwise.
func (o *ShopCommentInfo) GetAvgPopularityName() string {
	if o == nil || IsNil(o.AvgPopularityName) {
		var ret string
		return ret
	}
	return *o.AvgPopularityName
}

// GetAvgPopularityNameOk returns a tuple with the AvgPopularityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCommentInfo) GetAvgPopularityNameOk() (*string, bool) {
	if o == nil || IsNil(o.AvgPopularityName) {
		return nil, false
	}
	return o.AvgPopularityName, true
}

// HasAvgPopularityName returns a boolean if a field has been set.
func (o *ShopCommentInfo) HasAvgPopularityName() bool {
	if o != nil && !IsNil(o.AvgPopularityName) {
		return true
	}

	return false
}

// SetAvgPopularityName gets a reference to the given string and assigns it to the AvgPopularityName field.
func (o *ShopCommentInfo) SetAvgPopularityName(v string) {
	o.AvgPopularityName = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *ShopCommentInfo) GetScore() string {
	if o == nil || IsNil(o.Score) {
		var ret string
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCommentInfo) GetScoreOk() (*string, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *ShopCommentInfo) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given string and assigns it to the Score field.
func (o *ShopCommentInfo) SetScore(v string) {
	o.Score = &v
}

// GetStar returns the Star field value if set, zero value otherwise.
func (o *ShopCommentInfo) GetStar() string {
	if o == nil || IsNil(o.Star) {
		var ret string
		return ret
	}
	return *o.Star
}

// GetStarOk returns a tuple with the Star field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCommentInfo) GetStarOk() (*string, bool) {
	if o == nil || IsNil(o.Star) {
		return nil, false
	}
	return o.Star, true
}

// HasStar returns a boolean if a field has been set.
func (o *ShopCommentInfo) HasStar() bool {
	if o != nil && !IsNil(o.Star) {
		return true
	}

	return false
}

// SetStar gets a reference to the given string and assigns it to the Star field.
func (o *ShopCommentInfo) SetStar(v string) {
	o.Star = &v
}

func (o ShopCommentInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopCommentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvgPopularity) {
		toSerialize["avg_popularity"] = o.AvgPopularity
	}
	if !IsNil(o.AvgPopularityName) {
		toSerialize["avg_popularity_name"] = o.AvgPopularityName
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Star) {
		toSerialize["star"] = o.Star
	}
	return toSerialize, nil
}

type NullableShopCommentInfo struct {
	value *ShopCommentInfo
	isSet bool
}

func (v NullableShopCommentInfo) Get() *ShopCommentInfo {
	return v.value
}

func (v *NullableShopCommentInfo) Set(val *ShopCommentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableShopCommentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableShopCommentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopCommentInfo(val *ShopCommentInfo) *NullableShopCommentInfo {
	return &NullableShopCommentInfo{value: val, isSet: true}
}

func (v NullableShopCommentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopCommentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

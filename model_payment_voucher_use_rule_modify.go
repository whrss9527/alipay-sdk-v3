/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the PaymentVoucherUseRuleModify type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentVoucherUseRuleModify{}

// PaymentVoucherUseRuleModify struct for PaymentVoucherUseRuleModify
type PaymentVoucherUseRuleModify struct {
	// 可核销的支付宝小程序id   限制：  1、必须是支付宝小程序  2、如果包含重复的小程序id会自动进行去重操作。 3、可核销小程序范围只能扩大不能缩小
	AvailableAppIds   *string                                `json:"available_app_ids,omitempty"`
	AvailableGoods    *PaymentVoucherAvailableGoodsModify    `json:"available_goods,omitempty"`
	AvailableMerchant *PaymentVoucherAvailableMerchantModify `json:"available_merchant,omitempty"`
	// 可核销支付门店id。   限制：  1、available_store_ids中的门店id必须是支付宝门店id。  2、available_store_ids如果包含重复的门店id会自动进行去重操作。 3、可核销门店范围只能扩大不能缩小
	AvailableStoreIds  *string                          `json:"available_store_ids,omitempty"`
	VoucherValidPeriod *PaymentVoucherValidPeriodModify `json:"voucher_valid_period,omitempty"`
}

// NewPaymentVoucherUseRuleModify instantiates a new PaymentVoucherUseRuleModify object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentVoucherUseRuleModify() *PaymentVoucherUseRuleModify {
	this := PaymentVoucherUseRuleModify{}
	return &this
}

// NewPaymentVoucherUseRuleModifyWithDefaults instantiates a new PaymentVoucherUseRuleModify object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentVoucherUseRuleModifyWithDefaults() *PaymentVoucherUseRuleModify {
	this := PaymentVoucherUseRuleModify{}
	return &this
}

// GetAvailableAppIds returns the AvailableAppIds field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleModify) GetAvailableAppIds() string {
	if o == nil || IsNil(o.AvailableAppIds) {
		var ret string
		return ret
	}
	return *o.AvailableAppIds
}

// GetAvailableAppIdsOk returns a tuple with the AvailableAppIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleModify) GetAvailableAppIdsOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableAppIds) {
		return nil, false
	}
	return o.AvailableAppIds, true
}

// HasAvailableAppIds returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleModify) HasAvailableAppIds() bool {
	if o != nil && !IsNil(o.AvailableAppIds) {
		return true
	}

	return false
}

// SetAvailableAppIds gets a reference to the given string and assigns it to the AvailableAppIds field.
func (o *PaymentVoucherUseRuleModify) SetAvailableAppIds(v string) {
	o.AvailableAppIds = &v
}

// GetAvailableGoods returns the AvailableGoods field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleModify) GetAvailableGoods() PaymentVoucherAvailableGoodsModify {
	if o == nil || IsNil(o.AvailableGoods) {
		var ret PaymentVoucherAvailableGoodsModify
		return ret
	}
	return *o.AvailableGoods
}

// GetAvailableGoodsOk returns a tuple with the AvailableGoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleModify) GetAvailableGoodsOk() (*PaymentVoucherAvailableGoodsModify, bool) {
	if o == nil || IsNil(o.AvailableGoods) {
		return nil, false
	}
	return o.AvailableGoods, true
}

// HasAvailableGoods returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleModify) HasAvailableGoods() bool {
	if o != nil && !IsNil(o.AvailableGoods) {
		return true
	}

	return false
}

// SetAvailableGoods gets a reference to the given PaymentVoucherAvailableGoodsModify and assigns it to the AvailableGoods field.
func (o *PaymentVoucherUseRuleModify) SetAvailableGoods(v PaymentVoucherAvailableGoodsModify) {
	o.AvailableGoods = &v
}

// GetAvailableMerchant returns the AvailableMerchant field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleModify) GetAvailableMerchant() PaymentVoucherAvailableMerchantModify {
	if o == nil || IsNil(o.AvailableMerchant) {
		var ret PaymentVoucherAvailableMerchantModify
		return ret
	}
	return *o.AvailableMerchant
}

// GetAvailableMerchantOk returns a tuple with the AvailableMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleModify) GetAvailableMerchantOk() (*PaymentVoucherAvailableMerchantModify, bool) {
	if o == nil || IsNil(o.AvailableMerchant) {
		return nil, false
	}
	return o.AvailableMerchant, true
}

// HasAvailableMerchant returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleModify) HasAvailableMerchant() bool {
	if o != nil && !IsNil(o.AvailableMerchant) {
		return true
	}

	return false
}

// SetAvailableMerchant gets a reference to the given PaymentVoucherAvailableMerchantModify and assigns it to the AvailableMerchant field.
func (o *PaymentVoucherUseRuleModify) SetAvailableMerchant(v PaymentVoucherAvailableMerchantModify) {
	o.AvailableMerchant = &v
}

// GetAvailableStoreIds returns the AvailableStoreIds field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleModify) GetAvailableStoreIds() string {
	if o == nil || IsNil(o.AvailableStoreIds) {
		var ret string
		return ret
	}
	return *o.AvailableStoreIds
}

// GetAvailableStoreIdsOk returns a tuple with the AvailableStoreIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleModify) GetAvailableStoreIdsOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableStoreIds) {
		return nil, false
	}
	return o.AvailableStoreIds, true
}

// HasAvailableStoreIds returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleModify) HasAvailableStoreIds() bool {
	if o != nil && !IsNil(o.AvailableStoreIds) {
		return true
	}

	return false
}

// SetAvailableStoreIds gets a reference to the given string and assigns it to the AvailableStoreIds field.
func (o *PaymentVoucherUseRuleModify) SetAvailableStoreIds(v string) {
	o.AvailableStoreIds = &v
}

// GetVoucherValidPeriod returns the VoucherValidPeriod field value if set, zero value otherwise.
func (o *PaymentVoucherUseRuleModify) GetVoucherValidPeriod() PaymentVoucherValidPeriodModify {
	if o == nil || IsNil(o.VoucherValidPeriod) {
		var ret PaymentVoucherValidPeriodModify
		return ret
	}
	return *o.VoucherValidPeriod
}

// GetVoucherValidPeriodOk returns a tuple with the VoucherValidPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVoucherUseRuleModify) GetVoucherValidPeriodOk() (*PaymentVoucherValidPeriodModify, bool) {
	if o == nil || IsNil(o.VoucherValidPeriod) {
		return nil, false
	}
	return o.VoucherValidPeriod, true
}

// HasVoucherValidPeriod returns a boolean if a field has been set.
func (o *PaymentVoucherUseRuleModify) HasVoucherValidPeriod() bool {
	if o != nil && !IsNil(o.VoucherValidPeriod) {
		return true
	}

	return false
}

// SetVoucherValidPeriod gets a reference to the given PaymentVoucherValidPeriodModify and assigns it to the VoucherValidPeriod field.
func (o *PaymentVoucherUseRuleModify) SetVoucherValidPeriod(v PaymentVoucherValidPeriodModify) {
	o.VoucherValidPeriod = &v
}

func (o PaymentVoucherUseRuleModify) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentVoucherUseRuleModify) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableAppIds) {
		toSerialize["available_app_ids"] = o.AvailableAppIds
	}
	if !IsNil(o.AvailableGoods) {
		toSerialize["available_goods"] = o.AvailableGoods
	}
	if !IsNil(o.AvailableMerchant) {
		toSerialize["available_merchant"] = o.AvailableMerchant
	}
	if !IsNil(o.AvailableStoreIds) {
		toSerialize["available_store_ids"] = o.AvailableStoreIds
	}
	if !IsNil(o.VoucherValidPeriod) {
		toSerialize["voucher_valid_period"] = o.VoucherValidPeriod
	}
	return toSerialize, nil
}

type NullablePaymentVoucherUseRuleModify struct {
	value *PaymentVoucherUseRuleModify
	isSet bool
}

func (v NullablePaymentVoucherUseRuleModify) Get() *PaymentVoucherUseRuleModify {
	return v.value
}

func (v *NullablePaymentVoucherUseRuleModify) Set(val *PaymentVoucherUseRuleModify) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentVoucherUseRuleModify) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentVoucherUseRuleModify) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentVoucherUseRuleModify(val *PaymentVoucherUseRuleModify) *NullablePaymentVoucherUseRuleModify {
	return &NullablePaymentVoucherUseRuleModify{value: val, isSet: true}
}

func (v NullablePaymentVoucherUseRuleModify) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentVoucherUseRuleModify) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

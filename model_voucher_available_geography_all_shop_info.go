/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoucherAvailableGeographyAllShopInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherAvailableGeographyAllShopInfo{}

// VoucherAvailableGeographyAllShopInfo struct for VoucherAvailableGeographyAllShopInfo
type VoucherAvailableGeographyAllShopInfo struct {
	// 全部门店可用的品牌ID 提示: 1.目前只支持传入当前券归属商户的品牌ID 2.品牌ID可以在登录b.alipay.com-账户中心-品牌管理里查看。如果没有品牌，可以先创建品牌。Sop： 注意事项 1.只支持传入单个品牌ID 2.传入品牌ID后，券的商户品牌和logo仍以voucher_display_pattern_info传入为准。
	AvailableBrandId *string `json:"available_brand_id,omitempty"`
	// 券不可使用的门店列表。指定商户全部门店可用时可通过该字段排除部分不可用门店。 列表中的门店id是通过调用接口ant.merchant.expand.shop.create创建门店返回的支付宝门店id 接口参数是列表类型。
	ExcludeShopIds []string `json:"exclude_shop_ids,omitempty"`
	// 全部门店可用的商户ID
	MerchantIds []string `json:"merchant_ids,omitempty"`
}

// NewVoucherAvailableGeographyAllShopInfo instantiates a new VoucherAvailableGeographyAllShopInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherAvailableGeographyAllShopInfo() *VoucherAvailableGeographyAllShopInfo {
	this := VoucherAvailableGeographyAllShopInfo{}
	return &this
}

// NewVoucherAvailableGeographyAllShopInfoWithDefaults instantiates a new VoucherAvailableGeographyAllShopInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherAvailableGeographyAllShopInfoWithDefaults() *VoucherAvailableGeographyAllShopInfo {
	this := VoucherAvailableGeographyAllShopInfo{}
	return &this
}

// GetAvailableBrandId returns the AvailableBrandId field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyAllShopInfo) GetAvailableBrandId() string {
	if o == nil || IsNil(o.AvailableBrandId) {
		var ret string
		return ret
	}
	return *o.AvailableBrandId
}

// GetAvailableBrandIdOk returns a tuple with the AvailableBrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyAllShopInfo) GetAvailableBrandIdOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableBrandId) {
		return nil, false
	}
	return o.AvailableBrandId, true
}

// HasAvailableBrandId returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyAllShopInfo) HasAvailableBrandId() bool {
	if o != nil && !IsNil(o.AvailableBrandId) {
		return true
	}

	return false
}

// SetAvailableBrandId gets a reference to the given string and assigns it to the AvailableBrandId field.
func (o *VoucherAvailableGeographyAllShopInfo) SetAvailableBrandId(v string) {
	o.AvailableBrandId = &v
}

// GetExcludeShopIds returns the ExcludeShopIds field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyAllShopInfo) GetExcludeShopIds() []string {
	if o == nil || IsNil(o.ExcludeShopIds) {
		var ret []string
		return ret
	}
	return o.ExcludeShopIds
}

// GetExcludeShopIdsOk returns a tuple with the ExcludeShopIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyAllShopInfo) GetExcludeShopIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeShopIds) {
		return nil, false
	}
	return o.ExcludeShopIds, true
}

// HasExcludeShopIds returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyAllShopInfo) HasExcludeShopIds() bool {
	if o != nil && !IsNil(o.ExcludeShopIds) {
		return true
	}

	return false
}

// SetExcludeShopIds gets a reference to the given []string and assigns it to the ExcludeShopIds field.
func (o *VoucherAvailableGeographyAllShopInfo) SetExcludeShopIds(v []string) {
	o.ExcludeShopIds = v
}

// GetMerchantIds returns the MerchantIds field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyAllShopInfo) GetMerchantIds() []string {
	if o == nil || IsNil(o.MerchantIds) {
		var ret []string
		return ret
	}
	return o.MerchantIds
}

// GetMerchantIdsOk returns a tuple with the MerchantIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyAllShopInfo) GetMerchantIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MerchantIds) {
		return nil, false
	}
	return o.MerchantIds, true
}

// HasMerchantIds returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyAllShopInfo) HasMerchantIds() bool {
	if o != nil && !IsNil(o.MerchantIds) {
		return true
	}

	return false
}

// SetMerchantIds gets a reference to the given []string and assigns it to the MerchantIds field.
func (o *VoucherAvailableGeographyAllShopInfo) SetMerchantIds(v []string) {
	o.MerchantIds = v
}

func (o VoucherAvailableGeographyAllShopInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherAvailableGeographyAllShopInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableBrandId) {
		toSerialize["available_brand_id"] = o.AvailableBrandId
	}
	if !IsNil(o.ExcludeShopIds) {
		toSerialize["exclude_shop_ids"] = o.ExcludeShopIds
	}
	if !IsNil(o.MerchantIds) {
		toSerialize["merchant_ids"] = o.MerchantIds
	}
	return toSerialize, nil
}

type NullableVoucherAvailableGeographyAllShopInfo struct {
	value *VoucherAvailableGeographyAllShopInfo
	isSet bool
}

func (v NullableVoucherAvailableGeographyAllShopInfo) Get() *VoucherAvailableGeographyAllShopInfo {
	return v.value
}

func (v *NullableVoucherAvailableGeographyAllShopInfo) Set(val *VoucherAvailableGeographyAllShopInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherAvailableGeographyAllShopInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherAvailableGeographyAllShopInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherAvailableGeographyAllShopInfo(val *VoucherAvailableGeographyAllShopInfo) *NullableVoucherAvailableGeographyAllShopInfo {
	return &NullableVoucherAvailableGeographyAllShopInfo{value: val, isSet: true}
}

func (v NullableVoucherAvailableGeographyAllShopInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherAvailableGeographyAllShopInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



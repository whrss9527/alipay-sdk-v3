/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the GoodsDetailIstd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsDetailIstd{}

// GoodsDetailIstd struct for GoodsDetailIstd
type GoodsDetailIstd struct {
	// 商品数量
	Count *int32 `json:"count,omitempty"`
	// 商品名称
	Name *string `json:"name,omitempty"`
	// 商品单价
	Price *string `json:"price,omitempty"`
	// 商品单位
	Unit *string `json:"unit,omitempty"`
}

// NewGoodsDetailIstd instantiates a new GoodsDetailIstd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsDetailIstd() *GoodsDetailIstd {
	this := GoodsDetailIstd{}
	return &this
}

// NewGoodsDetailIstdWithDefaults instantiates a new GoodsDetailIstd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsDetailIstdWithDefaults() *GoodsDetailIstd {
	this := GoodsDetailIstd{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GoodsDetailIstd) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailIstd) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GoodsDetailIstd) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GoodsDetailIstd) SetCount(v int32) {
	o.Count = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GoodsDetailIstd) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailIstd) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GoodsDetailIstd) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GoodsDetailIstd) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GoodsDetailIstd) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailIstd) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GoodsDetailIstd) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *GoodsDetailIstd) SetPrice(v string) {
	o.Price = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *GoodsDetailIstd) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsDetailIstd) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *GoodsDetailIstd) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *GoodsDetailIstd) SetUnit(v string) {
	o.Unit = &v
}

func (o GoodsDetailIstd) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsDetailIstd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableGoodsDetailIstd struct {
	value *GoodsDetailIstd
	isSet bool
}

func (v NullableGoodsDetailIstd) Get() *GoodsDetailIstd {
	return v.value
}

func (v *NullableGoodsDetailIstd) Set(val *GoodsDetailIstd) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsDetailIstd) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsDetailIstd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsDetailIstd(val *GoodsDetailIstd) *NullableGoodsDetailIstd {
	return &NullableGoodsDetailIstd{value: val, isSet: true}
}

func (v NullableGoodsDetailIstd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsDetailIstd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExpenseConsumeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpenseConsumeInfo{}

// ExpenseConsumeInfo struct for ExpenseConsumeInfo
type ExpenseConsumeInfo struct {
	// 企业ID
	AccountId *string `json:"account_id,omitempty"`
	// 实际出资企业支付宝账号
	ActualAccountNumber *string `json:"actual_account_number,omitempty"`
	// 汇总批次ID(废弃)
	BatchId *string `json:"batch_id,omitempty"`
	// 支付流水号
	BillNo *string `json:"bill_no,omitempty"`
	// 账单类型（CONSUME-消费账单、REFUND-退款、TRANSFER-转账）
	BillType *string `json:"bill_type,omitempty"`
	// 账单行业分类（交通出行，餐饮美食，商业服务，日用百货等等）
	CategoryName *string `json:"category_name,omitempty"`
	// 账单金额（单位：元）
	ConsumeAmount *string `json:"consume_amount,omitempty"`
	// 交易日期
	ConsumeDate *string `json:"consume_date,omitempty"`
	// 账单展示标题
	ConsumeTitle *string `json:"consume_title,omitempty"`
	// 所属员工支付宝uid
	EmployeeId *string `json:"employee_id,omitempty"`
	// 所属员工支付宝uid
	EmployeeOpenId *string `json:"employee_open_id,omitempty"`
	// 商户id
	MerchantId *string `json:"merchant_id,omitempty"`
	// 门店id
	MshopId *string `json:"mshop_id,omitempty"`
	// 开票模式（汇总开：ENTERPRISE_AUTO_BATCH）
	OpenModel *string `json:"open_model,omitempty"`
	// 退款交易关联正交易单号(对应正交易的bill_no)
	OriginalVoucherId *string `json:"original_voucher_id,omitempty"`
	// 外部流水号
	OutBizNo *string `json:"out_biz_no,omitempty"`
	// 企业支付金额（单位：元）
	PPayAmount *string `json:"p_pay_amount,omitempty"`
	// 商家名称
	PayeeName *string `json:"payee_name,omitempty"`
	// 费控规则中的项目ID
	ProjectId *string `json:"project_id,omitempty"`
	// 支付使用的项目号（成本中心）此字段废弃
	ProjiectId *string `json:"projiect_id,omitempty"`
	// 消费账单的退款金额（元）
	RefundAmount *string `json:"refund_amount,omitempty"`
	// 消费账单的退款状态
	RefundStatus *string `json:"refund_status,omitempty"`
	// 费控规则ID
	StandardId *string `json:"standard_id,omitempty"`
	// 外部门店id
	StoreId *string `json:"store_id,omitempty"`
	// 批次id
	SummaryId *string `json:"summary_id,omitempty"`
	// 出资类型： PERSONAL:个人垫付 ENTERPRISE:企业垫资 TP:三方合作伙伴垫资 ACCOUNTING:记账
	TpSign *string `json:"tp_sign,omitempty"`
	// 凭证ID
	VoucherId *string `json:"voucher_id,omitempty"`
}

// NewExpenseConsumeInfo instantiates a new ExpenseConsumeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpenseConsumeInfo() *ExpenseConsumeInfo {
	this := ExpenseConsumeInfo{}
	return &this
}

// NewExpenseConsumeInfoWithDefaults instantiates a new ExpenseConsumeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpenseConsumeInfoWithDefaults() *ExpenseConsumeInfo {
	this := ExpenseConsumeInfo{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ExpenseConsumeInfo) SetAccountId(v string) {
	o.AccountId = &v
}

// GetActualAccountNumber returns the ActualAccountNumber field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetActualAccountNumber() string {
	if o == nil || IsNil(o.ActualAccountNumber) {
		var ret string
		return ret
	}
	return *o.ActualAccountNumber
}

// GetActualAccountNumberOk returns a tuple with the ActualAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetActualAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ActualAccountNumber) {
		return nil, false
	}
	return o.ActualAccountNumber, true
}

// HasActualAccountNumber returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasActualAccountNumber() bool {
	if o != nil && !IsNil(o.ActualAccountNumber) {
		return true
	}

	return false
}

// SetActualAccountNumber gets a reference to the given string and assigns it to the ActualAccountNumber field.
func (o *ExpenseConsumeInfo) SetActualAccountNumber(v string) {
	o.ActualAccountNumber = &v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetBatchId() string {
	if o == nil || IsNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *ExpenseConsumeInfo) SetBatchId(v string) {
	o.BatchId = &v
}

// GetBillNo returns the BillNo field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetBillNo() string {
	if o == nil || IsNil(o.BillNo) {
		var ret string
		return ret
	}
	return *o.BillNo
}

// GetBillNoOk returns a tuple with the BillNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetBillNoOk() (*string, bool) {
	if o == nil || IsNil(o.BillNo) {
		return nil, false
	}
	return o.BillNo, true
}

// HasBillNo returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasBillNo() bool {
	if o != nil && !IsNil(o.BillNo) {
		return true
	}

	return false
}

// SetBillNo gets a reference to the given string and assigns it to the BillNo field.
func (o *ExpenseConsumeInfo) SetBillNo(v string) {
	o.BillNo = &v
}

// GetBillType returns the BillType field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetBillType() string {
	if o == nil || IsNil(o.BillType) {
		var ret string
		return ret
	}
	return *o.BillType
}

// GetBillTypeOk returns a tuple with the BillType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetBillTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BillType) {
		return nil, false
	}
	return o.BillType, true
}

// HasBillType returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasBillType() bool {
	if o != nil && !IsNil(o.BillType) {
		return true
	}

	return false
}

// SetBillType gets a reference to the given string and assigns it to the BillType field.
func (o *ExpenseConsumeInfo) SetBillType(v string) {
	o.BillType = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetCategoryName() string {
	if o == nil || IsNil(o.CategoryName) {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryName) {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasCategoryName() bool {
	if o != nil && !IsNil(o.CategoryName) {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *ExpenseConsumeInfo) SetCategoryName(v string) {
	o.CategoryName = &v
}

// GetConsumeAmount returns the ConsumeAmount field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetConsumeAmount() string {
	if o == nil || IsNil(o.ConsumeAmount) {
		var ret string
		return ret
	}
	return *o.ConsumeAmount
}

// GetConsumeAmountOk returns a tuple with the ConsumeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetConsumeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeAmount) {
		return nil, false
	}
	return o.ConsumeAmount, true
}

// HasConsumeAmount returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasConsumeAmount() bool {
	if o != nil && !IsNil(o.ConsumeAmount) {
		return true
	}

	return false
}

// SetConsumeAmount gets a reference to the given string and assigns it to the ConsumeAmount field.
func (o *ExpenseConsumeInfo) SetConsumeAmount(v string) {
	o.ConsumeAmount = &v
}

// GetConsumeDate returns the ConsumeDate field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetConsumeDate() string {
	if o == nil || IsNil(o.ConsumeDate) {
		var ret string
		return ret
	}
	return *o.ConsumeDate
}

// GetConsumeDateOk returns a tuple with the ConsumeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetConsumeDateOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeDate) {
		return nil, false
	}
	return o.ConsumeDate, true
}

// HasConsumeDate returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasConsumeDate() bool {
	if o != nil && !IsNil(o.ConsumeDate) {
		return true
	}

	return false
}

// SetConsumeDate gets a reference to the given string and assigns it to the ConsumeDate field.
func (o *ExpenseConsumeInfo) SetConsumeDate(v string) {
	o.ConsumeDate = &v
}

// GetConsumeTitle returns the ConsumeTitle field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetConsumeTitle() string {
	if o == nil || IsNil(o.ConsumeTitle) {
		var ret string
		return ret
	}
	return *o.ConsumeTitle
}

// GetConsumeTitleOk returns a tuple with the ConsumeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetConsumeTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeTitle) {
		return nil, false
	}
	return o.ConsumeTitle, true
}

// HasConsumeTitle returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasConsumeTitle() bool {
	if o != nil && !IsNil(o.ConsumeTitle) {
		return true
	}

	return false
}

// SetConsumeTitle gets a reference to the given string and assigns it to the ConsumeTitle field.
func (o *ExpenseConsumeInfo) SetConsumeTitle(v string) {
	o.ConsumeTitle = &v
}

// GetEmployeeId returns the EmployeeId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetEmployeeId() string {
	if o == nil || IsNil(o.EmployeeId) {
		var ret string
		return ret
	}
	return *o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetEmployeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeId) {
		return nil, false
	}
	return o.EmployeeId, true
}

// HasEmployeeId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasEmployeeId() bool {
	if o != nil && !IsNil(o.EmployeeId) {
		return true
	}

	return false
}

// SetEmployeeId gets a reference to the given string and assigns it to the EmployeeId field.
func (o *ExpenseConsumeInfo) SetEmployeeId(v string) {
	o.EmployeeId = &v
}

// GetEmployeeOpenId returns the EmployeeOpenId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetEmployeeOpenId() string {
	if o == nil || IsNil(o.EmployeeOpenId) {
		var ret string
		return ret
	}
	return *o.EmployeeOpenId
}

// GetEmployeeOpenIdOk returns a tuple with the EmployeeOpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetEmployeeOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeOpenId) {
		return nil, false
	}
	return o.EmployeeOpenId, true
}

// HasEmployeeOpenId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasEmployeeOpenId() bool {
	if o != nil && !IsNil(o.EmployeeOpenId) {
		return true
	}

	return false
}

// SetEmployeeOpenId gets a reference to the given string and assigns it to the EmployeeOpenId field.
func (o *ExpenseConsumeInfo) SetEmployeeOpenId(v string) {
	o.EmployeeOpenId = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetMerchantId() string {
	if o == nil || IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *ExpenseConsumeInfo) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetMshopId returns the MshopId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetMshopId() string {
	if o == nil || IsNil(o.MshopId) {
		var ret string
		return ret
	}
	return *o.MshopId
}

// GetMshopIdOk returns a tuple with the MshopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetMshopIdOk() (*string, bool) {
	if o == nil || IsNil(o.MshopId) {
		return nil, false
	}
	return o.MshopId, true
}

// HasMshopId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasMshopId() bool {
	if o != nil && !IsNil(o.MshopId) {
		return true
	}

	return false
}

// SetMshopId gets a reference to the given string and assigns it to the MshopId field.
func (o *ExpenseConsumeInfo) SetMshopId(v string) {
	o.MshopId = &v
}

// GetOpenModel returns the OpenModel field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetOpenModel() string {
	if o == nil || IsNil(o.OpenModel) {
		var ret string
		return ret
	}
	return *o.OpenModel
}

// GetOpenModelOk returns a tuple with the OpenModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetOpenModelOk() (*string, bool) {
	if o == nil || IsNil(o.OpenModel) {
		return nil, false
	}
	return o.OpenModel, true
}

// HasOpenModel returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasOpenModel() bool {
	if o != nil && !IsNil(o.OpenModel) {
		return true
	}

	return false
}

// SetOpenModel gets a reference to the given string and assigns it to the OpenModel field.
func (o *ExpenseConsumeInfo) SetOpenModel(v string) {
	o.OpenModel = &v
}

// GetOriginalVoucherId returns the OriginalVoucherId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetOriginalVoucherId() string {
	if o == nil || IsNil(o.OriginalVoucherId) {
		var ret string
		return ret
	}
	return *o.OriginalVoucherId
}

// GetOriginalVoucherIdOk returns a tuple with the OriginalVoucherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetOriginalVoucherIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalVoucherId) {
		return nil, false
	}
	return o.OriginalVoucherId, true
}

// HasOriginalVoucherId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasOriginalVoucherId() bool {
	if o != nil && !IsNil(o.OriginalVoucherId) {
		return true
	}

	return false
}

// SetOriginalVoucherId gets a reference to the given string and assigns it to the OriginalVoucherId field.
func (o *ExpenseConsumeInfo) SetOriginalVoucherId(v string) {
	o.OriginalVoucherId = &v
}

// GetOutBizNo returns the OutBizNo field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetOutBizNo() string {
	if o == nil || IsNil(o.OutBizNo) {
		var ret string
		return ret
	}
	return *o.OutBizNo
}

// GetOutBizNoOk returns a tuple with the OutBizNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetOutBizNoOk() (*string, bool) {
	if o == nil || IsNil(o.OutBizNo) {
		return nil, false
	}
	return o.OutBizNo, true
}

// HasOutBizNo returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasOutBizNo() bool {
	if o != nil && !IsNil(o.OutBizNo) {
		return true
	}

	return false
}

// SetOutBizNo gets a reference to the given string and assigns it to the OutBizNo field.
func (o *ExpenseConsumeInfo) SetOutBizNo(v string) {
	o.OutBizNo = &v
}

// GetPPayAmount returns the PPayAmount field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetPPayAmount() string {
	if o == nil || IsNil(o.PPayAmount) {
		var ret string
		return ret
	}
	return *o.PPayAmount
}

// GetPPayAmountOk returns a tuple with the PPayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetPPayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PPayAmount) {
		return nil, false
	}
	return o.PPayAmount, true
}

// HasPPayAmount returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasPPayAmount() bool {
	if o != nil && !IsNil(o.PPayAmount) {
		return true
	}

	return false
}

// SetPPayAmount gets a reference to the given string and assigns it to the PPayAmount field.
func (o *ExpenseConsumeInfo) SetPPayAmount(v string) {
	o.PPayAmount = &v
}

// GetPayeeName returns the PayeeName field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetPayeeName() string {
	if o == nil || IsNil(o.PayeeName) {
		var ret string
		return ret
	}
	return *o.PayeeName
}

// GetPayeeNameOk returns a tuple with the PayeeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetPayeeNameOk() (*string, bool) {
	if o == nil || IsNil(o.PayeeName) {
		return nil, false
	}
	return o.PayeeName, true
}

// HasPayeeName returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasPayeeName() bool {
	if o != nil && !IsNil(o.PayeeName) {
		return true
	}

	return false
}

// SetPayeeName gets a reference to the given string and assigns it to the PayeeName field.
func (o *ExpenseConsumeInfo) SetPayeeName(v string) {
	o.PayeeName = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ExpenseConsumeInfo) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjiectId returns the ProjiectId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetProjiectId() string {
	if o == nil || IsNil(o.ProjiectId) {
		var ret string
		return ret
	}
	return *o.ProjiectId
}

// GetProjiectIdOk returns a tuple with the ProjiectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetProjiectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjiectId) {
		return nil, false
	}
	return o.ProjiectId, true
}

// HasProjiectId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasProjiectId() bool {
	if o != nil && !IsNil(o.ProjiectId) {
		return true
	}

	return false
}

// SetProjiectId gets a reference to the given string and assigns it to the ProjiectId field.
func (o *ExpenseConsumeInfo) SetProjiectId(v string) {
	o.ProjiectId = &v
}

// GetRefundAmount returns the RefundAmount field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetRefundAmount() string {
	if o == nil || IsNil(o.RefundAmount) {
		var ret string
		return ret
	}
	return *o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetRefundAmountOk() (*string, bool) {
	if o == nil || IsNil(o.RefundAmount) {
		return nil, false
	}
	return o.RefundAmount, true
}

// HasRefundAmount returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasRefundAmount() bool {
	if o != nil && !IsNil(o.RefundAmount) {
		return true
	}

	return false
}

// SetRefundAmount gets a reference to the given string and assigns it to the RefundAmount field.
func (o *ExpenseConsumeInfo) SetRefundAmount(v string) {
	o.RefundAmount = &v
}

// GetRefundStatus returns the RefundStatus field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetRefundStatus() string {
	if o == nil || IsNil(o.RefundStatus) {
		var ret string
		return ret
	}
	return *o.RefundStatus
}

// GetRefundStatusOk returns a tuple with the RefundStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetRefundStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RefundStatus) {
		return nil, false
	}
	return o.RefundStatus, true
}

// HasRefundStatus returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasRefundStatus() bool {
	if o != nil && !IsNil(o.RefundStatus) {
		return true
	}

	return false
}

// SetRefundStatus gets a reference to the given string and assigns it to the RefundStatus field.
func (o *ExpenseConsumeInfo) SetRefundStatus(v string) {
	o.RefundStatus = &v
}

// GetStandardId returns the StandardId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetStandardId() string {
	if o == nil || IsNil(o.StandardId) {
		var ret string
		return ret
	}
	return *o.StandardId
}

// GetStandardIdOk returns a tuple with the StandardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetStandardIdOk() (*string, bool) {
	if o == nil || IsNil(o.StandardId) {
		return nil, false
	}
	return o.StandardId, true
}

// HasStandardId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasStandardId() bool {
	if o != nil && !IsNil(o.StandardId) {
		return true
	}

	return false
}

// SetStandardId gets a reference to the given string and assigns it to the StandardId field.
func (o *ExpenseConsumeInfo) SetStandardId(v string) {
	o.StandardId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *ExpenseConsumeInfo) SetStoreId(v string) {
	o.StoreId = &v
}

// GetSummaryId returns the SummaryId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetSummaryId() string {
	if o == nil || IsNil(o.SummaryId) {
		var ret string
		return ret
	}
	return *o.SummaryId
}

// GetSummaryIdOk returns a tuple with the SummaryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetSummaryIdOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryId) {
		return nil, false
	}
	return o.SummaryId, true
}

// HasSummaryId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasSummaryId() bool {
	if o != nil && !IsNil(o.SummaryId) {
		return true
	}

	return false
}

// SetSummaryId gets a reference to the given string and assigns it to the SummaryId field.
func (o *ExpenseConsumeInfo) SetSummaryId(v string) {
	o.SummaryId = &v
}

// GetTpSign returns the TpSign field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetTpSign() string {
	if o == nil || IsNil(o.TpSign) {
		var ret string
		return ret
	}
	return *o.TpSign
}

// GetTpSignOk returns a tuple with the TpSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetTpSignOk() (*string, bool) {
	if o == nil || IsNil(o.TpSign) {
		return nil, false
	}
	return o.TpSign, true
}

// HasTpSign returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasTpSign() bool {
	if o != nil && !IsNil(o.TpSign) {
		return true
	}

	return false
}

// SetTpSign gets a reference to the given string and assigns it to the TpSign field.
func (o *ExpenseConsumeInfo) SetTpSign(v string) {
	o.TpSign = &v
}

// GetVoucherId returns the VoucherId field value if set, zero value otherwise.
func (o *ExpenseConsumeInfo) GetVoucherId() string {
	if o == nil || IsNil(o.VoucherId) {
		var ret string
		return ret
	}
	return *o.VoucherId
}

// GetVoucherIdOk returns a tuple with the VoucherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpenseConsumeInfo) GetVoucherIdOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherId) {
		return nil, false
	}
	return o.VoucherId, true
}

// HasVoucherId returns a boolean if a field has been set.
func (o *ExpenseConsumeInfo) HasVoucherId() bool {
	if o != nil && !IsNil(o.VoucherId) {
		return true
	}

	return false
}

// SetVoucherId gets a reference to the given string and assigns it to the VoucherId field.
func (o *ExpenseConsumeInfo) SetVoucherId(v string) {
	o.VoucherId = &v
}

func (o ExpenseConsumeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpenseConsumeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.ActualAccountNumber) {
		toSerialize["actual_account_number"] = o.ActualAccountNumber
	}
	if !IsNil(o.BatchId) {
		toSerialize["batch_id"] = o.BatchId
	}
	if !IsNil(o.BillNo) {
		toSerialize["bill_no"] = o.BillNo
	}
	if !IsNil(o.BillType) {
		toSerialize["bill_type"] = o.BillType
	}
	if !IsNil(o.CategoryName) {
		toSerialize["category_name"] = o.CategoryName
	}
	if !IsNil(o.ConsumeAmount) {
		toSerialize["consume_amount"] = o.ConsumeAmount
	}
	if !IsNil(o.ConsumeDate) {
		toSerialize["consume_date"] = o.ConsumeDate
	}
	if !IsNil(o.ConsumeTitle) {
		toSerialize["consume_title"] = o.ConsumeTitle
	}
	if !IsNil(o.EmployeeId) {
		toSerialize["employee_id"] = o.EmployeeId
	}
	if !IsNil(o.EmployeeOpenId) {
		toSerialize["employee_open_id"] = o.EmployeeOpenId
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchant_id"] = o.MerchantId
	}
	if !IsNil(o.MshopId) {
		toSerialize["mshop_id"] = o.MshopId
	}
	if !IsNil(o.OpenModel) {
		toSerialize["open_model"] = o.OpenModel
	}
	if !IsNil(o.OriginalVoucherId) {
		toSerialize["original_voucher_id"] = o.OriginalVoucherId
	}
	if !IsNil(o.OutBizNo) {
		toSerialize["out_biz_no"] = o.OutBizNo
	}
	if !IsNil(o.PPayAmount) {
		toSerialize["p_pay_amount"] = o.PPayAmount
	}
	if !IsNil(o.PayeeName) {
		toSerialize["payee_name"] = o.PayeeName
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.ProjiectId) {
		toSerialize["projiect_id"] = o.ProjiectId
	}
	if !IsNil(o.RefundAmount) {
		toSerialize["refund_amount"] = o.RefundAmount
	}
	if !IsNil(o.RefundStatus) {
		toSerialize["refund_status"] = o.RefundStatus
	}
	if !IsNil(o.StandardId) {
		toSerialize["standard_id"] = o.StandardId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.SummaryId) {
		toSerialize["summary_id"] = o.SummaryId
	}
	if !IsNil(o.TpSign) {
		toSerialize["tp_sign"] = o.TpSign
	}
	if !IsNil(o.VoucherId) {
		toSerialize["voucher_id"] = o.VoucherId
	}
	return toSerialize, nil
}

type NullableExpenseConsumeInfo struct {
	value *ExpenseConsumeInfo
	isSet bool
}

func (v NullableExpenseConsumeInfo) Get() *ExpenseConsumeInfo {
	return v.value
}

func (v *NullableExpenseConsumeInfo) Set(val *ExpenseConsumeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableExpenseConsumeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableExpenseConsumeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpenseConsumeInfo(val *ExpenseConsumeInfo) *NullableExpenseConsumeInfo {
	return &NullableExpenseConsumeInfo{value: val, isSet: true}
}

func (v NullableExpenseConsumeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpenseConsumeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



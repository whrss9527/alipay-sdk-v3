/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AttachmentExplain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentExplain{}

// AttachmentExplain struct for AttachmentExplain
type AttachmentExplain struct {
	// 允许上传更多附件。开启后，除了“附件列表”中指定的内容，签署人可自由上传之多10张图片。默认值为false
	AllowMoreUploads *bool `json:"allow_more_uploads,omitempty"`
	// 描述
	Description *string `json:"description,omitempty"`
	// 附件列表
	Details []Detail `json:"details,omitempty"`
	// 附件标题（collect_attachement值为true时必填
	Title *string `json:"title,omitempty"`
}

// NewAttachmentExplain instantiates a new AttachmentExplain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentExplain() *AttachmentExplain {
	this := AttachmentExplain{}
	return &this
}

// NewAttachmentExplainWithDefaults instantiates a new AttachmentExplain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentExplainWithDefaults() *AttachmentExplain {
	this := AttachmentExplain{}
	return &this
}

// GetAllowMoreUploads returns the AllowMoreUploads field value if set, zero value otherwise.
func (o *AttachmentExplain) GetAllowMoreUploads() bool {
	if o == nil || IsNil(o.AllowMoreUploads) {
		var ret bool
		return ret
	}
	return *o.AllowMoreUploads
}

// GetAllowMoreUploadsOk returns a tuple with the AllowMoreUploads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplain) GetAllowMoreUploadsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMoreUploads) {
		return nil, false
	}
	return o.AllowMoreUploads, true
}

// HasAllowMoreUploads returns a boolean if a field has been set.
func (o *AttachmentExplain) HasAllowMoreUploads() bool {
	if o != nil && !IsNil(o.AllowMoreUploads) {
		return true
	}

	return false
}

// SetAllowMoreUploads gets a reference to the given bool and assigns it to the AllowMoreUploads field.
func (o *AttachmentExplain) SetAllowMoreUploads(v bool) {
	o.AllowMoreUploads = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AttachmentExplain) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplain) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AttachmentExplain) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AttachmentExplain) SetDescription(v string) {
	o.Description = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AttachmentExplain) GetDetails() []Detail {
	if o == nil || IsNil(o.Details) {
		var ret []Detail
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplain) GetDetailsOk() ([]Detail, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *AttachmentExplain) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []Detail and assigns it to the Details field.
func (o *AttachmentExplain) SetDetails(v []Detail) {
	o.Details = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AttachmentExplain) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentExplain) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AttachmentExplain) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AttachmentExplain) SetTitle(v string) {
	o.Title = &v
}

func (o AttachmentExplain) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentExplain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowMoreUploads) {
		toSerialize["allow_more_uploads"] = o.AllowMoreUploads
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAttachmentExplain struct {
	value *AttachmentExplain
	isSet bool
}

func (v NullableAttachmentExplain) Get() *AttachmentExplain {
	return v.value
}

func (v *NullableAttachmentExplain) Set(val *AttachmentExplain) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentExplain) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentExplain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentExplain(val *AttachmentExplain) *NullableAttachmentExplain {
	return &NullableAttachmentExplain{value: val, isSet: true}
}

func (v NullableAttachmentExplain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentExplain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

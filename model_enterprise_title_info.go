/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnterpriseTitleInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnterpriseTitleInfo{}

// EnterpriseTitleInfo struct for EnterpriseTitleInfo
type EnterpriseTitleInfo struct {
	// 详细地址
	Address *string `json:"address,omitempty"`
	// 开户行账号
	BankAccount *string `json:"bank_account,omitempty"`
	// 开户行地址
	BankName *string `json:"bank_name,omitempty"`
	// 税号
	TaxRegisterNo *string `json:"tax_register_no,omitempty"`
	// 电话
	Telephone *string `json:"telephone,omitempty"`
	// 抬头ID
	TitleId *string `json:"title_id,omitempty"`
	// 企业抬头名称
	TitleName *string `json:"title_name,omitempty"`
}

// NewEnterpriseTitleInfo instantiates a new EnterpriseTitleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseTitleInfo() *EnterpriseTitleInfo {
	this := EnterpriseTitleInfo{}
	return &this
}

// NewEnterpriseTitleInfoWithDefaults instantiates a new EnterpriseTitleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseTitleInfoWithDefaults() *EnterpriseTitleInfo {
	this := EnterpriseTitleInfo{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *EnterpriseTitleInfo) SetAddress(v string) {
	o.Address = &v
}

// GetBankAccount returns the BankAccount field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetBankAccount() string {
	if o == nil || IsNil(o.BankAccount) {
		var ret string
		return ret
	}
	return *o.BankAccount
}

// GetBankAccountOk returns a tuple with the BankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetBankAccountOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccount) {
		return nil, false
	}
	return o.BankAccount, true
}

// HasBankAccount returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasBankAccount() bool {
	if o != nil && !IsNil(o.BankAccount) {
		return true
	}

	return false
}

// SetBankAccount gets a reference to the given string and assigns it to the BankAccount field.
func (o *EnterpriseTitleInfo) SetBankAccount(v string) {
	o.BankAccount = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetBankName() string {
	if o == nil || IsNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankName) {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasBankName() bool {
	if o != nil && !IsNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *EnterpriseTitleInfo) SetBankName(v string) {
	o.BankName = &v
}

// GetTaxRegisterNo returns the TaxRegisterNo field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetTaxRegisterNo() string {
	if o == nil || IsNil(o.TaxRegisterNo) {
		var ret string
		return ret
	}
	return *o.TaxRegisterNo
}

// GetTaxRegisterNoOk returns a tuple with the TaxRegisterNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetTaxRegisterNoOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRegisterNo) {
		return nil, false
	}
	return o.TaxRegisterNo, true
}

// HasTaxRegisterNo returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasTaxRegisterNo() bool {
	if o != nil && !IsNil(o.TaxRegisterNo) {
		return true
	}

	return false
}

// SetTaxRegisterNo gets a reference to the given string and assigns it to the TaxRegisterNo field.
func (o *EnterpriseTitleInfo) SetTaxRegisterNo(v string) {
	o.TaxRegisterNo = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *EnterpriseTitleInfo) SetTelephone(v string) {
	o.Telephone = &v
}

// GetTitleId returns the TitleId field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetTitleId() string {
	if o == nil || IsNil(o.TitleId) {
		var ret string
		return ret
	}
	return *o.TitleId
}

// GetTitleIdOk returns a tuple with the TitleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetTitleIdOk() (*string, bool) {
	if o == nil || IsNil(o.TitleId) {
		return nil, false
	}
	return o.TitleId, true
}

// HasTitleId returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasTitleId() bool {
	if o != nil && !IsNil(o.TitleId) {
		return true
	}

	return false
}

// SetTitleId gets a reference to the given string and assigns it to the TitleId field.
func (o *EnterpriseTitleInfo) SetTitleId(v string) {
	o.TitleId = &v
}

// GetTitleName returns the TitleName field value if set, zero value otherwise.
func (o *EnterpriseTitleInfo) GetTitleName() string {
	if o == nil || IsNil(o.TitleName) {
		var ret string
		return ret
	}
	return *o.TitleName
}

// GetTitleNameOk returns a tuple with the TitleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseTitleInfo) GetTitleNameOk() (*string, bool) {
	if o == nil || IsNil(o.TitleName) {
		return nil, false
	}
	return o.TitleName, true
}

// HasTitleName returns a boolean if a field has been set.
func (o *EnterpriseTitleInfo) HasTitleName() bool {
	if o != nil && !IsNil(o.TitleName) {
		return true
	}

	return false
}

// SetTitleName gets a reference to the given string and assigns it to the TitleName field.
func (o *EnterpriseTitleInfo) SetTitleName(v string) {
	o.TitleName = &v
}

func (o EnterpriseTitleInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterpriseTitleInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.BankAccount) {
		toSerialize["bank_account"] = o.BankAccount
	}
	if !IsNil(o.BankName) {
		toSerialize["bank_name"] = o.BankName
	}
	if !IsNil(o.TaxRegisterNo) {
		toSerialize["tax_register_no"] = o.TaxRegisterNo
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	if !IsNil(o.TitleId) {
		toSerialize["title_id"] = o.TitleId
	}
	if !IsNil(o.TitleName) {
		toSerialize["title_name"] = o.TitleName
	}
	return toSerialize, nil
}

type NullableEnterpriseTitleInfo struct {
	value *EnterpriseTitleInfo
	isSet bool
}

func (v NullableEnterpriseTitleInfo) Get() *EnterpriseTitleInfo {
	return v.value
}

func (v *NullableEnterpriseTitleInfo) Set(val *EnterpriseTitleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseTitleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseTitleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseTitleInfo(val *EnterpriseTitleInfo) *NullableEnterpriseTitleInfo {
	return &NullableEnterpriseTitleInfo{value: val, isSet: true}
}

func (v NullableEnterpriseTitleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseTitleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



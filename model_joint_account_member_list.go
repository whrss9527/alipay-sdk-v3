/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JointAccountMemberList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JointAccountMemberList{}

// JointAccountMemberList struct for JointAccountMemberList
type JointAccountMemberList struct {
	// 额度模型
	AccountQuota []JointAccountQuotaDTO `json:"account_quota,omitempty"`
	// 成员openId
	OpenId *string `json:"open_id,omitempty"`
	// 成员ID
	UserId *string `json:"user_id,omitempty"`
}

// NewJointAccountMemberList instantiates a new JointAccountMemberList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJointAccountMemberList() *JointAccountMemberList {
	this := JointAccountMemberList{}
	return &this
}

// NewJointAccountMemberListWithDefaults instantiates a new JointAccountMemberList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJointAccountMemberListWithDefaults() *JointAccountMemberList {
	this := JointAccountMemberList{}
	return &this
}

// GetAccountQuota returns the AccountQuota field value if set, zero value otherwise.
func (o *JointAccountMemberList) GetAccountQuota() []JointAccountQuotaDTO {
	if o == nil || IsNil(o.AccountQuota) {
		var ret []JointAccountQuotaDTO
		return ret
	}
	return o.AccountQuota
}

// GetAccountQuotaOk returns a tuple with the AccountQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberList) GetAccountQuotaOk() ([]JointAccountQuotaDTO, bool) {
	if o == nil || IsNil(o.AccountQuota) {
		return nil, false
	}
	return o.AccountQuota, true
}

// HasAccountQuota returns a boolean if a field has been set.
func (o *JointAccountMemberList) HasAccountQuota() bool {
	if o != nil && !IsNil(o.AccountQuota) {
		return true
	}

	return false
}

// SetAccountQuota gets a reference to the given []JointAccountQuotaDTO and assigns it to the AccountQuota field.
func (o *JointAccountMemberList) SetAccountQuota(v []JointAccountQuotaDTO) {
	o.AccountQuota = v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *JointAccountMemberList) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberList) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *JointAccountMemberList) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *JointAccountMemberList) SetOpenId(v string) {
	o.OpenId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *JointAccountMemberList) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberList) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *JointAccountMemberList) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *JointAccountMemberList) SetUserId(v string) {
	o.UserId = &v
}

func (o JointAccountMemberList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JointAccountMemberList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountQuota) {
		toSerialize["account_quota"] = o.AccountQuota
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableJointAccountMemberList struct {
	value *JointAccountMemberList
	isSet bool
}

func (v NullableJointAccountMemberList) Get() *JointAccountMemberList {
	return v.value
}

func (v *NullableJointAccountMemberList) Set(val *JointAccountMemberList) {
	v.value = val
	v.isSet = true
}

func (v NullableJointAccountMemberList) IsSet() bool {
	return v.isSet
}

func (v *NullableJointAccountMemberList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJointAccountMemberList(val *JointAccountMemberList) *NullableJointAccountMemberList {
	return &NullableJointAccountMemberList{value: val, isSet: true}
}

func (v NullableJointAccountMemberList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJointAccountMemberList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



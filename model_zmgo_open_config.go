/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ZMGOOpenConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZMGOOpenConfig{}

// ZMGOOpenConfig struct for ZMGOOpenConfig
type ZMGOOpenConfig struct {
	// 开通页按钮文案描述;传入内容后开通页点击开通按钮展示文案会使用该字段传入内容
	ApplyButtonDesc *string `json:"apply_button_desc,omitempty"`
	// 固定到期时间或每月的第几日。 （1）当period_mode为APPOINT_DATE时，取值固定日期，如\"2022-06-01 00:00:00\"，表示协议在6月1号0点到期; （2）当period_mode为FIX_DATE，取值\"3\"，表示协议在period_time个月后的3号到期。
	AppointDate *string `json:"appoint_date,omitempty"`
	// 芝麻GO卡颜色。 C_BLACK(\"C_BLACK\", \"黑色\"), C_RED(\"C_RED\", \"红色\"), C_GREEN(\"C_GREEN\", \"绿色\"), C_LIGHT_BLUE(\"C_LIGHT_BLUE\", \"浅蓝色\"), C_BLUE(\"C_BLUE\", \"蓝色\"), C_ORANGE(\"C_ORANGE\",\"橙色\"), C_PURPLE(\"C_PURPLE\", \"紫色\");
	CardColorScheme *string `json:"card_color_scheme,omitempty"`
	// 未完成任务规则详情
	CustomOpenTipList *string `json:"custom_open_tip_list,omitempty"`
	// 规则详情
	CustomOpenTips *string `json:"custom_open_tips,omitempty"`
	// 担保金额额度，单位:元
	FreezeAmount *string `json:"freeze_amount,omitempty"`
	// 用户签约间隔时间，单位天
	MinSignInterval *string `json:"min_sign_interval,omitempty"`
	// 芝麻GO义务到期的计算方式。包括： RELATIVE_DATE(\"RELATIVE_DATE\", \"相对日期\"), ABSOLATE_DATE(\"ABSOLATE_DATE\", \"绝对日期(当日开始计算)\"), ABSOLUTE_PLUS_1_DATE(\"ABSOLUTE_PLUS_1_DATE\", \"绝对日期(次日开始计算)\"), FIX_DATE(\"FIX_DATE\", \"固定日期\"), APPOINT_DATE(\"APPOINT_DATE\", \"指定日期\"),
	PeriodMode *string `json:"period_mode,omitempty"`
	// 周期时长 当period_mode为RELATIVE_DATE、ABSOLATE_DATE、ABSOLUTE_PLUS_1_DATE、FIX_DATE时必填
	PeriodTime *string `json:"period_time,omitempty"`
	// 是否展示签约完成页
	ShowSignSuccessPage *bool `json:"show_sign_success_page,omitempty"`
	// 用户签约商户活动到期
	SignAgainSchema *string `json:"sign_again_schema,omitempty"`
	// 签约完成页任务按钮描述，当展示签约完成页=true的时候 改内容必填
	SignSuccessTaskButtonDesc *string `json:"sign_success_task_button_desc,omitempty"`
	// 是否支持延期特权，开启后用户可以在任务到期前进行延期。(该功能已停用，不建议开启使用。)
	// Deprecated
	SupportExpireDeferral *bool `json:"support_expire_deferral,omitempty"`
}

// NewZMGOOpenConfig instantiates a new ZMGOOpenConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZMGOOpenConfig() *ZMGOOpenConfig {
	this := ZMGOOpenConfig{}
	return &this
}

// NewZMGOOpenConfigWithDefaults instantiates a new ZMGOOpenConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZMGOOpenConfigWithDefaults() *ZMGOOpenConfig {
	this := ZMGOOpenConfig{}
	return &this
}

// GetApplyButtonDesc returns the ApplyButtonDesc field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetApplyButtonDesc() string {
	if o == nil || IsNil(o.ApplyButtonDesc) {
		var ret string
		return ret
	}
	return *o.ApplyButtonDesc
}

// GetApplyButtonDescOk returns a tuple with the ApplyButtonDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetApplyButtonDescOk() (*string, bool) {
	if o == nil || IsNil(o.ApplyButtonDesc) {
		return nil, false
	}
	return o.ApplyButtonDesc, true
}

// HasApplyButtonDesc returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasApplyButtonDesc() bool {
	if o != nil && !IsNil(o.ApplyButtonDesc) {
		return true
	}

	return false
}

// SetApplyButtonDesc gets a reference to the given string and assigns it to the ApplyButtonDesc field.
func (o *ZMGOOpenConfig) SetApplyButtonDesc(v string) {
	o.ApplyButtonDesc = &v
}

// GetAppointDate returns the AppointDate field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetAppointDate() string {
	if o == nil || IsNil(o.AppointDate) {
		var ret string
		return ret
	}
	return *o.AppointDate
}

// GetAppointDateOk returns a tuple with the AppointDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetAppointDateOk() (*string, bool) {
	if o == nil || IsNil(o.AppointDate) {
		return nil, false
	}
	return o.AppointDate, true
}

// HasAppointDate returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasAppointDate() bool {
	if o != nil && !IsNil(o.AppointDate) {
		return true
	}

	return false
}

// SetAppointDate gets a reference to the given string and assigns it to the AppointDate field.
func (o *ZMGOOpenConfig) SetAppointDate(v string) {
	o.AppointDate = &v
}

// GetCardColorScheme returns the CardColorScheme field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetCardColorScheme() string {
	if o == nil || IsNil(o.CardColorScheme) {
		var ret string
		return ret
	}
	return *o.CardColorScheme
}

// GetCardColorSchemeOk returns a tuple with the CardColorScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetCardColorSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.CardColorScheme) {
		return nil, false
	}
	return o.CardColorScheme, true
}

// HasCardColorScheme returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasCardColorScheme() bool {
	if o != nil && !IsNil(o.CardColorScheme) {
		return true
	}

	return false
}

// SetCardColorScheme gets a reference to the given string and assigns it to the CardColorScheme field.
func (o *ZMGOOpenConfig) SetCardColorScheme(v string) {
	o.CardColorScheme = &v
}

// GetCustomOpenTipList returns the CustomOpenTipList field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetCustomOpenTipList() string {
	if o == nil || IsNil(o.CustomOpenTipList) {
		var ret string
		return ret
	}
	return *o.CustomOpenTipList
}

// GetCustomOpenTipListOk returns a tuple with the CustomOpenTipList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetCustomOpenTipListOk() (*string, bool) {
	if o == nil || IsNil(o.CustomOpenTipList) {
		return nil, false
	}
	return o.CustomOpenTipList, true
}

// HasCustomOpenTipList returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasCustomOpenTipList() bool {
	if o != nil && !IsNil(o.CustomOpenTipList) {
		return true
	}

	return false
}

// SetCustomOpenTipList gets a reference to the given string and assigns it to the CustomOpenTipList field.
func (o *ZMGOOpenConfig) SetCustomOpenTipList(v string) {
	o.CustomOpenTipList = &v
}

// GetCustomOpenTips returns the CustomOpenTips field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetCustomOpenTips() string {
	if o == nil || IsNil(o.CustomOpenTips) {
		var ret string
		return ret
	}
	return *o.CustomOpenTips
}

// GetCustomOpenTipsOk returns a tuple with the CustomOpenTips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetCustomOpenTipsOk() (*string, bool) {
	if o == nil || IsNil(o.CustomOpenTips) {
		return nil, false
	}
	return o.CustomOpenTips, true
}

// HasCustomOpenTips returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasCustomOpenTips() bool {
	if o != nil && !IsNil(o.CustomOpenTips) {
		return true
	}

	return false
}

// SetCustomOpenTips gets a reference to the given string and assigns it to the CustomOpenTips field.
func (o *ZMGOOpenConfig) SetCustomOpenTips(v string) {
	o.CustomOpenTips = &v
}

// GetFreezeAmount returns the FreezeAmount field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetFreezeAmount() string {
	if o == nil || IsNil(o.FreezeAmount) {
		var ret string
		return ret
	}
	return *o.FreezeAmount
}

// GetFreezeAmountOk returns a tuple with the FreezeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetFreezeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FreezeAmount) {
		return nil, false
	}
	return o.FreezeAmount, true
}

// HasFreezeAmount returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasFreezeAmount() bool {
	if o != nil && !IsNil(o.FreezeAmount) {
		return true
	}

	return false
}

// SetFreezeAmount gets a reference to the given string and assigns it to the FreezeAmount field.
func (o *ZMGOOpenConfig) SetFreezeAmount(v string) {
	o.FreezeAmount = &v
}

// GetMinSignInterval returns the MinSignInterval field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetMinSignInterval() string {
	if o == nil || IsNil(o.MinSignInterval) {
		var ret string
		return ret
	}
	return *o.MinSignInterval
}

// GetMinSignIntervalOk returns a tuple with the MinSignInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetMinSignIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.MinSignInterval) {
		return nil, false
	}
	return o.MinSignInterval, true
}

// HasMinSignInterval returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasMinSignInterval() bool {
	if o != nil && !IsNil(o.MinSignInterval) {
		return true
	}

	return false
}

// SetMinSignInterval gets a reference to the given string and assigns it to the MinSignInterval field.
func (o *ZMGOOpenConfig) SetMinSignInterval(v string) {
	o.MinSignInterval = &v
}

// GetPeriodMode returns the PeriodMode field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetPeriodMode() string {
	if o == nil || IsNil(o.PeriodMode) {
		var ret string
		return ret
	}
	return *o.PeriodMode
}

// GetPeriodModeOk returns a tuple with the PeriodMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetPeriodModeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodMode) {
		return nil, false
	}
	return o.PeriodMode, true
}

// HasPeriodMode returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasPeriodMode() bool {
	if o != nil && !IsNil(o.PeriodMode) {
		return true
	}

	return false
}

// SetPeriodMode gets a reference to the given string and assigns it to the PeriodMode field.
func (o *ZMGOOpenConfig) SetPeriodMode(v string) {
	o.PeriodMode = &v
}

// GetPeriodTime returns the PeriodTime field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetPeriodTime() string {
	if o == nil || IsNil(o.PeriodTime) {
		var ret string
		return ret
	}
	return *o.PeriodTime
}

// GetPeriodTimeOk returns a tuple with the PeriodTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetPeriodTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodTime) {
		return nil, false
	}
	return o.PeriodTime, true
}

// HasPeriodTime returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasPeriodTime() bool {
	if o != nil && !IsNil(o.PeriodTime) {
		return true
	}

	return false
}

// SetPeriodTime gets a reference to the given string and assigns it to the PeriodTime field.
func (o *ZMGOOpenConfig) SetPeriodTime(v string) {
	o.PeriodTime = &v
}

// GetShowSignSuccessPage returns the ShowSignSuccessPage field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetShowSignSuccessPage() bool {
	if o == nil || IsNil(o.ShowSignSuccessPage) {
		var ret bool
		return ret
	}
	return *o.ShowSignSuccessPage
}

// GetShowSignSuccessPageOk returns a tuple with the ShowSignSuccessPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetShowSignSuccessPageOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSignSuccessPage) {
		return nil, false
	}
	return o.ShowSignSuccessPage, true
}

// HasShowSignSuccessPage returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasShowSignSuccessPage() bool {
	if o != nil && !IsNil(o.ShowSignSuccessPage) {
		return true
	}

	return false
}

// SetShowSignSuccessPage gets a reference to the given bool and assigns it to the ShowSignSuccessPage field.
func (o *ZMGOOpenConfig) SetShowSignSuccessPage(v bool) {
	o.ShowSignSuccessPage = &v
}

// GetSignAgainSchema returns the SignAgainSchema field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetSignAgainSchema() string {
	if o == nil || IsNil(o.SignAgainSchema) {
		var ret string
		return ret
	}
	return *o.SignAgainSchema
}

// GetSignAgainSchemaOk returns a tuple with the SignAgainSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetSignAgainSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.SignAgainSchema) {
		return nil, false
	}
	return o.SignAgainSchema, true
}

// HasSignAgainSchema returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasSignAgainSchema() bool {
	if o != nil && !IsNil(o.SignAgainSchema) {
		return true
	}

	return false
}

// SetSignAgainSchema gets a reference to the given string and assigns it to the SignAgainSchema field.
func (o *ZMGOOpenConfig) SetSignAgainSchema(v string) {
	o.SignAgainSchema = &v
}

// GetSignSuccessTaskButtonDesc returns the SignSuccessTaskButtonDesc field value if set, zero value otherwise.
func (o *ZMGOOpenConfig) GetSignSuccessTaskButtonDesc() string {
	if o == nil || IsNil(o.SignSuccessTaskButtonDesc) {
		var ret string
		return ret
	}
	return *o.SignSuccessTaskButtonDesc
}

// GetSignSuccessTaskButtonDescOk returns a tuple with the SignSuccessTaskButtonDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZMGOOpenConfig) GetSignSuccessTaskButtonDescOk() (*string, bool) {
	if o == nil || IsNil(o.SignSuccessTaskButtonDesc) {
		return nil, false
	}
	return o.SignSuccessTaskButtonDesc, true
}

// HasSignSuccessTaskButtonDesc returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasSignSuccessTaskButtonDesc() bool {
	if o != nil && !IsNil(o.SignSuccessTaskButtonDesc) {
		return true
	}

	return false
}

// SetSignSuccessTaskButtonDesc gets a reference to the given string and assigns it to the SignSuccessTaskButtonDesc field.
func (o *ZMGOOpenConfig) SetSignSuccessTaskButtonDesc(v string) {
	o.SignSuccessTaskButtonDesc = &v
}

// GetSupportExpireDeferral returns the SupportExpireDeferral field value if set, zero value otherwise.
// Deprecated
func (o *ZMGOOpenConfig) GetSupportExpireDeferral() bool {
	if o == nil || IsNil(o.SupportExpireDeferral) {
		var ret bool
		return ret
	}
	return *o.SupportExpireDeferral
}

// GetSupportExpireDeferralOk returns a tuple with the SupportExpireDeferral field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ZMGOOpenConfig) GetSupportExpireDeferralOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportExpireDeferral) {
		return nil, false
	}
	return o.SupportExpireDeferral, true
}

// HasSupportExpireDeferral returns a boolean if a field has been set.
func (o *ZMGOOpenConfig) HasSupportExpireDeferral() bool {
	if o != nil && !IsNil(o.SupportExpireDeferral) {
		return true
	}

	return false
}

// SetSupportExpireDeferral gets a reference to the given bool and assigns it to the SupportExpireDeferral field.
// Deprecated
func (o *ZMGOOpenConfig) SetSupportExpireDeferral(v bool) {
	o.SupportExpireDeferral = &v
}

func (o ZMGOOpenConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZMGOOpenConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplyButtonDesc) {
		toSerialize["apply_button_desc"] = o.ApplyButtonDesc
	}
	if !IsNil(o.AppointDate) {
		toSerialize["appoint_date"] = o.AppointDate
	}
	if !IsNil(o.CardColorScheme) {
		toSerialize["card_color_scheme"] = o.CardColorScheme
	}
	if !IsNil(o.CustomOpenTipList) {
		toSerialize["custom_open_tip_list"] = o.CustomOpenTipList
	}
	if !IsNil(o.CustomOpenTips) {
		toSerialize["custom_open_tips"] = o.CustomOpenTips
	}
	if !IsNil(o.FreezeAmount) {
		toSerialize["freeze_amount"] = o.FreezeAmount
	}
	if !IsNil(o.MinSignInterval) {
		toSerialize["min_sign_interval"] = o.MinSignInterval
	}
	if !IsNil(o.PeriodMode) {
		toSerialize["period_mode"] = o.PeriodMode
	}
	if !IsNil(o.PeriodTime) {
		toSerialize["period_time"] = o.PeriodTime
	}
	if !IsNil(o.ShowSignSuccessPage) {
		toSerialize["show_sign_success_page"] = o.ShowSignSuccessPage
	}
	if !IsNil(o.SignAgainSchema) {
		toSerialize["sign_again_schema"] = o.SignAgainSchema
	}
	if !IsNil(o.SignSuccessTaskButtonDesc) {
		toSerialize["sign_success_task_button_desc"] = o.SignSuccessTaskButtonDesc
	}
	if !IsNil(o.SupportExpireDeferral) {
		toSerialize["support_expire_deferral"] = o.SupportExpireDeferral
	}
	return toSerialize, nil
}

type NullableZMGOOpenConfig struct {
	value *ZMGOOpenConfig
	isSet bool
}

func (v NullableZMGOOpenConfig) Get() *ZMGOOpenConfig {
	return v.value
}

func (v *NullableZMGOOpenConfig) Set(val *ZMGOOpenConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableZMGOOpenConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableZMGOOpenConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZMGOOpenConfig(val *ZMGOOpenConfig) *NullableZMGOOpenConfig {
	return &NullableZMGOOpenConfig{value: val, isSet: true}
}

func (v NullableZMGOOpenConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZMGOOpenConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



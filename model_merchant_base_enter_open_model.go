/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the MerchantBaseEnterOpenModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantBaseEnterOpenModel{}

// MerchantBaseEnterOpenModel struct for MerchantBaseEnterOpenModel
type MerchantBaseEnterOpenModel struct {
	// 登陆账号
	LoginId *string `json:"login_id,omitempty"`
	// 商户logo文件流信息，该字段为文件流经base64编码后得到的字符串。
	LogoInfo *string `json:"logo_info,omitempty"`
	// 商户品牌全称。
	MName *string `json:"m_name,omitempty"`
	// 商户品牌简称
	MShortName *string `json:"m_short_name,omitempty"`
}

// NewMerchantBaseEnterOpenModel instantiates a new MerchantBaseEnterOpenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantBaseEnterOpenModel() *MerchantBaseEnterOpenModel {
	this := MerchantBaseEnterOpenModel{}
	return &this
}

// NewMerchantBaseEnterOpenModelWithDefaults instantiates a new MerchantBaseEnterOpenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantBaseEnterOpenModelWithDefaults() *MerchantBaseEnterOpenModel {
	this := MerchantBaseEnterOpenModel{}
	return &this
}

// GetLoginId returns the LoginId field value if set, zero value otherwise.
func (o *MerchantBaseEnterOpenModel) GetLoginId() string {
	if o == nil || IsNil(o.LoginId) {
		var ret string
		return ret
	}
	return *o.LoginId
}

// GetLoginIdOk returns a tuple with the LoginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantBaseEnterOpenModel) GetLoginIdOk() (*string, bool) {
	if o == nil || IsNil(o.LoginId) {
		return nil, false
	}
	return o.LoginId, true
}

// HasLoginId returns a boolean if a field has been set.
func (o *MerchantBaseEnterOpenModel) HasLoginId() bool {
	if o != nil && !IsNil(o.LoginId) {
		return true
	}

	return false
}

// SetLoginId gets a reference to the given string and assigns it to the LoginId field.
func (o *MerchantBaseEnterOpenModel) SetLoginId(v string) {
	o.LoginId = &v
}

// GetLogoInfo returns the LogoInfo field value if set, zero value otherwise.
func (o *MerchantBaseEnterOpenModel) GetLogoInfo() string {
	if o == nil || IsNil(o.LogoInfo) {
		var ret string
		return ret
	}
	return *o.LogoInfo
}

// GetLogoInfoOk returns a tuple with the LogoInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantBaseEnterOpenModel) GetLogoInfoOk() (*string, bool) {
	if o == nil || IsNil(o.LogoInfo) {
		return nil, false
	}
	return o.LogoInfo, true
}

// HasLogoInfo returns a boolean if a field has been set.
func (o *MerchantBaseEnterOpenModel) HasLogoInfo() bool {
	if o != nil && !IsNil(o.LogoInfo) {
		return true
	}

	return false
}

// SetLogoInfo gets a reference to the given string and assigns it to the LogoInfo field.
func (o *MerchantBaseEnterOpenModel) SetLogoInfo(v string) {
	o.LogoInfo = &v
}

// GetMName returns the MName field value if set, zero value otherwise.
func (o *MerchantBaseEnterOpenModel) GetMName() string {
	if o == nil || IsNil(o.MName) {
		var ret string
		return ret
	}
	return *o.MName
}

// GetMNameOk returns a tuple with the MName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantBaseEnterOpenModel) GetMNameOk() (*string, bool) {
	if o == nil || IsNil(o.MName) {
		return nil, false
	}
	return o.MName, true
}

// HasMName returns a boolean if a field has been set.
func (o *MerchantBaseEnterOpenModel) HasMName() bool {
	if o != nil && !IsNil(o.MName) {
		return true
	}

	return false
}

// SetMName gets a reference to the given string and assigns it to the MName field.
func (o *MerchantBaseEnterOpenModel) SetMName(v string) {
	o.MName = &v
}

// GetMShortName returns the MShortName field value if set, zero value otherwise.
func (o *MerchantBaseEnterOpenModel) GetMShortName() string {
	if o == nil || IsNil(o.MShortName) {
		var ret string
		return ret
	}
	return *o.MShortName
}

// GetMShortNameOk returns a tuple with the MShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantBaseEnterOpenModel) GetMShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.MShortName) {
		return nil, false
	}
	return o.MShortName, true
}

// HasMShortName returns a boolean if a field has been set.
func (o *MerchantBaseEnterOpenModel) HasMShortName() bool {
	if o != nil && !IsNil(o.MShortName) {
		return true
	}

	return false
}

// SetMShortName gets a reference to the given string and assigns it to the MShortName field.
func (o *MerchantBaseEnterOpenModel) SetMShortName(v string) {
	o.MShortName = &v
}

func (o MerchantBaseEnterOpenModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantBaseEnterOpenModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoginId) {
		toSerialize["login_id"] = o.LoginId
	}
	if !IsNil(o.LogoInfo) {
		toSerialize["logo_info"] = o.LogoInfo
	}
	if !IsNil(o.MName) {
		toSerialize["m_name"] = o.MName
	}
	if !IsNil(o.MShortName) {
		toSerialize["m_short_name"] = o.MShortName
	}
	return toSerialize, nil
}

type NullableMerchantBaseEnterOpenModel struct {
	value *MerchantBaseEnterOpenModel
	isSet bool
}

func (v NullableMerchantBaseEnterOpenModel) Get() *MerchantBaseEnterOpenModel {
	return v.value
}

func (v *NullableMerchantBaseEnterOpenModel) Set(val *MerchantBaseEnterOpenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantBaseEnterOpenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantBaseEnterOpenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantBaseEnterOpenModel(val *MerchantBaseEnterOpenModel) *NullableMerchantBaseEnterOpenModel {
	return &NullableMerchantBaseEnterOpenModel{value: val, isSet: true}
}

func (v NullableMerchantBaseEnterOpenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantBaseEnterOpenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the CommonVoucherDisplayLiteInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonVoucherDisplayLiteInfo{}

// CommonVoucherDisplayLiteInfo struct for CommonVoucherDisplayLiteInfo
type CommonVoucherDisplayLiteInfo struct {
	// 商户品牌 logo 链接。
	BrandLogo *string `json:"brand_logo,omitempty"`
	// 商户品牌名称。 如果不设置品牌名称，则默认使用支付宝商家系统中维护的商家别名。 如果没有维护商家别名，则使用默认名称：商家优惠。  用户领取优惠券后，品牌名称会对用户进行展示。
	BrandName *string `json:"brand_name,omitempty"`
}

// NewCommonVoucherDisplayLiteInfo instantiates a new CommonVoucherDisplayLiteInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonVoucherDisplayLiteInfo() *CommonVoucherDisplayLiteInfo {
	this := CommonVoucherDisplayLiteInfo{}
	return &this
}

// NewCommonVoucherDisplayLiteInfoWithDefaults instantiates a new CommonVoucherDisplayLiteInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonVoucherDisplayLiteInfoWithDefaults() *CommonVoucherDisplayLiteInfo {
	this := CommonVoucherDisplayLiteInfo{}
	return &this
}

// GetBrandLogo returns the BrandLogo field value if set, zero value otherwise.
func (o *CommonVoucherDisplayLiteInfo) GetBrandLogo() string {
	if o == nil || IsNil(o.BrandLogo) {
		var ret string
		return ret
	}
	return *o.BrandLogo
}

// GetBrandLogoOk returns a tuple with the BrandLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonVoucherDisplayLiteInfo) GetBrandLogoOk() (*string, bool) {
	if o == nil || IsNil(o.BrandLogo) {
		return nil, false
	}
	return o.BrandLogo, true
}

// HasBrandLogo returns a boolean if a field has been set.
func (o *CommonVoucherDisplayLiteInfo) HasBrandLogo() bool {
	if o != nil && !IsNil(o.BrandLogo) {
		return true
	}

	return false
}

// SetBrandLogo gets a reference to the given string and assigns it to the BrandLogo field.
func (o *CommonVoucherDisplayLiteInfo) SetBrandLogo(v string) {
	o.BrandLogo = &v
}

// GetBrandName returns the BrandName field value if set, zero value otherwise.
func (o *CommonVoucherDisplayLiteInfo) GetBrandName() string {
	if o == nil || IsNil(o.BrandName) {
		var ret string
		return ret
	}
	return *o.BrandName
}

// GetBrandNameOk returns a tuple with the BrandName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonVoucherDisplayLiteInfo) GetBrandNameOk() (*string, bool) {
	if o == nil || IsNil(o.BrandName) {
		return nil, false
	}
	return o.BrandName, true
}

// HasBrandName returns a boolean if a field has been set.
func (o *CommonVoucherDisplayLiteInfo) HasBrandName() bool {
	if o != nil && !IsNil(o.BrandName) {
		return true
	}

	return false
}

// SetBrandName gets a reference to the given string and assigns it to the BrandName field.
func (o *CommonVoucherDisplayLiteInfo) SetBrandName(v string) {
	o.BrandName = &v
}

func (o CommonVoucherDisplayLiteInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonVoucherDisplayLiteInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrandLogo) {
		toSerialize["brand_logo"] = o.BrandLogo
	}
	if !IsNil(o.BrandName) {
		toSerialize["brand_name"] = o.BrandName
	}
	return toSerialize, nil
}

type NullableCommonVoucherDisplayLiteInfo struct {
	value *CommonVoucherDisplayLiteInfo
	isSet bool
}

func (v NullableCommonVoucherDisplayLiteInfo) Get() *CommonVoucherDisplayLiteInfo {
	return v.value
}

func (v *NullableCommonVoucherDisplayLiteInfo) Set(val *CommonVoucherDisplayLiteInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonVoucherDisplayLiteInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonVoucherDisplayLiteInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonVoucherDisplayLiteInfo(val *CommonVoucherDisplayLiteInfo) *NullableCommonVoucherDisplayLiteInfo {
	return &NullableCommonVoucherDisplayLiteInfo{value: val, isSet: true}
}

func (v NullableCommonVoucherDisplayLiteInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonVoucherDisplayLiteInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

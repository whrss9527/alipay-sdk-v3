/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the UserVoucherBaseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserVoucherBaseInfo{}

// UserVoucherBaseInfo struct for UserVoucherBaseInfo
type UserVoucherBaseInfo struct {
	// 若商家券操作过关联商户订单信息，则该字段返回商家券已关联的商户订单号。
	AssociateTradeNo *string `json:"associate_trade_no,omitempty"`
	// 券归属商户
	BelongMerchantId *string `json:"belong_merchant_id,omitempty"`
	// 领券时间
	CreateTime *string `json:"create_time,omitempty"`
	// 券可使用的开始时间。 格式为：yyyy-MM-dd HH:mm:ss
	ValidBeginTime *string `json:"valid_begin_time,omitempty"`
	// 券可使用的结束时间。 格式为yyyy-MM-dd HH:mm:ss
	ValidEndTime *string `json:"valid_end_time,omitempty"`
	// 用户领取的券码code,支付宝商家券活动才会返回券码，其他优惠券活动该值为空
	VoucherCode *string `json:"voucher_code,omitempty"`
	// 用户券 id。支付宝为用户优惠券唯一分配的 id。
	VoucherId *string `json:"voucher_id,omitempty"`
	// 券最大核销次数
	VoucherMaxUseTimes *int32 `json:"voucher_max_use_times,omitempty"`
	// 对消费者展示的券(商品)名称。
	VoucherName *string `json:"voucher_name,omitempty"`
	// 券状态。SENDED:可用 USED:已核销(即完全使用), EXPIRED:已过期(只能查询6个月内数据)
	VoucherStatus *string `json:"voucher_status,omitempty"`
	// 券已核销次数
	VoucherUsedTimes *int32 `json:"voucher_used_times,omitempty"`
}

// NewUserVoucherBaseInfo instantiates a new UserVoucherBaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserVoucherBaseInfo() *UserVoucherBaseInfo {
	this := UserVoucherBaseInfo{}
	return &this
}

// NewUserVoucherBaseInfoWithDefaults instantiates a new UserVoucherBaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserVoucherBaseInfoWithDefaults() *UserVoucherBaseInfo {
	this := UserVoucherBaseInfo{}
	return &this
}

// GetAssociateTradeNo returns the AssociateTradeNo field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetAssociateTradeNo() string {
	if o == nil || IsNil(o.AssociateTradeNo) {
		var ret string
		return ret
	}
	return *o.AssociateTradeNo
}

// GetAssociateTradeNoOk returns a tuple with the AssociateTradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetAssociateTradeNoOk() (*string, bool) {
	if o == nil || IsNil(o.AssociateTradeNo) {
		return nil, false
	}
	return o.AssociateTradeNo, true
}

// HasAssociateTradeNo returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasAssociateTradeNo() bool {
	if o != nil && !IsNil(o.AssociateTradeNo) {
		return true
	}

	return false
}

// SetAssociateTradeNo gets a reference to the given string and assigns it to the AssociateTradeNo field.
func (o *UserVoucherBaseInfo) SetAssociateTradeNo(v string) {
	o.AssociateTradeNo = &v
}

// GetBelongMerchantId returns the BelongMerchantId field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetBelongMerchantId() string {
	if o == nil || IsNil(o.BelongMerchantId) {
		var ret string
		return ret
	}
	return *o.BelongMerchantId
}

// GetBelongMerchantIdOk returns a tuple with the BelongMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetBelongMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.BelongMerchantId) {
		return nil, false
	}
	return o.BelongMerchantId, true
}

// HasBelongMerchantId returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasBelongMerchantId() bool {
	if o != nil && !IsNil(o.BelongMerchantId) {
		return true
	}

	return false
}

// SetBelongMerchantId gets a reference to the given string and assigns it to the BelongMerchantId field.
func (o *UserVoucherBaseInfo) SetBelongMerchantId(v string) {
	o.BelongMerchantId = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *UserVoucherBaseInfo) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetValidBeginTime returns the ValidBeginTime field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetValidBeginTime() string {
	if o == nil || IsNil(o.ValidBeginTime) {
		var ret string
		return ret
	}
	return *o.ValidBeginTime
}

// GetValidBeginTimeOk returns a tuple with the ValidBeginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetValidBeginTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ValidBeginTime) {
		return nil, false
	}
	return o.ValidBeginTime, true
}

// HasValidBeginTime returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasValidBeginTime() bool {
	if o != nil && !IsNil(o.ValidBeginTime) {
		return true
	}

	return false
}

// SetValidBeginTime gets a reference to the given string and assigns it to the ValidBeginTime field.
func (o *UserVoucherBaseInfo) SetValidBeginTime(v string) {
	o.ValidBeginTime = &v
}

// GetValidEndTime returns the ValidEndTime field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetValidEndTime() string {
	if o == nil || IsNil(o.ValidEndTime) {
		var ret string
		return ret
	}
	return *o.ValidEndTime
}

// GetValidEndTimeOk returns a tuple with the ValidEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetValidEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ValidEndTime) {
		return nil, false
	}
	return o.ValidEndTime, true
}

// HasValidEndTime returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasValidEndTime() bool {
	if o != nil && !IsNil(o.ValidEndTime) {
		return true
	}

	return false
}

// SetValidEndTime gets a reference to the given string and assigns it to the ValidEndTime field.
func (o *UserVoucherBaseInfo) SetValidEndTime(v string) {
	o.ValidEndTime = &v
}

// GetVoucherCode returns the VoucherCode field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetVoucherCode() string {
	if o == nil || IsNil(o.VoucherCode) {
		var ret string
		return ret
	}
	return *o.VoucherCode
}

// GetVoucherCodeOk returns a tuple with the VoucherCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetVoucherCodeOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherCode) {
		return nil, false
	}
	return o.VoucherCode, true
}

// HasVoucherCode returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasVoucherCode() bool {
	if o != nil && !IsNil(o.VoucherCode) {
		return true
	}

	return false
}

// SetVoucherCode gets a reference to the given string and assigns it to the VoucherCode field.
func (o *UserVoucherBaseInfo) SetVoucherCode(v string) {
	o.VoucherCode = &v
}

// GetVoucherId returns the VoucherId field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetVoucherId() string {
	if o == nil || IsNil(o.VoucherId) {
		var ret string
		return ret
	}
	return *o.VoucherId
}

// GetVoucherIdOk returns a tuple with the VoucherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetVoucherIdOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherId) {
		return nil, false
	}
	return o.VoucherId, true
}

// HasVoucherId returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasVoucherId() bool {
	if o != nil && !IsNil(o.VoucherId) {
		return true
	}

	return false
}

// SetVoucherId gets a reference to the given string and assigns it to the VoucherId field.
func (o *UserVoucherBaseInfo) SetVoucherId(v string) {
	o.VoucherId = &v
}

// GetVoucherMaxUseTimes returns the VoucherMaxUseTimes field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetVoucherMaxUseTimes() int32 {
	if o == nil || IsNil(o.VoucherMaxUseTimes) {
		var ret int32
		return ret
	}
	return *o.VoucherMaxUseTimes
}

// GetVoucherMaxUseTimesOk returns a tuple with the VoucherMaxUseTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetVoucherMaxUseTimesOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherMaxUseTimes) {
		return nil, false
	}
	return o.VoucherMaxUseTimes, true
}

// HasVoucherMaxUseTimes returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasVoucherMaxUseTimes() bool {
	if o != nil && !IsNil(o.VoucherMaxUseTimes) {
		return true
	}

	return false
}

// SetVoucherMaxUseTimes gets a reference to the given int32 and assigns it to the VoucherMaxUseTimes field.
func (o *UserVoucherBaseInfo) SetVoucherMaxUseTimes(v int32) {
	o.VoucherMaxUseTimes = &v
}

// GetVoucherName returns the VoucherName field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetVoucherName() string {
	if o == nil || IsNil(o.VoucherName) {
		var ret string
		return ret
	}
	return *o.VoucherName
}

// GetVoucherNameOk returns a tuple with the VoucherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetVoucherNameOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherName) {
		return nil, false
	}
	return o.VoucherName, true
}

// HasVoucherName returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasVoucherName() bool {
	if o != nil && !IsNil(o.VoucherName) {
		return true
	}

	return false
}

// SetVoucherName gets a reference to the given string and assigns it to the VoucherName field.
func (o *UserVoucherBaseInfo) SetVoucherName(v string) {
	o.VoucherName = &v
}

// GetVoucherStatus returns the VoucherStatus field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetVoucherStatus() string {
	if o == nil || IsNil(o.VoucherStatus) {
		var ret string
		return ret
	}
	return *o.VoucherStatus
}

// GetVoucherStatusOk returns a tuple with the VoucherStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetVoucherStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherStatus) {
		return nil, false
	}
	return o.VoucherStatus, true
}

// HasVoucherStatus returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasVoucherStatus() bool {
	if o != nil && !IsNil(o.VoucherStatus) {
		return true
	}

	return false
}

// SetVoucherStatus gets a reference to the given string and assigns it to the VoucherStatus field.
func (o *UserVoucherBaseInfo) SetVoucherStatus(v string) {
	o.VoucherStatus = &v
}

// GetVoucherUsedTimes returns the VoucherUsedTimes field value if set, zero value otherwise.
func (o *UserVoucherBaseInfo) GetVoucherUsedTimes() int32 {
	if o == nil || IsNil(o.VoucherUsedTimes) {
		var ret int32
		return ret
	}
	return *o.VoucherUsedTimes
}

// GetVoucherUsedTimesOk returns a tuple with the VoucherUsedTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserVoucherBaseInfo) GetVoucherUsedTimesOk() (*int32, bool) {
	if o == nil || IsNil(o.VoucherUsedTimes) {
		return nil, false
	}
	return o.VoucherUsedTimes, true
}

// HasVoucherUsedTimes returns a boolean if a field has been set.
func (o *UserVoucherBaseInfo) HasVoucherUsedTimes() bool {
	if o != nil && !IsNil(o.VoucherUsedTimes) {
		return true
	}

	return false
}

// SetVoucherUsedTimes gets a reference to the given int32 and assigns it to the VoucherUsedTimes field.
func (o *UserVoucherBaseInfo) SetVoucherUsedTimes(v int32) {
	o.VoucherUsedTimes = &v
}

func (o UserVoucherBaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserVoucherBaseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssociateTradeNo) {
		toSerialize["associate_trade_no"] = o.AssociateTradeNo
	}
	if !IsNil(o.BelongMerchantId) {
		toSerialize["belong_merchant_id"] = o.BelongMerchantId
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.ValidBeginTime) {
		toSerialize["valid_begin_time"] = o.ValidBeginTime
	}
	if !IsNil(o.ValidEndTime) {
		toSerialize["valid_end_time"] = o.ValidEndTime
	}
	if !IsNil(o.VoucherCode) {
		toSerialize["voucher_code"] = o.VoucherCode
	}
	if !IsNil(o.VoucherId) {
		toSerialize["voucher_id"] = o.VoucherId
	}
	if !IsNil(o.VoucherMaxUseTimes) {
		toSerialize["voucher_max_use_times"] = o.VoucherMaxUseTimes
	}
	if !IsNil(o.VoucherName) {
		toSerialize["voucher_name"] = o.VoucherName
	}
	if !IsNil(o.VoucherStatus) {
		toSerialize["voucher_status"] = o.VoucherStatus
	}
	if !IsNil(o.VoucherUsedTimes) {
		toSerialize["voucher_used_times"] = o.VoucherUsedTimes
	}
	return toSerialize, nil
}

type NullableUserVoucherBaseInfo struct {
	value *UserVoucherBaseInfo
	isSet bool
}

func (v NullableUserVoucherBaseInfo) Get() *UserVoucherBaseInfo {
	return v.value
}

func (v *NullableUserVoucherBaseInfo) Set(val *UserVoucherBaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUserVoucherBaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUserVoucherBaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserVoucherBaseInfo(val *UserVoucherBaseInfo) *NullableUserVoucherBaseInfo {
	return &NullableUserVoucherBaseInfo{value: val, isSet: true}
}

func (v NullableUserVoucherBaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserVoucherBaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ShopCategoryInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopCategoryInfo{}

// ShopCategoryInfo struct for ShopCategoryInfo
type ShopCategoryInfo struct {
	// 类目编号
	CategoryId *string `json:"category_id,omitempty"`
	// 类目层级,目前最多支持1、2、3三级
	CategoryLevel *string `json:"category_level,omitempty"`
	// 类目名称
	CategoryName *string `json:"category_name,omitempty"`
}

// NewShopCategoryInfo instantiates a new ShopCategoryInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopCategoryInfo() *ShopCategoryInfo {
	this := ShopCategoryInfo{}
	return &this
}

// NewShopCategoryInfoWithDefaults instantiates a new ShopCategoryInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopCategoryInfoWithDefaults() *ShopCategoryInfo {
	this := ShopCategoryInfo{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ShopCategoryInfo) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCategoryInfo) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ShopCategoryInfo) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *ShopCategoryInfo) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetCategoryLevel returns the CategoryLevel field value if set, zero value otherwise.
func (o *ShopCategoryInfo) GetCategoryLevel() string {
	if o == nil || IsNil(o.CategoryLevel) {
		var ret string
		return ret
	}
	return *o.CategoryLevel
}

// GetCategoryLevelOk returns a tuple with the CategoryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCategoryInfo) GetCategoryLevelOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryLevel) {
		return nil, false
	}
	return o.CategoryLevel, true
}

// HasCategoryLevel returns a boolean if a field has been set.
func (o *ShopCategoryInfo) HasCategoryLevel() bool {
	if o != nil && !IsNil(o.CategoryLevel) {
		return true
	}

	return false
}

// SetCategoryLevel gets a reference to the given string and assigns it to the CategoryLevel field.
func (o *ShopCategoryInfo) SetCategoryLevel(v string) {
	o.CategoryLevel = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *ShopCategoryInfo) GetCategoryName() string {
	if o == nil || IsNil(o.CategoryName) {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopCategoryInfo) GetCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryName) {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *ShopCategoryInfo) HasCategoryName() bool {
	if o != nil && !IsNil(o.CategoryName) {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *ShopCategoryInfo) SetCategoryName(v string) {
	o.CategoryName = &v
}

func (o ShopCategoryInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopCategoryInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.CategoryLevel) {
		toSerialize["category_level"] = o.CategoryLevel
	}
	if !IsNil(o.CategoryName) {
		toSerialize["category_name"] = o.CategoryName
	}
	return toSerialize, nil
}

type NullableShopCategoryInfo struct {
	value *ShopCategoryInfo
	isSet bool
}

func (v NullableShopCategoryInfo) Get() *ShopCategoryInfo {
	return v.value
}

func (v *NullableShopCategoryInfo) Set(val *ShopCategoryInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableShopCategoryInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableShopCategoryInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopCategoryInfo(val *ShopCategoryInfo) *NullableShopCategoryInfo {
	return &NullableShopCategoryInfo{value: val, isSet: true}
}

func (v NullableShopCategoryInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopCategoryInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the CommonNotifyUrlModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonNotifyUrlModel{}

// CommonNotifyUrlModel struct for CommonNotifyUrlModel
type CommonNotifyUrlModel struct {
	// 通知地址
	NotifyUrl *string `json:"notify_url,omitempty"`
}

// NewCommonNotifyUrlModel instantiates a new CommonNotifyUrlModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonNotifyUrlModel() *CommonNotifyUrlModel {
	this := CommonNotifyUrlModel{}
	return &this
}

// NewCommonNotifyUrlModelWithDefaults instantiates a new CommonNotifyUrlModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonNotifyUrlModelWithDefaults() *CommonNotifyUrlModel {
	this := CommonNotifyUrlModel{}
	return &this
}

// GetNotifyUrl returns the NotifyUrl field value if set, zero value otherwise.
func (o *CommonNotifyUrlModel) GetNotifyUrl() string {
	if o == nil || IsNil(o.NotifyUrl) {
		var ret string
		return ret
	}
	return *o.NotifyUrl
}

// GetNotifyUrlOk returns a tuple with the NotifyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonNotifyUrlModel) GetNotifyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.NotifyUrl) {
		return nil, false
	}
	return o.NotifyUrl, true
}

// HasNotifyUrl returns a boolean if a field has been set.
func (o *CommonNotifyUrlModel) HasNotifyUrl() bool {
	if o != nil && !IsNil(o.NotifyUrl) {
		return true
	}

	return false
}

// SetNotifyUrl gets a reference to the given string and assigns it to the NotifyUrl field.
func (o *CommonNotifyUrlModel) SetNotifyUrl(v string) {
	o.NotifyUrl = &v
}

func (o CommonNotifyUrlModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonNotifyUrlModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotifyUrl) {
		toSerialize["notify_url"] = o.NotifyUrl
	}
	return toSerialize, nil
}

type NullableCommonNotifyUrlModel struct {
	value *CommonNotifyUrlModel
	isSet bool
}

func (v NullableCommonNotifyUrlModel) Get() *CommonNotifyUrlModel {
	return v.value
}

func (v *NullableCommonNotifyUrlModel) Set(val *CommonNotifyUrlModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonNotifyUrlModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonNotifyUrlModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonNotifyUrlModel(val *CommonNotifyUrlModel) *NullableCommonNotifyUrlModel {
	return &NullableCommonNotifyUrlModel{value: val, isSet: true}
}

func (v NullableCommonNotifyUrlModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonNotifyUrlModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

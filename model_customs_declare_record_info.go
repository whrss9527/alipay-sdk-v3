/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the CustomsDeclareRecordInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomsDeclareRecordInfo{}

// CustomsDeclareRecordInfo struct for CustomsDeclareRecordInfo
type CustomsDeclareRecordInfo struct {
	// 支付宝报关流水号。
	AlipayDeclareNo *string `json:"alipay_declare_no,omitempty"`
	// 报关金额，单位为人民币“元”，精确到小数点后2位。
	Amount *string `json:"amount,omitempty"`
	// 此记录所报关的海关编号，参见“ <a href=\"https://opendocs.alipay.com/pre-open/01x3kh#%E6%B5%B7%E5%85%B3%E7%BC%96%E5%8F%B7\">海关编号</a>”。
	CustomsPlace *string `json:"customs_place,omitempty"`
	// 发起报关后，海关返回回执中的结果码。目前只有总署的报关，并且总署回执接收成功的请求才会返回此参数  2：电子口岸申报中  3：发送海关成功  4：发送海关失败  100：海关退单  399：海关审结  小于0的数字：表示处理异常回执     注意：  支付宝原样返回海关返回的数据，参数值以海关的定义为准。
	CustomsResultCode *string `json:"customs_result_code,omitempty"`
	// 发起报关后，海关返回回执中的结果描述信息。目前只有总署报关，并且总署成功返回回执的时候会有此值
	CustomsResultInfo *string `json:"customs_result_info,omitempty"`
	// 发起报关后，海关返回回执的时间，格式为：yyyyMMddHHmmss。目前只有总署报关，并且总署成功返回回执的时候才会有此参数。
	CustomsResultReturnTime *string `json:"customs_result_return_time,omitempty"`
	// T: 拆单；F：非拆单。当请求没有拆单或者请求传入的is_split=F时，不会返回此参数。
	IsSplit *string `json:"is_split,omitempty"`
	// 报关记录状态最后更新时间
	LastModifiedTime *string `json:"last_modified_time,omitempty"`
	// 备注说明
	Memo *string `json:"memo,omitempty"`
	// 商户在海关备案的编号。
	MerchantCustomsCode *string `json:"merchant_customs_code,omitempty"`
	// 商户海关备案名称
	MerchantCustomsName *string `json:"merchant_customs_name,omitempty"`
	// 报关请求号。商户端报关请求号，对应入参中的某条报关请求号。
	OutRequestNo *string `json:"out_request_no,omitempty"`
	// 该报关单当前的状态：  - ws等待发送海关  - sending已提交发送海关  - succ 海关返回受理成功
	Status *string `json:"status,omitempty"`
	// 拆单子订单号。如果报关请求没有请求拆单则不会返回此参数。
	SubOutBizNo *string `json:"sub_out_biz_no,omitempty"`
	// 支付宝推送到海关的支付单据号。针对拆单的报关，这个单据号不等于支付宝原始交易号。
	TradeNo *string `json:"trade_no,omitempty"`
}

// NewCustomsDeclareRecordInfo instantiates a new CustomsDeclareRecordInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomsDeclareRecordInfo() *CustomsDeclareRecordInfo {
	this := CustomsDeclareRecordInfo{}
	return &this
}

// NewCustomsDeclareRecordInfoWithDefaults instantiates a new CustomsDeclareRecordInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomsDeclareRecordInfoWithDefaults() *CustomsDeclareRecordInfo {
	this := CustomsDeclareRecordInfo{}
	return &this
}

// GetAlipayDeclareNo returns the AlipayDeclareNo field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetAlipayDeclareNo() string {
	if o == nil || IsNil(o.AlipayDeclareNo) {
		var ret string
		return ret
	}
	return *o.AlipayDeclareNo
}

// GetAlipayDeclareNoOk returns a tuple with the AlipayDeclareNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetAlipayDeclareNoOk() (*string, bool) {
	if o == nil || IsNil(o.AlipayDeclareNo) {
		return nil, false
	}
	return o.AlipayDeclareNo, true
}

// HasAlipayDeclareNo returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasAlipayDeclareNo() bool {
	if o != nil && !IsNil(o.AlipayDeclareNo) {
		return true
	}

	return false
}

// SetAlipayDeclareNo gets a reference to the given string and assigns it to the AlipayDeclareNo field.
func (o *CustomsDeclareRecordInfo) SetAlipayDeclareNo(v string) {
	o.AlipayDeclareNo = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *CustomsDeclareRecordInfo) SetAmount(v string) {
	o.Amount = &v
}

// GetCustomsPlace returns the CustomsPlace field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetCustomsPlace() string {
	if o == nil || IsNil(o.CustomsPlace) {
		var ret string
		return ret
	}
	return *o.CustomsPlace
}

// GetCustomsPlaceOk returns a tuple with the CustomsPlace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetCustomsPlaceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomsPlace) {
		return nil, false
	}
	return o.CustomsPlace, true
}

// HasCustomsPlace returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasCustomsPlace() bool {
	if o != nil && !IsNil(o.CustomsPlace) {
		return true
	}

	return false
}

// SetCustomsPlace gets a reference to the given string and assigns it to the CustomsPlace field.
func (o *CustomsDeclareRecordInfo) SetCustomsPlace(v string) {
	o.CustomsPlace = &v
}

// GetCustomsResultCode returns the CustomsResultCode field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetCustomsResultCode() string {
	if o == nil || IsNil(o.CustomsResultCode) {
		var ret string
		return ret
	}
	return *o.CustomsResultCode
}

// GetCustomsResultCodeOk returns a tuple with the CustomsResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetCustomsResultCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomsResultCode) {
		return nil, false
	}
	return o.CustomsResultCode, true
}

// HasCustomsResultCode returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasCustomsResultCode() bool {
	if o != nil && !IsNil(o.CustomsResultCode) {
		return true
	}

	return false
}

// SetCustomsResultCode gets a reference to the given string and assigns it to the CustomsResultCode field.
func (o *CustomsDeclareRecordInfo) SetCustomsResultCode(v string) {
	o.CustomsResultCode = &v
}

// GetCustomsResultInfo returns the CustomsResultInfo field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetCustomsResultInfo() string {
	if o == nil || IsNil(o.CustomsResultInfo) {
		var ret string
		return ret
	}
	return *o.CustomsResultInfo
}

// GetCustomsResultInfoOk returns a tuple with the CustomsResultInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetCustomsResultInfoOk() (*string, bool) {
	if o == nil || IsNil(o.CustomsResultInfo) {
		return nil, false
	}
	return o.CustomsResultInfo, true
}

// HasCustomsResultInfo returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasCustomsResultInfo() bool {
	if o != nil && !IsNil(o.CustomsResultInfo) {
		return true
	}

	return false
}

// SetCustomsResultInfo gets a reference to the given string and assigns it to the CustomsResultInfo field.
func (o *CustomsDeclareRecordInfo) SetCustomsResultInfo(v string) {
	o.CustomsResultInfo = &v
}

// GetCustomsResultReturnTime returns the CustomsResultReturnTime field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetCustomsResultReturnTime() string {
	if o == nil || IsNil(o.CustomsResultReturnTime) {
		var ret string
		return ret
	}
	return *o.CustomsResultReturnTime
}

// GetCustomsResultReturnTimeOk returns a tuple with the CustomsResultReturnTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetCustomsResultReturnTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomsResultReturnTime) {
		return nil, false
	}
	return o.CustomsResultReturnTime, true
}

// HasCustomsResultReturnTime returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasCustomsResultReturnTime() bool {
	if o != nil && !IsNil(o.CustomsResultReturnTime) {
		return true
	}

	return false
}

// SetCustomsResultReturnTime gets a reference to the given string and assigns it to the CustomsResultReturnTime field.
func (o *CustomsDeclareRecordInfo) SetCustomsResultReturnTime(v string) {
	o.CustomsResultReturnTime = &v
}

// GetIsSplit returns the IsSplit field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetIsSplit() string {
	if o == nil || IsNil(o.IsSplit) {
		var ret string
		return ret
	}
	return *o.IsSplit
}

// GetIsSplitOk returns a tuple with the IsSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetIsSplitOk() (*string, bool) {
	if o == nil || IsNil(o.IsSplit) {
		return nil, false
	}
	return o.IsSplit, true
}

// HasIsSplit returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasIsSplit() bool {
	if o != nil && !IsNil(o.IsSplit) {
		return true
	}

	return false
}

// SetIsSplit gets a reference to the given string and assigns it to the IsSplit field.
func (o *CustomsDeclareRecordInfo) SetIsSplit(v string) {
	o.IsSplit = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetLastModifiedTime() string {
	if o == nil || IsNil(o.LastModifiedTime) {
		var ret string
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetLastModifiedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedTime) {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasLastModifiedTime() bool {
	if o != nil && !IsNil(o.LastModifiedTime) {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given string and assigns it to the LastModifiedTime field.
func (o *CustomsDeclareRecordInfo) SetLastModifiedTime(v string) {
	o.LastModifiedTime = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *CustomsDeclareRecordInfo) SetMemo(v string) {
	o.Memo = &v
}

// GetMerchantCustomsCode returns the MerchantCustomsCode field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetMerchantCustomsCode() string {
	if o == nil || IsNil(o.MerchantCustomsCode) {
		var ret string
		return ret
	}
	return *o.MerchantCustomsCode
}

// GetMerchantCustomsCodeOk returns a tuple with the MerchantCustomsCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetMerchantCustomsCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantCustomsCode) {
		return nil, false
	}
	return o.MerchantCustomsCode, true
}

// HasMerchantCustomsCode returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasMerchantCustomsCode() bool {
	if o != nil && !IsNil(o.MerchantCustomsCode) {
		return true
	}

	return false
}

// SetMerchantCustomsCode gets a reference to the given string and assigns it to the MerchantCustomsCode field.
func (o *CustomsDeclareRecordInfo) SetMerchantCustomsCode(v string) {
	o.MerchantCustomsCode = &v
}

// GetMerchantCustomsName returns the MerchantCustomsName field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetMerchantCustomsName() string {
	if o == nil || IsNil(o.MerchantCustomsName) {
		var ret string
		return ret
	}
	return *o.MerchantCustomsName
}

// GetMerchantCustomsNameOk returns a tuple with the MerchantCustomsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetMerchantCustomsNameOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantCustomsName) {
		return nil, false
	}
	return o.MerchantCustomsName, true
}

// HasMerchantCustomsName returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasMerchantCustomsName() bool {
	if o != nil && !IsNil(o.MerchantCustomsName) {
		return true
	}

	return false
}

// SetMerchantCustomsName gets a reference to the given string and assigns it to the MerchantCustomsName field.
func (o *CustomsDeclareRecordInfo) SetMerchantCustomsName(v string) {
	o.MerchantCustomsName = &v
}

// GetOutRequestNo returns the OutRequestNo field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetOutRequestNo() string {
	if o == nil || IsNil(o.OutRequestNo) {
		var ret string
		return ret
	}
	return *o.OutRequestNo
}

// GetOutRequestNoOk returns a tuple with the OutRequestNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetOutRequestNoOk() (*string, bool) {
	if o == nil || IsNil(o.OutRequestNo) {
		return nil, false
	}
	return o.OutRequestNo, true
}

// HasOutRequestNo returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasOutRequestNo() bool {
	if o != nil && !IsNil(o.OutRequestNo) {
		return true
	}

	return false
}

// SetOutRequestNo gets a reference to the given string and assigns it to the OutRequestNo field.
func (o *CustomsDeclareRecordInfo) SetOutRequestNo(v string) {
	o.OutRequestNo = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CustomsDeclareRecordInfo) SetStatus(v string) {
	o.Status = &v
}

// GetSubOutBizNo returns the SubOutBizNo field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetSubOutBizNo() string {
	if o == nil || IsNil(o.SubOutBizNo) {
		var ret string
		return ret
	}
	return *o.SubOutBizNo
}

// GetSubOutBizNoOk returns a tuple with the SubOutBizNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetSubOutBizNoOk() (*string, bool) {
	if o == nil || IsNil(o.SubOutBizNo) {
		return nil, false
	}
	return o.SubOutBizNo, true
}

// HasSubOutBizNo returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasSubOutBizNo() bool {
	if o != nil && !IsNil(o.SubOutBizNo) {
		return true
	}

	return false
}

// SetSubOutBizNo gets a reference to the given string and assigns it to the SubOutBizNo field.
func (o *CustomsDeclareRecordInfo) SetSubOutBizNo(v string) {
	o.SubOutBizNo = &v
}

// GetTradeNo returns the TradeNo field value if set, zero value otherwise.
func (o *CustomsDeclareRecordInfo) GetTradeNo() string {
	if o == nil || IsNil(o.TradeNo) {
		var ret string
		return ret
	}
	return *o.TradeNo
}

// GetTradeNoOk returns a tuple with the TradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareRecordInfo) GetTradeNoOk() (*string, bool) {
	if o == nil || IsNil(o.TradeNo) {
		return nil, false
	}
	return o.TradeNo, true
}

// HasTradeNo returns a boolean if a field has been set.
func (o *CustomsDeclareRecordInfo) HasTradeNo() bool {
	if o != nil && !IsNil(o.TradeNo) {
		return true
	}

	return false
}

// SetTradeNo gets a reference to the given string and assigns it to the TradeNo field.
func (o *CustomsDeclareRecordInfo) SetTradeNo(v string) {
	o.TradeNo = &v
}

func (o CustomsDeclareRecordInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomsDeclareRecordInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlipayDeclareNo) {
		toSerialize["alipay_declare_no"] = o.AlipayDeclareNo
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CustomsPlace) {
		toSerialize["customs_place"] = o.CustomsPlace
	}
	if !IsNil(o.CustomsResultCode) {
		toSerialize["customs_result_code"] = o.CustomsResultCode
	}
	if !IsNil(o.CustomsResultInfo) {
		toSerialize["customs_result_info"] = o.CustomsResultInfo
	}
	if !IsNil(o.CustomsResultReturnTime) {
		toSerialize["customs_result_return_time"] = o.CustomsResultReturnTime
	}
	if !IsNil(o.IsSplit) {
		toSerialize["is_split"] = o.IsSplit
	}
	if !IsNil(o.LastModifiedTime) {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.MerchantCustomsCode) {
		toSerialize["merchant_customs_code"] = o.MerchantCustomsCode
	}
	if !IsNil(o.MerchantCustomsName) {
		toSerialize["merchant_customs_name"] = o.MerchantCustomsName
	}
	if !IsNil(o.OutRequestNo) {
		toSerialize["out_request_no"] = o.OutRequestNo
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubOutBizNo) {
		toSerialize["sub_out_biz_no"] = o.SubOutBizNo
	}
	if !IsNil(o.TradeNo) {
		toSerialize["trade_no"] = o.TradeNo
	}
	return toSerialize, nil
}

type NullableCustomsDeclareRecordInfo struct {
	value *CustomsDeclareRecordInfo
	isSet bool
}

func (v NullableCustomsDeclareRecordInfo) Get() *CustomsDeclareRecordInfo {
	return v.value
}

func (v *NullableCustomsDeclareRecordInfo) Set(val *CustomsDeclareRecordInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomsDeclareRecordInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomsDeclareRecordInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomsDeclareRecordInfo(val *CustomsDeclareRecordInfo) *NullableCustomsDeclareRecordInfo {
	return &NullableCustomsDeclareRecordInfo{value: val, isSet: true}
}

func (v NullableCustomsDeclareRecordInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomsDeclareRecordInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

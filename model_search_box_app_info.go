/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchBoxAppInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBoxAppInfo{}

// SearchBoxAppInfo struct for SearchBoxAppInfo
type SearchBoxAppInfo struct {
	// 应用名称
	AppName *string `json:"app_name,omitempty"`
	// 应用类型，TINY_APP-小程序/PUBLIC_APP-生活号
	AppType *string `json:"app_type,omitempty"`
	// 应用ID
	RelateAppid *string `json:"relate_appid,omitempty"`
}

// NewSearchBoxAppInfo instantiates a new SearchBoxAppInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBoxAppInfo() *SearchBoxAppInfo {
	this := SearchBoxAppInfo{}
	return &this
}

// NewSearchBoxAppInfoWithDefaults instantiates a new SearchBoxAppInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBoxAppInfoWithDefaults() *SearchBoxAppInfo {
	this := SearchBoxAppInfo{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *SearchBoxAppInfo) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBoxAppInfo) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *SearchBoxAppInfo) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *SearchBoxAppInfo) SetAppName(v string) {
	o.AppName = &v
}

// GetAppType returns the AppType field value if set, zero value otherwise.
func (o *SearchBoxAppInfo) GetAppType() string {
	if o == nil || IsNil(o.AppType) {
		var ret string
		return ret
	}
	return *o.AppType
}

// GetAppTypeOk returns a tuple with the AppType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBoxAppInfo) GetAppTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AppType) {
		return nil, false
	}
	return o.AppType, true
}

// HasAppType returns a boolean if a field has been set.
func (o *SearchBoxAppInfo) HasAppType() bool {
	if o != nil && !IsNil(o.AppType) {
		return true
	}

	return false
}

// SetAppType gets a reference to the given string and assigns it to the AppType field.
func (o *SearchBoxAppInfo) SetAppType(v string) {
	o.AppType = &v
}

// GetRelateAppid returns the RelateAppid field value if set, zero value otherwise.
func (o *SearchBoxAppInfo) GetRelateAppid() string {
	if o == nil || IsNil(o.RelateAppid) {
		var ret string
		return ret
	}
	return *o.RelateAppid
}

// GetRelateAppidOk returns a tuple with the RelateAppid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBoxAppInfo) GetRelateAppidOk() (*string, bool) {
	if o == nil || IsNil(o.RelateAppid) {
		return nil, false
	}
	return o.RelateAppid, true
}

// HasRelateAppid returns a boolean if a field has been set.
func (o *SearchBoxAppInfo) HasRelateAppid() bool {
	if o != nil && !IsNil(o.RelateAppid) {
		return true
	}

	return false
}

// SetRelateAppid gets a reference to the given string and assigns it to the RelateAppid field.
func (o *SearchBoxAppInfo) SetRelateAppid(v string) {
	o.RelateAppid = &v
}

func (o SearchBoxAppInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBoxAppInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["app_name"] = o.AppName
	}
	if !IsNil(o.AppType) {
		toSerialize["app_type"] = o.AppType
	}
	if !IsNil(o.RelateAppid) {
		toSerialize["relate_appid"] = o.RelateAppid
	}
	return toSerialize, nil
}

type NullableSearchBoxAppInfo struct {
	value *SearchBoxAppInfo
	isSet bool
}

func (v NullableSearchBoxAppInfo) Get() *SearchBoxAppInfo {
	return v.value
}

func (v *NullableSearchBoxAppInfo) Set(val *SearchBoxAppInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBoxAppInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBoxAppInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBoxAppInfo(val *SearchBoxAppInfo) *NullableSearchBoxAppInfo {
	return &NullableSearchBoxAppInfo{value: val, isSet: true}
}

func (v NullableSearchBoxAppInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBoxAppInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



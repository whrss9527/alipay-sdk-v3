/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the ItemPropertyInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemPropertyInfo{}

// ItemPropertyInfo struct for ItemPropertyInfo
type ItemPropertyInfo struct {
	// 属性名称
	PropertyKey *string `json:"property_key,omitempty"`
	// 属性值列表
	PropertyValueList []string `json:"property_value_list,omitempty"`
}

// NewItemPropertyInfo instantiates a new ItemPropertyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemPropertyInfo() *ItemPropertyInfo {
	this := ItemPropertyInfo{}
	return &this
}

// NewItemPropertyInfoWithDefaults instantiates a new ItemPropertyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemPropertyInfoWithDefaults() *ItemPropertyInfo {
	this := ItemPropertyInfo{}
	return &this
}

// GetPropertyKey returns the PropertyKey field value if set, zero value otherwise.
func (o *ItemPropertyInfo) GetPropertyKey() string {
	if o == nil || IsNil(o.PropertyKey) {
		var ret string
		return ret
	}
	return *o.PropertyKey
}

// GetPropertyKeyOk returns a tuple with the PropertyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemPropertyInfo) GetPropertyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyKey) {
		return nil, false
	}
	return o.PropertyKey, true
}

// HasPropertyKey returns a boolean if a field has been set.
func (o *ItemPropertyInfo) HasPropertyKey() bool {
	if o != nil && !IsNil(o.PropertyKey) {
		return true
	}

	return false
}

// SetPropertyKey gets a reference to the given string and assigns it to the PropertyKey field.
func (o *ItemPropertyInfo) SetPropertyKey(v string) {
	o.PropertyKey = &v
}

// GetPropertyValueList returns the PropertyValueList field value if set, zero value otherwise.
func (o *ItemPropertyInfo) GetPropertyValueList() []string {
	if o == nil || IsNil(o.PropertyValueList) {
		var ret []string
		return ret
	}
	return o.PropertyValueList
}

// GetPropertyValueListOk returns a tuple with the PropertyValueList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemPropertyInfo) GetPropertyValueListOk() ([]string, bool) {
	if o == nil || IsNil(o.PropertyValueList) {
		return nil, false
	}
	return o.PropertyValueList, true
}

// HasPropertyValueList returns a boolean if a field has been set.
func (o *ItemPropertyInfo) HasPropertyValueList() bool {
	if o != nil && !IsNil(o.PropertyValueList) {
		return true
	}

	return false
}

// SetPropertyValueList gets a reference to the given []string and assigns it to the PropertyValueList field.
func (o *ItemPropertyInfo) SetPropertyValueList(v []string) {
	o.PropertyValueList = v
}

func (o ItemPropertyInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemPropertyInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PropertyKey) {
		toSerialize["property_key"] = o.PropertyKey
	}
	if !IsNil(o.PropertyValueList) {
		toSerialize["property_value_list"] = o.PropertyValueList
	}
	return toSerialize, nil
}

type NullableItemPropertyInfo struct {
	value *ItemPropertyInfo
	isSet bool
}

func (v NullableItemPropertyInfo) Get() *ItemPropertyInfo {
	return v.value
}

func (v *NullableItemPropertyInfo) Set(val *ItemPropertyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableItemPropertyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableItemPropertyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemPropertyInfo(val *ItemPropertyInfo) *NullableItemPropertyInfo {
	return &NullableItemPropertyInfo{value: val, isSet: true}
}

func (v NullableItemPropertyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemPropertyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

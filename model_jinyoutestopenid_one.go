/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JinyoutestopenidOne type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JinyoutestopenidOne{}

// JinyoutestopenidOne struct for JinyoutestopenidOne
type JinyoutestopenidOne struct {
	// 我晚点
	C1 *string `json:"c_1,omitempty"`
	// 1
	Q *string `json:"q,omitempty"`
	// 1
	Q1OpenId *string `json:"q_1_open_id,omitempty"`
}

// NewJinyoutestopenidOne instantiates a new JinyoutestopenidOne object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJinyoutestopenidOne() *JinyoutestopenidOne {
	this := JinyoutestopenidOne{}
	return &this
}

// NewJinyoutestopenidOneWithDefaults instantiates a new JinyoutestopenidOne object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJinyoutestopenidOneWithDefaults() *JinyoutestopenidOne {
	this := JinyoutestopenidOne{}
	return &this
}

// GetC1 returns the C1 field value if set, zero value otherwise.
func (o *JinyoutestopenidOne) GetC1() string {
	if o == nil || IsNil(o.C1) {
		var ret string
		return ret
	}
	return *o.C1
}

// GetC1Ok returns a tuple with the C1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JinyoutestopenidOne) GetC1Ok() (*string, bool) {
	if o == nil || IsNil(o.C1) {
		return nil, false
	}
	return o.C1, true
}

// HasC1 returns a boolean if a field has been set.
func (o *JinyoutestopenidOne) HasC1() bool {
	if o != nil && !IsNil(o.C1) {
		return true
	}

	return false
}

// SetC1 gets a reference to the given string and assigns it to the C1 field.
func (o *JinyoutestopenidOne) SetC1(v string) {
	o.C1 = &v
}

// GetQ returns the Q field value if set, zero value otherwise.
func (o *JinyoutestopenidOne) GetQ() string {
	if o == nil || IsNil(o.Q) {
		var ret string
		return ret
	}
	return *o.Q
}

// GetQOk returns a tuple with the Q field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JinyoutestopenidOne) GetQOk() (*string, bool) {
	if o == nil || IsNil(o.Q) {
		return nil, false
	}
	return o.Q, true
}

// HasQ returns a boolean if a field has been set.
func (o *JinyoutestopenidOne) HasQ() bool {
	if o != nil && !IsNil(o.Q) {
		return true
	}

	return false
}

// SetQ gets a reference to the given string and assigns it to the Q field.
func (o *JinyoutestopenidOne) SetQ(v string) {
	o.Q = &v
}

// GetQ1OpenId returns the Q1OpenId field value if set, zero value otherwise.
func (o *JinyoutestopenidOne) GetQ1OpenId() string {
	if o == nil || IsNil(o.Q1OpenId) {
		var ret string
		return ret
	}
	return *o.Q1OpenId
}

// GetQ1OpenIdOk returns a tuple with the Q1OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JinyoutestopenidOne) GetQ1OpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.Q1OpenId) {
		return nil, false
	}
	return o.Q1OpenId, true
}

// HasQ1OpenId returns a boolean if a field has been set.
func (o *JinyoutestopenidOne) HasQ1OpenId() bool {
	if o != nil && !IsNil(o.Q1OpenId) {
		return true
	}

	return false
}

// SetQ1OpenId gets a reference to the given string and assigns it to the Q1OpenId field.
func (o *JinyoutestopenidOne) SetQ1OpenId(v string) {
	o.Q1OpenId = &v
}

func (o JinyoutestopenidOne) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JinyoutestopenidOne) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.C1) {
		toSerialize["c_1"] = o.C1
	}
	if !IsNil(o.Q) {
		toSerialize["q"] = o.Q
	}
	if !IsNil(o.Q1OpenId) {
		toSerialize["q_1_open_id"] = o.Q1OpenId
	}
	return toSerialize, nil
}

type NullableJinyoutestopenidOne struct {
	value *JinyoutestopenidOne
	isSet bool
}

func (v NullableJinyoutestopenidOne) Get() *JinyoutestopenidOne {
	return v.value
}

func (v *NullableJinyoutestopenidOne) Set(val *JinyoutestopenidOne) {
	v.value = val
	v.isSet = true
}

func (v NullableJinyoutestopenidOne) IsSet() bool {
	return v.isSet
}

func (v *NullableJinyoutestopenidOne) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJinyoutestopenidOne(val *JinyoutestopenidOne) *NullableJinyoutestopenidOne {
	return &NullableJinyoutestopenidOne{value: val, isSet: true}
}

func (v NullableJinyoutestopenidOne) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJinyoutestopenidOne) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the BrandDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandDetail{}

// BrandDetail struct for BrandDetail
type BrandDetail struct {
	// 搜索工单详情数据block_type
	BlockType *string `json:"block_type,omitempty"`
	// 版本号
	BoxVersion *string `json:"box_version,omitempty"`
	// 描述信息
	Desc *string `json:"desc,omitempty"`
	// img地址
	Img *string `json:"img,omitempty"`
	// 索引信息
	Index *string `json:"index,omitempty"`
	// 工单详情数据key
	Key *string `json:"key,omitempty"`
	// 工单详情数据material_id
	MaterialId *string `json:"material_id,omitempty"`
	// 应用名称
	Name *string `json:"name,omitempty"`
	// 搜索运营工单详情数据public_bind_app_id
	PublicBindAppId *string `json:"public_bind_app_id,omitempty"`
	// 服务码
	ServiceCode *string `json:"service_code,omitempty"`
}

// NewBrandDetail instantiates a new BrandDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandDetail() *BrandDetail {
	this := BrandDetail{}
	return &this
}

// NewBrandDetailWithDefaults instantiates a new BrandDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandDetailWithDefaults() *BrandDetail {
	this := BrandDetail{}
	return &this
}

// GetBlockType returns the BlockType field value if set, zero value otherwise.
func (o *BrandDetail) GetBlockType() string {
	if o == nil || IsNil(o.BlockType) {
		var ret string
		return ret
	}
	return *o.BlockType
}

// GetBlockTypeOk returns a tuple with the BlockType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetBlockTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockType) {
		return nil, false
	}
	return o.BlockType, true
}

// HasBlockType returns a boolean if a field has been set.
func (o *BrandDetail) HasBlockType() bool {
	if o != nil && !IsNil(o.BlockType) {
		return true
	}

	return false
}

// SetBlockType gets a reference to the given string and assigns it to the BlockType field.
func (o *BrandDetail) SetBlockType(v string) {
	o.BlockType = &v
}

// GetBoxVersion returns the BoxVersion field value if set, zero value otherwise.
func (o *BrandDetail) GetBoxVersion() string {
	if o == nil || IsNil(o.BoxVersion) {
		var ret string
		return ret
	}
	return *o.BoxVersion
}

// GetBoxVersionOk returns a tuple with the BoxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetBoxVersionOk() (*string, bool) {
	if o == nil || IsNil(o.BoxVersion) {
		return nil, false
	}
	return o.BoxVersion, true
}

// HasBoxVersion returns a boolean if a field has been set.
func (o *BrandDetail) HasBoxVersion() bool {
	if o != nil && !IsNil(o.BoxVersion) {
		return true
	}

	return false
}

// SetBoxVersion gets a reference to the given string and assigns it to the BoxVersion field.
func (o *BrandDetail) SetBoxVersion(v string) {
	o.BoxVersion = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *BrandDetail) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *BrandDetail) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *BrandDetail) SetDesc(v string) {
	o.Desc = &v
}

// GetImg returns the Img field value if set, zero value otherwise.
func (o *BrandDetail) GetImg() string {
	if o == nil || IsNil(o.Img) {
		var ret string
		return ret
	}
	return *o.Img
}

// GetImgOk returns a tuple with the Img field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetImgOk() (*string, bool) {
	if o == nil || IsNil(o.Img) {
		return nil, false
	}
	return o.Img, true
}

// HasImg returns a boolean if a field has been set.
func (o *BrandDetail) HasImg() bool {
	if o != nil && !IsNil(o.Img) {
		return true
	}

	return false
}

// SetImg gets a reference to the given string and assigns it to the Img field.
func (o *BrandDetail) SetImg(v string) {
	o.Img = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *BrandDetail) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *BrandDetail) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *BrandDetail) SetIndex(v string) {
	o.Index = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *BrandDetail) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *BrandDetail) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *BrandDetail) SetKey(v string) {
	o.Key = &v
}

// GetMaterialId returns the MaterialId field value if set, zero value otherwise.
func (o *BrandDetail) GetMaterialId() string {
	if o == nil || IsNil(o.MaterialId) {
		var ret string
		return ret
	}
	return *o.MaterialId
}

// GetMaterialIdOk returns a tuple with the MaterialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetMaterialIdOk() (*string, bool) {
	if o == nil || IsNil(o.MaterialId) {
		return nil, false
	}
	return o.MaterialId, true
}

// HasMaterialId returns a boolean if a field has been set.
func (o *BrandDetail) HasMaterialId() bool {
	if o != nil && !IsNil(o.MaterialId) {
		return true
	}

	return false
}

// SetMaterialId gets a reference to the given string and assigns it to the MaterialId field.
func (o *BrandDetail) SetMaterialId(v string) {
	o.MaterialId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BrandDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BrandDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BrandDetail) SetName(v string) {
	o.Name = &v
}

// GetPublicBindAppId returns the PublicBindAppId field value if set, zero value otherwise.
func (o *BrandDetail) GetPublicBindAppId() string {
	if o == nil || IsNil(o.PublicBindAppId) {
		var ret string
		return ret
	}
	return *o.PublicBindAppId
}

// GetPublicBindAppIdOk returns a tuple with the PublicBindAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetPublicBindAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublicBindAppId) {
		return nil, false
	}
	return o.PublicBindAppId, true
}

// HasPublicBindAppId returns a boolean if a field has been set.
func (o *BrandDetail) HasPublicBindAppId() bool {
	if o != nil && !IsNil(o.PublicBindAppId) {
		return true
	}

	return false
}

// SetPublicBindAppId gets a reference to the given string and assigns it to the PublicBindAppId field.
func (o *BrandDetail) SetPublicBindAppId(v string) {
	o.PublicBindAppId = &v
}

// GetServiceCode returns the ServiceCode field value if set, zero value otherwise.
func (o *BrandDetail) GetServiceCode() string {
	if o == nil || IsNil(o.ServiceCode) {
		var ret string
		return ret
	}
	return *o.ServiceCode
}

// GetServiceCodeOk returns a tuple with the ServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandDetail) GetServiceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceCode) {
		return nil, false
	}
	return o.ServiceCode, true
}

// HasServiceCode returns a boolean if a field has been set.
func (o *BrandDetail) HasServiceCode() bool {
	if o != nil && !IsNil(o.ServiceCode) {
		return true
	}

	return false
}

// SetServiceCode gets a reference to the given string and assigns it to the ServiceCode field.
func (o *BrandDetail) SetServiceCode(v string) {
	o.ServiceCode = &v
}

func (o BrandDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockType) {
		toSerialize["block_type"] = o.BlockType
	}
	if !IsNil(o.BoxVersion) {
		toSerialize["box_version"] = o.BoxVersion
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Img) {
		toSerialize["img"] = o.Img
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.MaterialId) {
		toSerialize["material_id"] = o.MaterialId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PublicBindAppId) {
		toSerialize["public_bind_app_id"] = o.PublicBindAppId
	}
	if !IsNil(o.ServiceCode) {
		toSerialize["service_code"] = o.ServiceCode
	}
	return toSerialize, nil
}

type NullableBrandDetail struct {
	value *BrandDetail
	isSet bool
}

func (v NullableBrandDetail) Get() *BrandDetail {
	return v.value
}

func (v *NullableBrandDetail) Set(val *BrandDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandDetail(val *BrandDetail) *NullableBrandDetail {
	return &NullableBrandDetail{value: val, isSet: true}
}

func (v NullableBrandDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the TemplateUsageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateUsageInfo{}

// TemplateUsageInfo struct for TemplateUsageInfo
type TemplateUsageInfo struct {
	// 商家小程序版本号
	AppVersion *string `json:"app_version,omitempty"`
	// 商家小程序appId
	MiniAppId *string `json:"mini_app_id,omitempty"`
}

// NewTemplateUsageInfo instantiates a new TemplateUsageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateUsageInfo() *TemplateUsageInfo {
	this := TemplateUsageInfo{}
	return &this
}

// NewTemplateUsageInfoWithDefaults instantiates a new TemplateUsageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateUsageInfoWithDefaults() *TemplateUsageInfo {
	this := TemplateUsageInfo{}
	return &this
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *TemplateUsageInfo) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUsageInfo) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *TemplateUsageInfo) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *TemplateUsageInfo) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetMiniAppId returns the MiniAppId field value if set, zero value otherwise.
func (o *TemplateUsageInfo) GetMiniAppId() string {
	if o == nil || IsNil(o.MiniAppId) {
		var ret string
		return ret
	}
	return *o.MiniAppId
}

// GetMiniAppIdOk returns a tuple with the MiniAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUsageInfo) GetMiniAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.MiniAppId) {
		return nil, false
	}
	return o.MiniAppId, true
}

// HasMiniAppId returns a boolean if a field has been set.
func (o *TemplateUsageInfo) HasMiniAppId() bool {
	if o != nil && !IsNil(o.MiniAppId) {
		return true
	}

	return false
}

// SetMiniAppId gets a reference to the given string and assigns it to the MiniAppId field.
func (o *TemplateUsageInfo) SetMiniAppId(v string) {
	o.MiniAppId = &v
}

func (o TemplateUsageInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateUsageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppVersion) {
		toSerialize["app_version"] = o.AppVersion
	}
	if !IsNil(o.MiniAppId) {
		toSerialize["mini_app_id"] = o.MiniAppId
	}
	return toSerialize, nil
}

type NullableTemplateUsageInfo struct {
	value *TemplateUsageInfo
	isSet bool
}

func (v NullableTemplateUsageInfo) Get() *TemplateUsageInfo {
	return v.value
}

func (v *NullableTemplateUsageInfo) Set(val *TemplateUsageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateUsageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateUsageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateUsageInfo(val *TemplateUsageInfo) *NullableTemplateUsageInfo {
	return &NullableTemplateUsageInfo{value: val, isSet: true}
}

func (v NullableTemplateUsageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateUsageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

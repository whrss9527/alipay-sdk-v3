/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceRecordCatRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceRecordCatRequest{}

// ServiceRecordCatRequest struct for ServiceRecordCatRequest
type ServiceRecordCatRequest struct {
	// 类目名称(需要每一级用;分隔封装)
	CatName *string `json:"cat_name,omitempty"`
	// 一级类目编码
	FirstCat *string `json:"first_cat,omitempty"`
	// 四级类目编码
	FourthCat *string `json:"fourth_cat,omitempty"`
	// 类目树编码
	InstenceCode *string `json:"instence_code,omitempty"`
	// 二级类目编码
	SecondCat *string `json:"second_cat,omitempty"`
	// 三级类目编码
	ThirdCat *string `json:"third_cat,omitempty"`
}

// NewServiceRecordCatRequest instantiates a new ServiceRecordCatRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRecordCatRequest() *ServiceRecordCatRequest {
	this := ServiceRecordCatRequest{}
	return &this
}

// NewServiceRecordCatRequestWithDefaults instantiates a new ServiceRecordCatRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRecordCatRequestWithDefaults() *ServiceRecordCatRequest {
	this := ServiceRecordCatRequest{}
	return &this
}

// GetCatName returns the CatName field value if set, zero value otherwise.
func (o *ServiceRecordCatRequest) GetCatName() string {
	if o == nil || IsNil(o.CatName) {
		var ret string
		return ret
	}
	return *o.CatName
}

// GetCatNameOk returns a tuple with the CatName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRecordCatRequest) GetCatNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatName) {
		return nil, false
	}
	return o.CatName, true
}

// HasCatName returns a boolean if a field has been set.
func (o *ServiceRecordCatRequest) HasCatName() bool {
	if o != nil && !IsNil(o.CatName) {
		return true
	}

	return false
}

// SetCatName gets a reference to the given string and assigns it to the CatName field.
func (o *ServiceRecordCatRequest) SetCatName(v string) {
	o.CatName = &v
}

// GetFirstCat returns the FirstCat field value if set, zero value otherwise.
func (o *ServiceRecordCatRequest) GetFirstCat() string {
	if o == nil || IsNil(o.FirstCat) {
		var ret string
		return ret
	}
	return *o.FirstCat
}

// GetFirstCatOk returns a tuple with the FirstCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRecordCatRequest) GetFirstCatOk() (*string, bool) {
	if o == nil || IsNil(o.FirstCat) {
		return nil, false
	}
	return o.FirstCat, true
}

// HasFirstCat returns a boolean if a field has been set.
func (o *ServiceRecordCatRequest) HasFirstCat() bool {
	if o != nil && !IsNil(o.FirstCat) {
		return true
	}

	return false
}

// SetFirstCat gets a reference to the given string and assigns it to the FirstCat field.
func (o *ServiceRecordCatRequest) SetFirstCat(v string) {
	o.FirstCat = &v
}

// GetFourthCat returns the FourthCat field value if set, zero value otherwise.
func (o *ServiceRecordCatRequest) GetFourthCat() string {
	if o == nil || IsNil(o.FourthCat) {
		var ret string
		return ret
	}
	return *o.FourthCat
}

// GetFourthCatOk returns a tuple with the FourthCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRecordCatRequest) GetFourthCatOk() (*string, bool) {
	if o == nil || IsNil(o.FourthCat) {
		return nil, false
	}
	return o.FourthCat, true
}

// HasFourthCat returns a boolean if a field has been set.
func (o *ServiceRecordCatRequest) HasFourthCat() bool {
	if o != nil && !IsNil(o.FourthCat) {
		return true
	}

	return false
}

// SetFourthCat gets a reference to the given string and assigns it to the FourthCat field.
func (o *ServiceRecordCatRequest) SetFourthCat(v string) {
	o.FourthCat = &v
}

// GetInstenceCode returns the InstenceCode field value if set, zero value otherwise.
func (o *ServiceRecordCatRequest) GetInstenceCode() string {
	if o == nil || IsNil(o.InstenceCode) {
		var ret string
		return ret
	}
	return *o.InstenceCode
}

// GetInstenceCodeOk returns a tuple with the InstenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRecordCatRequest) GetInstenceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.InstenceCode) {
		return nil, false
	}
	return o.InstenceCode, true
}

// HasInstenceCode returns a boolean if a field has been set.
func (o *ServiceRecordCatRequest) HasInstenceCode() bool {
	if o != nil && !IsNil(o.InstenceCode) {
		return true
	}

	return false
}

// SetInstenceCode gets a reference to the given string and assigns it to the InstenceCode field.
func (o *ServiceRecordCatRequest) SetInstenceCode(v string) {
	o.InstenceCode = &v
}

// GetSecondCat returns the SecondCat field value if set, zero value otherwise.
func (o *ServiceRecordCatRequest) GetSecondCat() string {
	if o == nil || IsNil(o.SecondCat) {
		var ret string
		return ret
	}
	return *o.SecondCat
}

// GetSecondCatOk returns a tuple with the SecondCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRecordCatRequest) GetSecondCatOk() (*string, bool) {
	if o == nil || IsNil(o.SecondCat) {
		return nil, false
	}
	return o.SecondCat, true
}

// HasSecondCat returns a boolean if a field has been set.
func (o *ServiceRecordCatRequest) HasSecondCat() bool {
	if o != nil && !IsNil(o.SecondCat) {
		return true
	}

	return false
}

// SetSecondCat gets a reference to the given string and assigns it to the SecondCat field.
func (o *ServiceRecordCatRequest) SetSecondCat(v string) {
	o.SecondCat = &v
}

// GetThirdCat returns the ThirdCat field value if set, zero value otherwise.
func (o *ServiceRecordCatRequest) GetThirdCat() string {
	if o == nil || IsNil(o.ThirdCat) {
		var ret string
		return ret
	}
	return *o.ThirdCat
}

// GetThirdCatOk returns a tuple with the ThirdCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRecordCatRequest) GetThirdCatOk() (*string, bool) {
	if o == nil || IsNil(o.ThirdCat) {
		return nil, false
	}
	return o.ThirdCat, true
}

// HasThirdCat returns a boolean if a field has been set.
func (o *ServiceRecordCatRequest) HasThirdCat() bool {
	if o != nil && !IsNil(o.ThirdCat) {
		return true
	}

	return false
}

// SetThirdCat gets a reference to the given string and assigns it to the ThirdCat field.
func (o *ServiceRecordCatRequest) SetThirdCat(v string) {
	o.ThirdCat = &v
}

func (o ServiceRecordCatRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceRecordCatRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatName) {
		toSerialize["cat_name"] = o.CatName
	}
	if !IsNil(o.FirstCat) {
		toSerialize["first_cat"] = o.FirstCat
	}
	if !IsNil(o.FourthCat) {
		toSerialize["fourth_cat"] = o.FourthCat
	}
	if !IsNil(o.InstenceCode) {
		toSerialize["instence_code"] = o.InstenceCode
	}
	if !IsNil(o.SecondCat) {
		toSerialize["second_cat"] = o.SecondCat
	}
	if !IsNil(o.ThirdCat) {
		toSerialize["third_cat"] = o.ThirdCat
	}
	return toSerialize, nil
}

type NullableServiceRecordCatRequest struct {
	value *ServiceRecordCatRequest
	isSet bool
}

func (v NullableServiceRecordCatRequest) Get() *ServiceRecordCatRequest {
	return v.value
}

func (v *NullableServiceRecordCatRequest) Set(val *ServiceRecordCatRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRecordCatRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRecordCatRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRecordCatRequest(val *ServiceRecordCatRequest) *NullableServiceRecordCatRequest {
	return &NullableServiceRecordCatRequest{value: val, isSet: true}
}

func (v NullableServiceRecordCatRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRecordCatRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



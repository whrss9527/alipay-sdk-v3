/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherUseTimeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherUseTimeInfo{}

// VoucherUseTimeInfo struct for VoucherUseTimeInfo
type VoucherUseTimeInfo struct {
	AbsolutePeriodInfo *VoucherAbsolutePeriodInfo `json:"absolute_period_info,omitempty"`
	// 券有效期。
	PeriodType         *string                    `json:"period_type,omitempty"`
	RelativePeriodInfo *VoucherRelativePeriodInfo `json:"relative_period_info,omitempty"`
}

// NewVoucherUseTimeInfo instantiates a new VoucherUseTimeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherUseTimeInfo() *VoucherUseTimeInfo {
	this := VoucherUseTimeInfo{}
	return &this
}

// NewVoucherUseTimeInfoWithDefaults instantiates a new VoucherUseTimeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherUseTimeInfoWithDefaults() *VoucherUseTimeInfo {
	this := VoucherUseTimeInfo{}
	return &this
}

// GetAbsolutePeriodInfo returns the AbsolutePeriodInfo field value if set, zero value otherwise.
func (o *VoucherUseTimeInfo) GetAbsolutePeriodInfo() VoucherAbsolutePeriodInfo {
	if o == nil || IsNil(o.AbsolutePeriodInfo) {
		var ret VoucherAbsolutePeriodInfo
		return ret
	}
	return *o.AbsolutePeriodInfo
}

// GetAbsolutePeriodInfoOk returns a tuple with the AbsolutePeriodInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeInfo) GetAbsolutePeriodInfoOk() (*VoucherAbsolutePeriodInfo, bool) {
	if o == nil || IsNil(o.AbsolutePeriodInfo) {
		return nil, false
	}
	return o.AbsolutePeriodInfo, true
}

// HasAbsolutePeriodInfo returns a boolean if a field has been set.
func (o *VoucherUseTimeInfo) HasAbsolutePeriodInfo() bool {
	if o != nil && !IsNil(o.AbsolutePeriodInfo) {
		return true
	}

	return false
}

// SetAbsolutePeriodInfo gets a reference to the given VoucherAbsolutePeriodInfo and assigns it to the AbsolutePeriodInfo field.
func (o *VoucherUseTimeInfo) SetAbsolutePeriodInfo(v VoucherAbsolutePeriodInfo) {
	o.AbsolutePeriodInfo = &v
}

// GetPeriodType returns the PeriodType field value if set, zero value otherwise.
func (o *VoucherUseTimeInfo) GetPeriodType() string {
	if o == nil || IsNil(o.PeriodType) {
		var ret string
		return ret
	}
	return *o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeInfo) GetPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodType) {
		return nil, false
	}
	return o.PeriodType, true
}

// HasPeriodType returns a boolean if a field has been set.
func (o *VoucherUseTimeInfo) HasPeriodType() bool {
	if o != nil && !IsNil(o.PeriodType) {
		return true
	}

	return false
}

// SetPeriodType gets a reference to the given string and assigns it to the PeriodType field.
func (o *VoucherUseTimeInfo) SetPeriodType(v string) {
	o.PeriodType = &v
}

// GetRelativePeriodInfo returns the RelativePeriodInfo field value if set, zero value otherwise.
func (o *VoucherUseTimeInfo) GetRelativePeriodInfo() VoucherRelativePeriodInfo {
	if o == nil || IsNil(o.RelativePeriodInfo) {
		var ret VoucherRelativePeriodInfo
		return ret
	}
	return *o.RelativePeriodInfo
}

// GetRelativePeriodInfoOk returns a tuple with the RelativePeriodInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherUseTimeInfo) GetRelativePeriodInfoOk() (*VoucherRelativePeriodInfo, bool) {
	if o == nil || IsNil(o.RelativePeriodInfo) {
		return nil, false
	}
	return o.RelativePeriodInfo, true
}

// HasRelativePeriodInfo returns a boolean if a field has been set.
func (o *VoucherUseTimeInfo) HasRelativePeriodInfo() bool {
	if o != nil && !IsNil(o.RelativePeriodInfo) {
		return true
	}

	return false
}

// SetRelativePeriodInfo gets a reference to the given VoucherRelativePeriodInfo and assigns it to the RelativePeriodInfo field.
func (o *VoucherUseTimeInfo) SetRelativePeriodInfo(v VoucherRelativePeriodInfo) {
	o.RelativePeriodInfo = &v
}

func (o VoucherUseTimeInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherUseTimeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AbsolutePeriodInfo) {
		toSerialize["absolute_period_info"] = o.AbsolutePeriodInfo
	}
	if !IsNil(o.PeriodType) {
		toSerialize["period_type"] = o.PeriodType
	}
	if !IsNil(o.RelativePeriodInfo) {
		toSerialize["relative_period_info"] = o.RelativePeriodInfo
	}
	return toSerialize, nil
}

type NullableVoucherUseTimeInfo struct {
	value *VoucherUseTimeInfo
	isSet bool
}

func (v NullableVoucherUseTimeInfo) Get() *VoucherUseTimeInfo {
	return v.value
}

func (v *NullableVoucherUseTimeInfo) Set(val *VoucherUseTimeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherUseTimeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherUseTimeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherUseTimeInfo(val *VoucherUseTimeInfo) *NullableVoucherUseTimeInfo {
	return &NullableVoucherUseTimeInfo{value: val, isSet: true}
}

func (v NullableVoucherUseTimeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherUseTimeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

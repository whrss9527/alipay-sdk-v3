/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoucherDeductInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherDeductInfo{}

// VoucherDeductInfo struct for VoucherDeductInfo
type VoucherDeductInfo struct {
	CustomerDefineVoucherInfo *CustomerDefineVoucherInfo `json:"customer_define_voucher_info,omitempty"`
	DiscountVoucherInfo *DiscountVoucherInfo `json:"discount_voucher_info,omitempty"`
	ExchangeVoucherInfo *ExchangeVoucherInfo `json:"exchange_voucher_info,omitempty"`
	FixVoucherInfo *FixVoucherInfo `json:"fix_voucher_info,omitempty"`
	SpecialVoucherInfo *SpecialVoucherInfo `json:"special_voucher_info,omitempty"`
	// 券类型。
	VoucherType *string `json:"voucher_type,omitempty"`
}

// NewVoucherDeductInfo instantiates a new VoucherDeductInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherDeductInfo() *VoucherDeductInfo {
	this := VoucherDeductInfo{}
	return &this
}

// NewVoucherDeductInfoWithDefaults instantiates a new VoucherDeductInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherDeductInfoWithDefaults() *VoucherDeductInfo {
	this := VoucherDeductInfo{}
	return &this
}

// GetCustomerDefineVoucherInfo returns the CustomerDefineVoucherInfo field value if set, zero value otherwise.
func (o *VoucherDeductInfo) GetCustomerDefineVoucherInfo() CustomerDefineVoucherInfo {
	if o == nil || IsNil(o.CustomerDefineVoucherInfo) {
		var ret CustomerDefineVoucherInfo
		return ret
	}
	return *o.CustomerDefineVoucherInfo
}

// GetCustomerDefineVoucherInfoOk returns a tuple with the CustomerDefineVoucherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDeductInfo) GetCustomerDefineVoucherInfoOk() (*CustomerDefineVoucherInfo, bool) {
	if o == nil || IsNil(o.CustomerDefineVoucherInfo) {
		return nil, false
	}
	return o.CustomerDefineVoucherInfo, true
}

// HasCustomerDefineVoucherInfo returns a boolean if a field has been set.
func (o *VoucherDeductInfo) HasCustomerDefineVoucherInfo() bool {
	if o != nil && !IsNil(o.CustomerDefineVoucherInfo) {
		return true
	}

	return false
}

// SetCustomerDefineVoucherInfo gets a reference to the given CustomerDefineVoucherInfo and assigns it to the CustomerDefineVoucherInfo field.
func (o *VoucherDeductInfo) SetCustomerDefineVoucherInfo(v CustomerDefineVoucherInfo) {
	o.CustomerDefineVoucherInfo = &v
}

// GetDiscountVoucherInfo returns the DiscountVoucherInfo field value if set, zero value otherwise.
func (o *VoucherDeductInfo) GetDiscountVoucherInfo() DiscountVoucherInfo {
	if o == nil || IsNil(o.DiscountVoucherInfo) {
		var ret DiscountVoucherInfo
		return ret
	}
	return *o.DiscountVoucherInfo
}

// GetDiscountVoucherInfoOk returns a tuple with the DiscountVoucherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDeductInfo) GetDiscountVoucherInfoOk() (*DiscountVoucherInfo, bool) {
	if o == nil || IsNil(o.DiscountVoucherInfo) {
		return nil, false
	}
	return o.DiscountVoucherInfo, true
}

// HasDiscountVoucherInfo returns a boolean if a field has been set.
func (o *VoucherDeductInfo) HasDiscountVoucherInfo() bool {
	if o != nil && !IsNil(o.DiscountVoucherInfo) {
		return true
	}

	return false
}

// SetDiscountVoucherInfo gets a reference to the given DiscountVoucherInfo and assigns it to the DiscountVoucherInfo field.
func (o *VoucherDeductInfo) SetDiscountVoucherInfo(v DiscountVoucherInfo) {
	o.DiscountVoucherInfo = &v
}

// GetExchangeVoucherInfo returns the ExchangeVoucherInfo field value if set, zero value otherwise.
func (o *VoucherDeductInfo) GetExchangeVoucherInfo() ExchangeVoucherInfo {
	if o == nil || IsNil(o.ExchangeVoucherInfo) {
		var ret ExchangeVoucherInfo
		return ret
	}
	return *o.ExchangeVoucherInfo
}

// GetExchangeVoucherInfoOk returns a tuple with the ExchangeVoucherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDeductInfo) GetExchangeVoucherInfoOk() (*ExchangeVoucherInfo, bool) {
	if o == nil || IsNil(o.ExchangeVoucherInfo) {
		return nil, false
	}
	return o.ExchangeVoucherInfo, true
}

// HasExchangeVoucherInfo returns a boolean if a field has been set.
func (o *VoucherDeductInfo) HasExchangeVoucherInfo() bool {
	if o != nil && !IsNil(o.ExchangeVoucherInfo) {
		return true
	}

	return false
}

// SetExchangeVoucherInfo gets a reference to the given ExchangeVoucherInfo and assigns it to the ExchangeVoucherInfo field.
func (o *VoucherDeductInfo) SetExchangeVoucherInfo(v ExchangeVoucherInfo) {
	o.ExchangeVoucherInfo = &v
}

// GetFixVoucherInfo returns the FixVoucherInfo field value if set, zero value otherwise.
func (o *VoucherDeductInfo) GetFixVoucherInfo() FixVoucherInfo {
	if o == nil || IsNil(o.FixVoucherInfo) {
		var ret FixVoucherInfo
		return ret
	}
	return *o.FixVoucherInfo
}

// GetFixVoucherInfoOk returns a tuple with the FixVoucherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDeductInfo) GetFixVoucherInfoOk() (*FixVoucherInfo, bool) {
	if o == nil || IsNil(o.FixVoucherInfo) {
		return nil, false
	}
	return o.FixVoucherInfo, true
}

// HasFixVoucherInfo returns a boolean if a field has been set.
func (o *VoucherDeductInfo) HasFixVoucherInfo() bool {
	if o != nil && !IsNil(o.FixVoucherInfo) {
		return true
	}

	return false
}

// SetFixVoucherInfo gets a reference to the given FixVoucherInfo and assigns it to the FixVoucherInfo field.
func (o *VoucherDeductInfo) SetFixVoucherInfo(v FixVoucherInfo) {
	o.FixVoucherInfo = &v
}

// GetSpecialVoucherInfo returns the SpecialVoucherInfo field value if set, zero value otherwise.
func (o *VoucherDeductInfo) GetSpecialVoucherInfo() SpecialVoucherInfo {
	if o == nil || IsNil(o.SpecialVoucherInfo) {
		var ret SpecialVoucherInfo
		return ret
	}
	return *o.SpecialVoucherInfo
}

// GetSpecialVoucherInfoOk returns a tuple with the SpecialVoucherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDeductInfo) GetSpecialVoucherInfoOk() (*SpecialVoucherInfo, bool) {
	if o == nil || IsNil(o.SpecialVoucherInfo) {
		return nil, false
	}
	return o.SpecialVoucherInfo, true
}

// HasSpecialVoucherInfo returns a boolean if a field has been set.
func (o *VoucherDeductInfo) HasSpecialVoucherInfo() bool {
	if o != nil && !IsNil(o.SpecialVoucherInfo) {
		return true
	}

	return false
}

// SetSpecialVoucherInfo gets a reference to the given SpecialVoucherInfo and assigns it to the SpecialVoucherInfo field.
func (o *VoucherDeductInfo) SetSpecialVoucherInfo(v SpecialVoucherInfo) {
	o.SpecialVoucherInfo = &v
}

// GetVoucherType returns the VoucherType field value if set, zero value otherwise.
func (o *VoucherDeductInfo) GetVoucherType() string {
	if o == nil || IsNil(o.VoucherType) {
		var ret string
		return ret
	}
	return *o.VoucherType
}

// GetVoucherTypeOk returns a tuple with the VoucherType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDeductInfo) GetVoucherTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherType) {
		return nil, false
	}
	return o.VoucherType, true
}

// HasVoucherType returns a boolean if a field has been set.
func (o *VoucherDeductInfo) HasVoucherType() bool {
	if o != nil && !IsNil(o.VoucherType) {
		return true
	}

	return false
}

// SetVoucherType gets a reference to the given string and assigns it to the VoucherType field.
func (o *VoucherDeductInfo) SetVoucherType(v string) {
	o.VoucherType = &v
}

func (o VoucherDeductInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherDeductInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerDefineVoucherInfo) {
		toSerialize["customer_define_voucher_info"] = o.CustomerDefineVoucherInfo
	}
	if !IsNil(o.DiscountVoucherInfo) {
		toSerialize["discount_voucher_info"] = o.DiscountVoucherInfo
	}
	if !IsNil(o.ExchangeVoucherInfo) {
		toSerialize["exchange_voucher_info"] = o.ExchangeVoucherInfo
	}
	if !IsNil(o.FixVoucherInfo) {
		toSerialize["fix_voucher_info"] = o.FixVoucherInfo
	}
	if !IsNil(o.SpecialVoucherInfo) {
		toSerialize["special_voucher_info"] = o.SpecialVoucherInfo
	}
	if !IsNil(o.VoucherType) {
		toSerialize["voucher_type"] = o.VoucherType
	}
	return toSerialize, nil
}

type NullableVoucherDeductInfo struct {
	value *VoucherDeductInfo
	isSet bool
}

func (v NullableVoucherDeductInfo) Get() *VoucherDeductInfo {
	return v.value
}

func (v *NullableVoucherDeductInfo) Set(val *VoucherDeductInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherDeductInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherDeductInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherDeductInfo(val *VoucherDeductInfo) *NullableVoucherDeductInfo {
	return &NullableVoucherDeductInfo{value: val, isSet: true}
}

func (v NullableVoucherDeductInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherDeductInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



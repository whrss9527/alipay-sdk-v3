/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the WeekRuleInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeekRuleInfo{}

// WeekRuleInfo struct for WeekRuleInfo
type WeekRuleInfo struct {
	TimeRangeInfo *TimeRangeInfo `json:"time_range_info,omitempty"`
	// 星期数，以“,”连接多个星期数
	WeekDay *string `json:"week_day,omitempty"`
}

// NewWeekRuleInfo instantiates a new WeekRuleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeekRuleInfo() *WeekRuleInfo {
	this := WeekRuleInfo{}
	return &this
}

// NewWeekRuleInfoWithDefaults instantiates a new WeekRuleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeekRuleInfoWithDefaults() *WeekRuleInfo {
	this := WeekRuleInfo{}
	return &this
}

// GetTimeRangeInfo returns the TimeRangeInfo field value if set, zero value otherwise.
func (o *WeekRuleInfo) GetTimeRangeInfo() TimeRangeInfo {
	if o == nil || IsNil(o.TimeRangeInfo) {
		var ret TimeRangeInfo
		return ret
	}
	return *o.TimeRangeInfo
}

// GetTimeRangeInfoOk returns a tuple with the TimeRangeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WeekRuleInfo) GetTimeRangeInfoOk() (*TimeRangeInfo, bool) {
	if o == nil || IsNil(o.TimeRangeInfo) {
		return nil, false
	}
	return o.TimeRangeInfo, true
}

// HasTimeRangeInfo returns a boolean if a field has been set.
func (o *WeekRuleInfo) HasTimeRangeInfo() bool {
	if o != nil && !IsNil(o.TimeRangeInfo) {
		return true
	}

	return false
}

// SetTimeRangeInfo gets a reference to the given TimeRangeInfo and assigns it to the TimeRangeInfo field.
func (o *WeekRuleInfo) SetTimeRangeInfo(v TimeRangeInfo) {
	o.TimeRangeInfo = &v
}

// GetWeekDay returns the WeekDay field value if set, zero value otherwise.
func (o *WeekRuleInfo) GetWeekDay() string {
	if o == nil || IsNil(o.WeekDay) {
		var ret string
		return ret
	}
	return *o.WeekDay
}

// GetWeekDayOk returns a tuple with the WeekDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WeekRuleInfo) GetWeekDayOk() (*string, bool) {
	if o == nil || IsNil(o.WeekDay) {
		return nil, false
	}
	return o.WeekDay, true
}

// HasWeekDay returns a boolean if a field has been set.
func (o *WeekRuleInfo) HasWeekDay() bool {
	if o != nil && !IsNil(o.WeekDay) {
		return true
	}

	return false
}

// SetWeekDay gets a reference to the given string and assigns it to the WeekDay field.
func (o *WeekRuleInfo) SetWeekDay(v string) {
	o.WeekDay = &v
}

func (o WeekRuleInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeekRuleInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeRangeInfo) {
		toSerialize["time_range_info"] = o.TimeRangeInfo
	}
	if !IsNil(o.WeekDay) {
		toSerialize["week_day"] = o.WeekDay
	}
	return toSerialize, nil
}

type NullableWeekRuleInfo struct {
	value *WeekRuleInfo
	isSet bool
}

func (v NullableWeekRuleInfo) Get() *WeekRuleInfo {
	return v.value
}

func (v *NullableWeekRuleInfo) Set(val *WeekRuleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWeekRuleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWeekRuleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeekRuleInfo(val *WeekRuleInfo) *NullableWeekRuleInfo {
	return &NullableWeekRuleInfo{value: val, isSet: true}
}

func (v NullableWeekRuleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeekRuleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

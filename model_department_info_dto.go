/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the DepartmentInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepartmentInfoDTO{}

// DepartmentInfoDTO struct for DepartmentInfoDTO
type DepartmentInfoDTO struct {
	// 部门编码
	DepartmentCode *string `json:"department_code,omitempty"`
	// 部门id
	DepartmentId *string `json:"department_id,omitempty"`
	// 部门名称
	DepartmentName *string `json:"department_name,omitempty"`
	// 创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 修改时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 上级部门id，特殊值-1表示根部门
	ParentDepartmentId *string `json:"parent_department_id,omitempty"`
}

// NewDepartmentInfoDTO instantiates a new DepartmentInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepartmentInfoDTO() *DepartmentInfoDTO {
	this := DepartmentInfoDTO{}
	return &this
}

// NewDepartmentInfoDTOWithDefaults instantiates a new DepartmentInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepartmentInfoDTOWithDefaults() *DepartmentInfoDTO {
	this := DepartmentInfoDTO{}
	return &this
}

// GetDepartmentCode returns the DepartmentCode field value if set, zero value otherwise.
func (o *DepartmentInfoDTO) GetDepartmentCode() string {
	if o == nil || IsNil(o.DepartmentCode) {
		var ret string
		return ret
	}
	return *o.DepartmentCode
}

// GetDepartmentCodeOk returns a tuple with the DepartmentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepartmentInfoDTO) GetDepartmentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DepartmentCode) {
		return nil, false
	}
	return o.DepartmentCode, true
}

// HasDepartmentCode returns a boolean if a field has been set.
func (o *DepartmentInfoDTO) HasDepartmentCode() bool {
	if o != nil && !IsNil(o.DepartmentCode) {
		return true
	}

	return false
}

// SetDepartmentCode gets a reference to the given string and assigns it to the DepartmentCode field.
func (o *DepartmentInfoDTO) SetDepartmentCode(v string) {
	o.DepartmentCode = &v
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *DepartmentInfoDTO) GetDepartmentId() string {
	if o == nil || IsNil(o.DepartmentId) {
		var ret string
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepartmentInfoDTO) GetDepartmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DepartmentId) {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *DepartmentInfoDTO) HasDepartmentId() bool {
	if o != nil && !IsNil(o.DepartmentId) {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given string and assigns it to the DepartmentId field.
func (o *DepartmentInfoDTO) SetDepartmentId(v string) {
	o.DepartmentId = &v
}

// GetDepartmentName returns the DepartmentName field value if set, zero value otherwise.
func (o *DepartmentInfoDTO) GetDepartmentName() string {
	if o == nil || IsNil(o.DepartmentName) {
		var ret string
		return ret
	}
	return *o.DepartmentName
}

// GetDepartmentNameOk returns a tuple with the DepartmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepartmentInfoDTO) GetDepartmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.DepartmentName) {
		return nil, false
	}
	return o.DepartmentName, true
}

// HasDepartmentName returns a boolean if a field has been set.
func (o *DepartmentInfoDTO) HasDepartmentName() bool {
	if o != nil && !IsNil(o.DepartmentName) {
		return true
	}

	return false
}

// SetDepartmentName gets a reference to the given string and assigns it to the DepartmentName field.
func (o *DepartmentInfoDTO) SetDepartmentName(v string) {
	o.DepartmentName = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *DepartmentInfoDTO) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepartmentInfoDTO) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *DepartmentInfoDTO) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *DepartmentInfoDTO) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *DepartmentInfoDTO) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepartmentInfoDTO) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *DepartmentInfoDTO) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *DepartmentInfoDTO) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetParentDepartmentId returns the ParentDepartmentId field value if set, zero value otherwise.
func (o *DepartmentInfoDTO) GetParentDepartmentId() string {
	if o == nil || IsNil(o.ParentDepartmentId) {
		var ret string
		return ret
	}
	return *o.ParentDepartmentId
}

// GetParentDepartmentIdOk returns a tuple with the ParentDepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepartmentInfoDTO) GetParentDepartmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentDepartmentId) {
		return nil, false
	}
	return o.ParentDepartmentId, true
}

// HasParentDepartmentId returns a boolean if a field has been set.
func (o *DepartmentInfoDTO) HasParentDepartmentId() bool {
	if o != nil && !IsNil(o.ParentDepartmentId) {
		return true
	}

	return false
}

// SetParentDepartmentId gets a reference to the given string and assigns it to the ParentDepartmentId field.
func (o *DepartmentInfoDTO) SetParentDepartmentId(v string) {
	o.ParentDepartmentId = &v
}

func (o DepartmentInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepartmentInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DepartmentCode) {
		toSerialize["department_code"] = o.DepartmentCode
	}
	if !IsNil(o.DepartmentId) {
		toSerialize["department_id"] = o.DepartmentId
	}
	if !IsNil(o.DepartmentName) {
		toSerialize["department_name"] = o.DepartmentName
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.ParentDepartmentId) {
		toSerialize["parent_department_id"] = o.ParentDepartmentId
	}
	return toSerialize, nil
}

type NullableDepartmentInfoDTO struct {
	value *DepartmentInfoDTO
	isSet bool
}

func (v NullableDepartmentInfoDTO) Get() *DepartmentInfoDTO {
	return v.value
}

func (v *NullableDepartmentInfoDTO) Set(val *DepartmentInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDepartmentInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDepartmentInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepartmentInfoDTO(val *DepartmentInfoDTO) *NullableDepartmentInfoDTO {
	return &NullableDepartmentInfoDTO{value: val, isSet: true}
}

func (v NullableDepartmentInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepartmentInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

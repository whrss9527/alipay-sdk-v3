/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ItemConsultInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemConsultInfo{}

// ItemConsultInfo struct for ItemConsultInfo
type ItemConsultInfo struct {
	// 商品id
	ItemId *string `json:"item_id,omitempty"`
	// 商品优惠金额，单位为元
	PromoAmount *string `json:"promo_amount,omitempty"`
	// 商品优惠数量
	PromoCount *string `json:"promo_count,omitempty"`
}

// NewItemConsultInfo instantiates a new ItemConsultInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemConsultInfo() *ItemConsultInfo {
	this := ItemConsultInfo{}
	return &this
}

// NewItemConsultInfoWithDefaults instantiates a new ItemConsultInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemConsultInfoWithDefaults() *ItemConsultInfo {
	this := ItemConsultInfo{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ItemConsultInfo) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemConsultInfo) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ItemConsultInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ItemConsultInfo) SetItemId(v string) {
	o.ItemId = &v
}

// GetPromoAmount returns the PromoAmount field value if set, zero value otherwise.
func (o *ItemConsultInfo) GetPromoAmount() string {
	if o == nil || IsNil(o.PromoAmount) {
		var ret string
		return ret
	}
	return *o.PromoAmount
}

// GetPromoAmountOk returns a tuple with the PromoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemConsultInfo) GetPromoAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PromoAmount) {
		return nil, false
	}
	return o.PromoAmount, true
}

// HasPromoAmount returns a boolean if a field has been set.
func (o *ItemConsultInfo) HasPromoAmount() bool {
	if o != nil && !IsNil(o.PromoAmount) {
		return true
	}

	return false
}

// SetPromoAmount gets a reference to the given string and assigns it to the PromoAmount field.
func (o *ItemConsultInfo) SetPromoAmount(v string) {
	o.PromoAmount = &v
}

// GetPromoCount returns the PromoCount field value if set, zero value otherwise.
func (o *ItemConsultInfo) GetPromoCount() string {
	if o == nil || IsNil(o.PromoCount) {
		var ret string
		return ret
	}
	return *o.PromoCount
}

// GetPromoCountOk returns a tuple with the PromoCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemConsultInfo) GetPromoCountOk() (*string, bool) {
	if o == nil || IsNil(o.PromoCount) {
		return nil, false
	}
	return o.PromoCount, true
}

// HasPromoCount returns a boolean if a field has been set.
func (o *ItemConsultInfo) HasPromoCount() bool {
	if o != nil && !IsNil(o.PromoCount) {
		return true
	}

	return false
}

// SetPromoCount gets a reference to the given string and assigns it to the PromoCount field.
func (o *ItemConsultInfo) SetPromoCount(v string) {
	o.PromoCount = &v
}

func (o ItemConsultInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemConsultInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.PromoAmount) {
		toSerialize["promo_amount"] = o.PromoAmount
	}
	if !IsNil(o.PromoCount) {
		toSerialize["promo_count"] = o.PromoCount
	}
	return toSerialize, nil
}

type NullableItemConsultInfo struct {
	value *ItemConsultInfo
	isSet bool
}

func (v NullableItemConsultInfo) Get() *ItemConsultInfo {
	return v.value
}

func (v *NullableItemConsultInfo) Set(val *ItemConsultInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableItemConsultInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableItemConsultInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemConsultInfo(val *ItemConsultInfo) *NullableItemConsultInfo {
	return &NullableItemConsultInfo{value: val, isSet: true}
}

func (v NullableItemConsultInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemConsultInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderPageQueryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderPageQueryDTO{}

// OrderPageQueryDTO struct for OrderPageQueryDTO
type OrderPageQueryDTO struct {
	// 审核单数据信息
	PageData []ApplyOrderData `json:"page_data,omitempty"`
	// 当前页码，默认第一页
	PageNum *string `json:"page_num,omitempty"`
	// 每页记录数，默认10
	PageSize *string `json:"page_size,omitempty"`
	// 记录总数
	TotalNumber *int32 `json:"total_number,omitempty"`
}

// NewOrderPageQueryDTO instantiates a new OrderPageQueryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderPageQueryDTO() *OrderPageQueryDTO {
	this := OrderPageQueryDTO{}
	return &this
}

// NewOrderPageQueryDTOWithDefaults instantiates a new OrderPageQueryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderPageQueryDTOWithDefaults() *OrderPageQueryDTO {
	this := OrderPageQueryDTO{}
	return &this
}

// GetPageData returns the PageData field value if set, zero value otherwise.
func (o *OrderPageQueryDTO) GetPageData() []ApplyOrderData {
	if o == nil || IsNil(o.PageData) {
		var ret []ApplyOrderData
		return ret
	}
	return o.PageData
}

// GetPageDataOk returns a tuple with the PageData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPageQueryDTO) GetPageDataOk() ([]ApplyOrderData, bool) {
	if o == nil || IsNil(o.PageData) {
		return nil, false
	}
	return o.PageData, true
}

// HasPageData returns a boolean if a field has been set.
func (o *OrderPageQueryDTO) HasPageData() bool {
	if o != nil && !IsNil(o.PageData) {
		return true
	}

	return false
}

// SetPageData gets a reference to the given []ApplyOrderData and assigns it to the PageData field.
func (o *OrderPageQueryDTO) SetPageData(v []ApplyOrderData) {
	o.PageData = v
}

// GetPageNum returns the PageNum field value if set, zero value otherwise.
func (o *OrderPageQueryDTO) GetPageNum() string {
	if o == nil || IsNil(o.PageNum) {
		var ret string
		return ret
	}
	return *o.PageNum
}

// GetPageNumOk returns a tuple with the PageNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPageQueryDTO) GetPageNumOk() (*string, bool) {
	if o == nil || IsNil(o.PageNum) {
		return nil, false
	}
	return o.PageNum, true
}

// HasPageNum returns a boolean if a field has been set.
func (o *OrderPageQueryDTO) HasPageNum() bool {
	if o != nil && !IsNil(o.PageNum) {
		return true
	}

	return false
}

// SetPageNum gets a reference to the given string and assigns it to the PageNum field.
func (o *OrderPageQueryDTO) SetPageNum(v string) {
	o.PageNum = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *OrderPageQueryDTO) GetPageSize() string {
	if o == nil || IsNil(o.PageSize) {
		var ret string
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPageQueryDTO) GetPageSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *OrderPageQueryDTO) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given string and assigns it to the PageSize field.
func (o *OrderPageQueryDTO) SetPageSize(v string) {
	o.PageSize = &v
}

// GetTotalNumber returns the TotalNumber field value if set, zero value otherwise.
func (o *OrderPageQueryDTO) GetTotalNumber() int32 {
	if o == nil || IsNil(o.TotalNumber) {
		var ret int32
		return ret
	}
	return *o.TotalNumber
}

// GetTotalNumberOk returns a tuple with the TotalNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPageQueryDTO) GetTotalNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalNumber) {
		return nil, false
	}
	return o.TotalNumber, true
}

// HasTotalNumber returns a boolean if a field has been set.
func (o *OrderPageQueryDTO) HasTotalNumber() bool {
	if o != nil && !IsNil(o.TotalNumber) {
		return true
	}

	return false
}

// SetTotalNumber gets a reference to the given int32 and assigns it to the TotalNumber field.
func (o *OrderPageQueryDTO) SetTotalNumber(v int32) {
	o.TotalNumber = &v
}

func (o OrderPageQueryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderPageQueryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageData) {
		toSerialize["page_data"] = o.PageData
	}
	if !IsNil(o.PageNum) {
		toSerialize["page_num"] = o.PageNum
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.TotalNumber) {
		toSerialize["total_number"] = o.TotalNumber
	}
	return toSerialize, nil
}

type NullableOrderPageQueryDTO struct {
	value *OrderPageQueryDTO
	isSet bool
}

func (v NullableOrderPageQueryDTO) Get() *OrderPageQueryDTO {
	return v.value
}

func (v *NullableOrderPageQueryDTO) Set(val *OrderPageQueryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderPageQueryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderPageQueryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderPageQueryDTO(val *OrderPageQueryDTO) *NullableOrderPageQueryDTO {
	return &NullableOrderPageQueryDTO{value: val, isSet: true}
}

func (v NullableOrderPageQueryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderPageQueryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



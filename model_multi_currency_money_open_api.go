/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the MultiCurrencyMoneyOpenApi type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiCurrencyMoneyOpenApi{}

// MultiCurrencyMoneyOpenApi struct for MultiCurrencyMoneyOpenApi
type MultiCurrencyMoneyOpenApi struct {
	// 分
	Cent *int32 `json:"cent,omitempty"`
	// 币种类型值
	CurrencyValue *string `json:"currency_value,omitempty"`
}

// NewMultiCurrencyMoneyOpenApi instantiates a new MultiCurrencyMoneyOpenApi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiCurrencyMoneyOpenApi() *MultiCurrencyMoneyOpenApi {
	this := MultiCurrencyMoneyOpenApi{}
	return &this
}

// NewMultiCurrencyMoneyOpenApiWithDefaults instantiates a new MultiCurrencyMoneyOpenApi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiCurrencyMoneyOpenApiWithDefaults() *MultiCurrencyMoneyOpenApi {
	this := MultiCurrencyMoneyOpenApi{}
	return &this
}

// GetCent returns the Cent field value if set, zero value otherwise.
func (o *MultiCurrencyMoneyOpenApi) GetCent() int32 {
	if o == nil || IsNil(o.Cent) {
		var ret int32
		return ret
	}
	return *o.Cent
}

// GetCentOk returns a tuple with the Cent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCurrencyMoneyOpenApi) GetCentOk() (*int32, bool) {
	if o == nil || IsNil(o.Cent) {
		return nil, false
	}
	return o.Cent, true
}

// HasCent returns a boolean if a field has been set.
func (o *MultiCurrencyMoneyOpenApi) HasCent() bool {
	if o != nil && !IsNil(o.Cent) {
		return true
	}

	return false
}

// SetCent gets a reference to the given int32 and assigns it to the Cent field.
func (o *MultiCurrencyMoneyOpenApi) SetCent(v int32) {
	o.Cent = &v
}

// GetCurrencyValue returns the CurrencyValue field value if set, zero value otherwise.
func (o *MultiCurrencyMoneyOpenApi) GetCurrencyValue() string {
	if o == nil || IsNil(o.CurrencyValue) {
		var ret string
		return ret
	}
	return *o.CurrencyValue
}

// GetCurrencyValueOk returns a tuple with the CurrencyValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCurrencyMoneyOpenApi) GetCurrencyValueOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyValue) {
		return nil, false
	}
	return o.CurrencyValue, true
}

// HasCurrencyValue returns a boolean if a field has been set.
func (o *MultiCurrencyMoneyOpenApi) HasCurrencyValue() bool {
	if o != nil && !IsNil(o.CurrencyValue) {
		return true
	}

	return false
}

// SetCurrencyValue gets a reference to the given string and assigns it to the CurrencyValue field.
func (o *MultiCurrencyMoneyOpenApi) SetCurrencyValue(v string) {
	o.CurrencyValue = &v
}

func (o MultiCurrencyMoneyOpenApi) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiCurrencyMoneyOpenApi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cent) {
		toSerialize["cent"] = o.Cent
	}
	if !IsNil(o.CurrencyValue) {
		toSerialize["currency_value"] = o.CurrencyValue
	}
	return toSerialize, nil
}

type NullableMultiCurrencyMoneyOpenApi struct {
	value *MultiCurrencyMoneyOpenApi
	isSet bool
}

func (v NullableMultiCurrencyMoneyOpenApi) Get() *MultiCurrencyMoneyOpenApi {
	return v.value
}

func (v *NullableMultiCurrencyMoneyOpenApi) Set(val *MultiCurrencyMoneyOpenApi) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiCurrencyMoneyOpenApi) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiCurrencyMoneyOpenApi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiCurrencyMoneyOpenApi(val *MultiCurrencyMoneyOpenApi) *NullableMultiCurrencyMoneyOpenApi {
	return &NullableMultiCurrencyMoneyOpenApi{value: val, isSet: true}
}

func (v NullableMultiCurrencyMoneyOpenApi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiCurrencyMoneyOpenApi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

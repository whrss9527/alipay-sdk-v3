/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the TradeComplainQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TradeComplainQueryResponse{}

// TradeComplainQueryResponse struct for TradeComplainQueryResponse
type TradeComplainQueryResponse struct {
	// 支付宝侧投诉单号
	ComplainEventId *string `json:"complain_event_id,omitempty"`
	// 投诉原因
	ComplainReason *string `json:"complain_reason,omitempty"`
	// 已经扣除了我的钱，为什么再次扣款？？？
	Content *string `json:"content,omitempty"`
	// 投诉单创建时间
	GmtCreate *string `json:"gmt_create,omitempty"`
	// 投诉单结束时间
	GmtFinished *string `json:"gmt_finished,omitempty"`
	// 投诉单修改时间
	GmtModified *string `json:"gmt_modified,omitempty"`
	// 投诉图片
	Images []string `json:"images,omitempty"`
	// 投诉诉求
	LeafCategoryName *string `json:"leaf_category_name,omitempty"`
	// 商家订单号
	MerchantOrderNo *string `json:"merchant_order_no,omitempty"`
	// 投诉人电话号码
	PhoneNo *string `json:"phone_no,omitempty"`
	// 状态 商家处理中：MERCHANT_PROCESSING 商家已反馈：MERCHANT_FEEDBACKED 投诉已完结：FINISHED 投诉已撤销：CANCELLED 平台处理中：PLATFORM_PROCESSING 平台处理完结：PLATFORM_FINISH 系统关闭：CLOSED
	Status *string `json:"status,omitempty"`
	// 应用id，例如小程序id、生活号id、商家pid
	TargetId *string `json:"target_id,omitempty"`
	// 应用类型 小程序为：APPID 生活号为：PUBLICID 商家为：PID
	TargetType *string `json:"target_type,omitempty"`
	// 支付宝交易号
	TradeNo *string `json:"trade_no,omitempty"`
}

// NewTradeComplainQueryResponse instantiates a new TradeComplainQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeComplainQueryResponse() *TradeComplainQueryResponse {
	this := TradeComplainQueryResponse{}
	return &this
}

// NewTradeComplainQueryResponseWithDefaults instantiates a new TradeComplainQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeComplainQueryResponseWithDefaults() *TradeComplainQueryResponse {
	this := TradeComplainQueryResponse{}
	return &this
}

// GetComplainEventId returns the ComplainEventId field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetComplainEventId() string {
	if o == nil || IsNil(o.ComplainEventId) {
		var ret string
		return ret
	}
	return *o.ComplainEventId
}

// GetComplainEventIdOk returns a tuple with the ComplainEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetComplainEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComplainEventId) {
		return nil, false
	}
	return o.ComplainEventId, true
}

// HasComplainEventId returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasComplainEventId() bool {
	if o != nil && !IsNil(o.ComplainEventId) {
		return true
	}

	return false
}

// SetComplainEventId gets a reference to the given string and assigns it to the ComplainEventId field.
func (o *TradeComplainQueryResponse) SetComplainEventId(v string) {
	o.ComplainEventId = &v
}

// GetComplainReason returns the ComplainReason field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetComplainReason() string {
	if o == nil || IsNil(o.ComplainReason) {
		var ret string
		return ret
	}
	return *o.ComplainReason
}

// GetComplainReasonOk returns a tuple with the ComplainReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetComplainReasonOk() (*string, bool) {
	if o == nil || IsNil(o.ComplainReason) {
		return nil, false
	}
	return o.ComplainReason, true
}

// HasComplainReason returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasComplainReason() bool {
	if o != nil && !IsNil(o.ComplainReason) {
		return true
	}

	return false
}

// SetComplainReason gets a reference to the given string and assigns it to the ComplainReason field.
func (o *TradeComplainQueryResponse) SetComplainReason(v string) {
	o.ComplainReason = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *TradeComplainQueryResponse) SetContent(v string) {
	o.Content = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *TradeComplainQueryResponse) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetGmtFinished returns the GmtFinished field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetGmtFinished() string {
	if o == nil || IsNil(o.GmtFinished) {
		var ret string
		return ret
	}
	return *o.GmtFinished
}

// GetGmtFinishedOk returns a tuple with the GmtFinished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetGmtFinishedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtFinished) {
		return nil, false
	}
	return o.GmtFinished, true
}

// HasGmtFinished returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasGmtFinished() bool {
	if o != nil && !IsNil(o.GmtFinished) {
		return true
	}

	return false
}

// SetGmtFinished gets a reference to the given string and assigns it to the GmtFinished field.
func (o *TradeComplainQueryResponse) SetGmtFinished(v string) {
	o.GmtFinished = &v
}

// GetGmtModified returns the GmtModified field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetGmtModified() string {
	if o == nil || IsNil(o.GmtModified) {
		var ret string
		return ret
	}
	return *o.GmtModified
}

// GetGmtModifiedOk returns a tuple with the GmtModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetGmtModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.GmtModified) {
		return nil, false
	}
	return o.GmtModified, true
}

// HasGmtModified returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasGmtModified() bool {
	if o != nil && !IsNil(o.GmtModified) {
		return true
	}

	return false
}

// SetGmtModified gets a reference to the given string and assigns it to the GmtModified field.
func (o *TradeComplainQueryResponse) SetGmtModified(v string) {
	o.GmtModified = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetImages() []string {
	if o == nil || IsNil(o.Images) {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *TradeComplainQueryResponse) SetImages(v []string) {
	o.Images = v
}

// GetLeafCategoryName returns the LeafCategoryName field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetLeafCategoryName() string {
	if o == nil || IsNil(o.LeafCategoryName) {
		var ret string
		return ret
	}
	return *o.LeafCategoryName
}

// GetLeafCategoryNameOk returns a tuple with the LeafCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetLeafCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.LeafCategoryName) {
		return nil, false
	}
	return o.LeafCategoryName, true
}

// HasLeafCategoryName returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasLeafCategoryName() bool {
	if o != nil && !IsNil(o.LeafCategoryName) {
		return true
	}

	return false
}

// SetLeafCategoryName gets a reference to the given string and assigns it to the LeafCategoryName field.
func (o *TradeComplainQueryResponse) SetLeafCategoryName(v string) {
	o.LeafCategoryName = &v
}

// GetMerchantOrderNo returns the MerchantOrderNo field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetMerchantOrderNo() string {
	if o == nil || IsNil(o.MerchantOrderNo) {
		var ret string
		return ret
	}
	return *o.MerchantOrderNo
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantOrderNo) {
		return nil, false
	}
	return o.MerchantOrderNo, true
}

// HasMerchantOrderNo returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasMerchantOrderNo() bool {
	if o != nil && !IsNil(o.MerchantOrderNo) {
		return true
	}

	return false
}

// SetMerchantOrderNo gets a reference to the given string and assigns it to the MerchantOrderNo field.
func (o *TradeComplainQueryResponse) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo = &v
}

// GetPhoneNo returns the PhoneNo field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetPhoneNo() string {
	if o == nil || IsNil(o.PhoneNo) {
		var ret string
		return ret
	}
	return *o.PhoneNo
}

// GetPhoneNoOk returns a tuple with the PhoneNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetPhoneNoOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNo) {
		return nil, false
	}
	return o.PhoneNo, true
}

// HasPhoneNo returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasPhoneNo() bool {
	if o != nil && !IsNil(o.PhoneNo) {
		return true
	}

	return false
}

// SetPhoneNo gets a reference to the given string and assigns it to the PhoneNo field.
func (o *TradeComplainQueryResponse) SetPhoneNo(v string) {
	o.PhoneNo = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TradeComplainQueryResponse) SetStatus(v string) {
	o.Status = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *TradeComplainQueryResponse) SetTargetId(v string) {
	o.TargetId = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetTargetType() string {
	if o == nil || IsNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasTargetType() bool {
	if o != nil && !IsNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *TradeComplainQueryResponse) SetTargetType(v string) {
	o.TargetType = &v
}

// GetTradeNo returns the TradeNo field value if set, zero value otherwise.
func (o *TradeComplainQueryResponse) GetTradeNo() string {
	if o == nil || IsNil(o.TradeNo) {
		var ret string
		return ret
	}
	return *o.TradeNo
}

// GetTradeNoOk returns a tuple with the TradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeComplainQueryResponse) GetTradeNoOk() (*string, bool) {
	if o == nil || IsNil(o.TradeNo) {
		return nil, false
	}
	return o.TradeNo, true
}

// HasTradeNo returns a boolean if a field has been set.
func (o *TradeComplainQueryResponse) HasTradeNo() bool {
	if o != nil && !IsNil(o.TradeNo) {
		return true
	}

	return false
}

// SetTradeNo gets a reference to the given string and assigns it to the TradeNo field.
func (o *TradeComplainQueryResponse) SetTradeNo(v string) {
	o.TradeNo = &v
}

func (o TradeComplainQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TradeComplainQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComplainEventId) {
		toSerialize["complain_event_id"] = o.ComplainEventId
	}
	if !IsNil(o.ComplainReason) {
		toSerialize["complain_reason"] = o.ComplainReason
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmt_create"] = o.GmtCreate
	}
	if !IsNil(o.GmtFinished) {
		toSerialize["gmt_finished"] = o.GmtFinished
	}
	if !IsNil(o.GmtModified) {
		toSerialize["gmt_modified"] = o.GmtModified
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.LeafCategoryName) {
		toSerialize["leaf_category_name"] = o.LeafCategoryName
	}
	if !IsNil(o.MerchantOrderNo) {
		toSerialize["merchant_order_no"] = o.MerchantOrderNo
	}
	if !IsNil(o.PhoneNo) {
		toSerialize["phone_no"] = o.PhoneNo
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TargetId) {
		toSerialize["target_id"] = o.TargetId
	}
	if !IsNil(o.TargetType) {
		toSerialize["target_type"] = o.TargetType
	}
	if !IsNil(o.TradeNo) {
		toSerialize["trade_no"] = o.TradeNo
	}
	return toSerialize, nil
}

type NullableTradeComplainQueryResponse struct {
	value *TradeComplainQueryResponse
	isSet bool
}

func (v NullableTradeComplainQueryResponse) Get() *TradeComplainQueryResponse {
	return v.value
}

func (v *NullableTradeComplainQueryResponse) Set(val *TradeComplainQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeComplainQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeComplainQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeComplainQueryResponse(val *TradeComplainQueryResponse) *NullableTradeComplainQueryResponse {
	return &NullableTradeComplainQueryResponse{value: val, isSet: true}
}

func (v NullableTradeComplainQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeComplainQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

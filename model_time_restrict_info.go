/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the TimeRestrictInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeRestrictInfo{}

// TimeRestrictInfo struct for TimeRestrictInfo
type TimeRestrictInfo struct {
	// 不可用时间段
	DisablePeriodInfo []VoucherUseTimeRuleInfo `json:"disable_period_info,omitempty"`
	// 可用时间段
	UsablePeriodInfo []VoucherUseTimeRuleInfo `json:"usable_period_info,omitempty"`
}

// NewTimeRestrictInfo instantiates a new TimeRestrictInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeRestrictInfo() *TimeRestrictInfo {
	this := TimeRestrictInfo{}
	return &this
}

// NewTimeRestrictInfoWithDefaults instantiates a new TimeRestrictInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeRestrictInfoWithDefaults() *TimeRestrictInfo {
	this := TimeRestrictInfo{}
	return &this
}

// GetDisablePeriodInfo returns the DisablePeriodInfo field value if set, zero value otherwise.
func (o *TimeRestrictInfo) GetDisablePeriodInfo() []VoucherUseTimeRuleInfo {
	if o == nil || IsNil(o.DisablePeriodInfo) {
		var ret []VoucherUseTimeRuleInfo
		return ret
	}
	return o.DisablePeriodInfo
}

// GetDisablePeriodInfoOk returns a tuple with the DisablePeriodInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeRestrictInfo) GetDisablePeriodInfoOk() ([]VoucherUseTimeRuleInfo, bool) {
	if o == nil || IsNil(o.DisablePeriodInfo) {
		return nil, false
	}
	return o.DisablePeriodInfo, true
}

// HasDisablePeriodInfo returns a boolean if a field has been set.
func (o *TimeRestrictInfo) HasDisablePeriodInfo() bool {
	if o != nil && !IsNil(o.DisablePeriodInfo) {
		return true
	}

	return false
}

// SetDisablePeriodInfo gets a reference to the given []VoucherUseTimeRuleInfo and assigns it to the DisablePeriodInfo field.
func (o *TimeRestrictInfo) SetDisablePeriodInfo(v []VoucherUseTimeRuleInfo) {
	o.DisablePeriodInfo = v
}

// GetUsablePeriodInfo returns the UsablePeriodInfo field value if set, zero value otherwise.
func (o *TimeRestrictInfo) GetUsablePeriodInfo() []VoucherUseTimeRuleInfo {
	if o == nil || IsNil(o.UsablePeriodInfo) {
		var ret []VoucherUseTimeRuleInfo
		return ret
	}
	return o.UsablePeriodInfo
}

// GetUsablePeriodInfoOk returns a tuple with the UsablePeriodInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeRestrictInfo) GetUsablePeriodInfoOk() ([]VoucherUseTimeRuleInfo, bool) {
	if o == nil || IsNil(o.UsablePeriodInfo) {
		return nil, false
	}
	return o.UsablePeriodInfo, true
}

// HasUsablePeriodInfo returns a boolean if a field has been set.
func (o *TimeRestrictInfo) HasUsablePeriodInfo() bool {
	if o != nil && !IsNil(o.UsablePeriodInfo) {
		return true
	}

	return false
}

// SetUsablePeriodInfo gets a reference to the given []VoucherUseTimeRuleInfo and assigns it to the UsablePeriodInfo field.
func (o *TimeRestrictInfo) SetUsablePeriodInfo(v []VoucherUseTimeRuleInfo) {
	o.UsablePeriodInfo = v
}

func (o TimeRestrictInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeRestrictInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisablePeriodInfo) {
		toSerialize["disable_period_info"] = o.DisablePeriodInfo
	}
	if !IsNil(o.UsablePeriodInfo) {
		toSerialize["usable_period_info"] = o.UsablePeriodInfo
	}
	return toSerialize, nil
}

type NullableTimeRestrictInfo struct {
	value *TimeRestrictInfo
	isSet bool
}

func (v NullableTimeRestrictInfo) Get() *TimeRestrictInfo {
	return v.value
}

func (v *NullableTimeRestrictInfo) Set(val *TimeRestrictInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeRestrictInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeRestrictInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeRestrictInfo(val *TimeRestrictInfo) *NullableTimeRestrictInfo {
	return &NullableTimeRestrictInfo{value: val, isSet: true}
}

func (v NullableTimeRestrictInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeRestrictInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

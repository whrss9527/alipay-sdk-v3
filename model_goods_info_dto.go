/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the GoodsInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsInfoDTO{}

// GoodsInfoDTO struct for GoodsInfoDTO
type GoodsInfoDTO struct {
	// 商品金额
	GoodsAmount *string `json:"goods_amount,omitempty"`
	// 商品购买数量
	GoodsCount *string `json:"goods_count,omitempty"`
	// 商品标准69码
	GoodsId *string `json:"goods_id,omitempty"`
	// 商品名称
	GoodsName *string `json:"goods_name,omitempty"`
}

// NewGoodsInfoDTO instantiates a new GoodsInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsInfoDTO() *GoodsInfoDTO {
	this := GoodsInfoDTO{}
	return &this
}

// NewGoodsInfoDTOWithDefaults instantiates a new GoodsInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsInfoDTOWithDefaults() *GoodsInfoDTO {
	this := GoodsInfoDTO{}
	return &this
}

// GetGoodsAmount returns the GoodsAmount field value if set, zero value otherwise.
func (o *GoodsInfoDTO) GetGoodsAmount() string {
	if o == nil || IsNil(o.GoodsAmount) {
		var ret string
		return ret
	}
	return *o.GoodsAmount
}

// GetGoodsAmountOk returns a tuple with the GoodsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoDTO) GetGoodsAmountOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsAmount) {
		return nil, false
	}
	return o.GoodsAmount, true
}

// HasGoodsAmount returns a boolean if a field has been set.
func (o *GoodsInfoDTO) HasGoodsAmount() bool {
	if o != nil && !IsNil(o.GoodsAmount) {
		return true
	}

	return false
}

// SetGoodsAmount gets a reference to the given string and assigns it to the GoodsAmount field.
func (o *GoodsInfoDTO) SetGoodsAmount(v string) {
	o.GoodsAmount = &v
}

// GetGoodsCount returns the GoodsCount field value if set, zero value otherwise.
func (o *GoodsInfoDTO) GetGoodsCount() string {
	if o == nil || IsNil(o.GoodsCount) {
		var ret string
		return ret
	}
	return *o.GoodsCount
}

// GetGoodsCountOk returns a tuple with the GoodsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoDTO) GetGoodsCountOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsCount) {
		return nil, false
	}
	return o.GoodsCount, true
}

// HasGoodsCount returns a boolean if a field has been set.
func (o *GoodsInfoDTO) HasGoodsCount() bool {
	if o != nil && !IsNil(o.GoodsCount) {
		return true
	}

	return false
}

// SetGoodsCount gets a reference to the given string and assigns it to the GoodsCount field.
func (o *GoodsInfoDTO) SetGoodsCount(v string) {
	o.GoodsCount = &v
}

// GetGoodsId returns the GoodsId field value if set, zero value otherwise.
func (o *GoodsInfoDTO) GetGoodsId() string {
	if o == nil || IsNil(o.GoodsId) {
		var ret string
		return ret
	}
	return *o.GoodsId
}

// GetGoodsIdOk returns a tuple with the GoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoDTO) GetGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsId) {
		return nil, false
	}
	return o.GoodsId, true
}

// HasGoodsId returns a boolean if a field has been set.
func (o *GoodsInfoDTO) HasGoodsId() bool {
	if o != nil && !IsNil(o.GoodsId) {
		return true
	}

	return false
}

// SetGoodsId gets a reference to the given string and assigns it to the GoodsId field.
func (o *GoodsInfoDTO) SetGoodsId(v string) {
	o.GoodsId = &v
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *GoodsInfoDTO) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsInfoDTO) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *GoodsInfoDTO) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *GoodsInfoDTO) SetGoodsName(v string) {
	o.GoodsName = &v
}

func (o GoodsInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoodsAmount) {
		toSerialize["goods_amount"] = o.GoodsAmount
	}
	if !IsNil(o.GoodsCount) {
		toSerialize["goods_count"] = o.GoodsCount
	}
	if !IsNil(o.GoodsId) {
		toSerialize["goods_id"] = o.GoodsId
	}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	return toSerialize, nil
}

type NullableGoodsInfoDTO struct {
	value *GoodsInfoDTO
	isSet bool
}

func (v NullableGoodsInfoDTO) Get() *GoodsInfoDTO {
	return v.value
}

func (v *NullableGoodsInfoDTO) Set(val *GoodsInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsInfoDTO(val *GoodsInfoDTO) *NullableGoodsInfoDTO {
	return &NullableGoodsInfoDTO{value: val, isSet: true}
}

func (v NullableGoodsInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

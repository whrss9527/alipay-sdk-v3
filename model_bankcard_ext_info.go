/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BankcardExtInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BankcardExtInfo{}

// BankcardExtInfo struct for BankcardExtInfo
type BankcardExtInfo struct {
	// 收款账户类型。  1：对公（在金融机构开设的公司账户）,如果银行卡为对公，必须传递省市支行信息或者联行号  2：对私（在金融机构开设的个人账户）
	AccountType *string `json:"account_type,omitempty"`
	// 银行支行联行号
	BankCode *string `json:"bank_code,omitempty"`
	// 收款银行所属支行
	InstBranchName *string `json:"inst_branch_name,omitempty"`
	// 收款银行所在市
	InstCity *string `json:"inst_city,omitempty"`
	// 机构名称
	InstName *string `json:"inst_name,omitempty"`
	// 银行所在省份
	InstProvince *string `json:"inst_province,omitempty"`
}

// NewBankcardExtInfo instantiates a new BankcardExtInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankcardExtInfo() *BankcardExtInfo {
	this := BankcardExtInfo{}
	return &this
}

// NewBankcardExtInfoWithDefaults instantiates a new BankcardExtInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankcardExtInfoWithDefaults() *BankcardExtInfo {
	this := BankcardExtInfo{}
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *BankcardExtInfo) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankcardExtInfo) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *BankcardExtInfo) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *BankcardExtInfo) SetAccountType(v string) {
	o.AccountType = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *BankcardExtInfo) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankcardExtInfo) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *BankcardExtInfo) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *BankcardExtInfo) SetBankCode(v string) {
	o.BankCode = &v
}

// GetInstBranchName returns the InstBranchName field value if set, zero value otherwise.
func (o *BankcardExtInfo) GetInstBranchName() string {
	if o == nil || IsNil(o.InstBranchName) {
		var ret string
		return ret
	}
	return *o.InstBranchName
}

// GetInstBranchNameOk returns a tuple with the InstBranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankcardExtInfo) GetInstBranchNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstBranchName) {
		return nil, false
	}
	return o.InstBranchName, true
}

// HasInstBranchName returns a boolean if a field has been set.
func (o *BankcardExtInfo) HasInstBranchName() bool {
	if o != nil && !IsNil(o.InstBranchName) {
		return true
	}

	return false
}

// SetInstBranchName gets a reference to the given string and assigns it to the InstBranchName field.
func (o *BankcardExtInfo) SetInstBranchName(v string) {
	o.InstBranchName = &v
}

// GetInstCity returns the InstCity field value if set, zero value otherwise.
func (o *BankcardExtInfo) GetInstCity() string {
	if o == nil || IsNil(o.InstCity) {
		var ret string
		return ret
	}
	return *o.InstCity
}

// GetInstCityOk returns a tuple with the InstCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankcardExtInfo) GetInstCityOk() (*string, bool) {
	if o == nil || IsNil(o.InstCity) {
		return nil, false
	}
	return o.InstCity, true
}

// HasInstCity returns a boolean if a field has been set.
func (o *BankcardExtInfo) HasInstCity() bool {
	if o != nil && !IsNil(o.InstCity) {
		return true
	}

	return false
}

// SetInstCity gets a reference to the given string and assigns it to the InstCity field.
func (o *BankcardExtInfo) SetInstCity(v string) {
	o.InstCity = &v
}

// GetInstName returns the InstName field value if set, zero value otherwise.
func (o *BankcardExtInfo) GetInstName() string {
	if o == nil || IsNil(o.InstName) {
		var ret string
		return ret
	}
	return *o.InstName
}

// GetInstNameOk returns a tuple with the InstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankcardExtInfo) GetInstNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstName) {
		return nil, false
	}
	return o.InstName, true
}

// HasInstName returns a boolean if a field has been set.
func (o *BankcardExtInfo) HasInstName() bool {
	if o != nil && !IsNil(o.InstName) {
		return true
	}

	return false
}

// SetInstName gets a reference to the given string and assigns it to the InstName field.
func (o *BankcardExtInfo) SetInstName(v string) {
	o.InstName = &v
}

// GetInstProvince returns the InstProvince field value if set, zero value otherwise.
func (o *BankcardExtInfo) GetInstProvince() string {
	if o == nil || IsNil(o.InstProvince) {
		var ret string
		return ret
	}
	return *o.InstProvince
}

// GetInstProvinceOk returns a tuple with the InstProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankcardExtInfo) GetInstProvinceOk() (*string, bool) {
	if o == nil || IsNil(o.InstProvince) {
		return nil, false
	}
	return o.InstProvince, true
}

// HasInstProvince returns a boolean if a field has been set.
func (o *BankcardExtInfo) HasInstProvince() bool {
	if o != nil && !IsNil(o.InstProvince) {
		return true
	}

	return false
}

// SetInstProvince gets a reference to the given string and assigns it to the InstProvince field.
func (o *BankcardExtInfo) SetInstProvince(v string) {
	o.InstProvince = &v
}

func (o BankcardExtInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankcardExtInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.BankCode) {
		toSerialize["bank_code"] = o.BankCode
	}
	if !IsNil(o.InstBranchName) {
		toSerialize["inst_branch_name"] = o.InstBranchName
	}
	if !IsNil(o.InstCity) {
		toSerialize["inst_city"] = o.InstCity
	}
	if !IsNil(o.InstName) {
		toSerialize["inst_name"] = o.InstName
	}
	if !IsNil(o.InstProvince) {
		toSerialize["inst_province"] = o.InstProvince
	}
	return toSerialize, nil
}

type NullableBankcardExtInfo struct {
	value *BankcardExtInfo
	isSet bool
}

func (v NullableBankcardExtInfo) Get() *BankcardExtInfo {
	return v.value
}

func (v *NullableBankcardExtInfo) Set(val *BankcardExtInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBankcardExtInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBankcardExtInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankcardExtInfo(val *BankcardExtInfo) *NullableBankcardExtInfo {
	return &NullableBankcardExtInfo{value: val, isSet: true}
}

func (v NullableBankcardExtInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankcardExtInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the JobWorthJobdata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobWorthJobdata{}

// JobWorthJobdata struct for JobWorthJobdata
type JobWorthJobdata struct {
	// 证书发证机构
	CertificateGrantInstitution *string `json:"certificate_grant_institution,omitempty"`
	// 证书编号
	CertificateId *string `json:"certificate_id,omitempty"`
	// 证书等级：中文
	CertificateLevel *string `json:"certificate_level,omitempty"`
	// 证书名称
	CertificateName *string `json:"certificate_name,omitempty"`
	// 工作证图片上传接口返回的id
	CertificatePicId *string `json:"certificate_pic_id,omitempty"`
	// 公司名称
	CompanyName *string `json:"company_name,omitempty"`
	// 学历，可以用以下字段HIGHSCHOOL_AND_BELOW（高中及以下），POLYTECHNIC（中专），COLLEGE（大专），BACHELOR（本科），MASTER（硕士），DOCTOR_AND_ABOVE（博士及以上）
	Degree *string `json:"degree,omitempty"`
	// 商户侧投递岗位id
	DeliveryPositionId *string `json:"delivery_position_id,omitempty"`
	// 投递时间戳
	DeliveryTime *int32 `json:"delivery_time,omitempty"`
	// 教育状态只有两种，GRADUATE(毕业)，STUDY（未毕业）
	EducationStatus *string `json:"education_status,omitempty"`
	// 报名流水号
	EntryNo *string `json:"entry_no,omitempty"`
	// 考试分数
	ExamScore *string `json:"exam_score,omitempty"`
	// 工作证图片上传接口返回的id
	HeadPicId *string `json:"head_pic_id,omitempty"`
	// 求职意向，城市的adccode  例如110000（北京市）
	IntentionCity *string `json:"intention_city,omitempty"`
	// 意向城市名，例如北京市，传入北京即可，大理白族自治州，传入大理即可
	IntentionCityName *string `json:"intention_city_name,omitempty"`
	// 发证日期，ms时间戳
	IssueDate *string `json:"issue_date,omitempty"`
	// 岗位对应的职业id，字段参考https://www.yuque.com/wx3dkp/gwckr4/bs03t3
	JobId *string `json:"job_id,omitempty"`
	// 职业名称
	JobName *string `json:"job_name,omitempty"`
	// 商户职业Id
	KaJobId *string `json:"ka_job_id,omitempty"`
	// 商户职业名称
	KaJobName *string `json:"ka_job_name,omitempty"`
	// 商户行业Id
	KaProfessionId *string `json:"ka_profession_id,omitempty"`
	// 商户行业名称
	KaProfessionName *string `json:"ka_profession_name,omitempty"`
	// 省份
	Location *string `json:"location,omitempty"`
	// 毕业的月
	Month *string `json:"month,omitempty"`
	// 对应类型相关接口生成
	OnceToken *string `json:"once_token,omitempty"`
	// 岗位对应的行业id，字段参考https://www.yuque.com/wx3dkp/gwckr4/bs03t3
	ProfessionId *string `json:"profession_id,omitempty"`
	// 行业名称
	ProfessionName *string `json:"profession_name,omitempty"`
	// 求职意向，薪水范围，不能低于salary_min
	SalaryMax *string `json:"salary_max,omitempty"`
	// 求职意向，薪水范围，不能高于salary_max
	SalaryMin *string `json:"salary_min,omitempty"`
	// 薪资单位，元/日(DAY)、元/次(TIME)、元/月(MONTH)、元/小时(HOUR)、元/件 (NUM)、元/周 (WEEK)、其他 (OTHER)
	SalaryUnit *string `json:"salary_unit,omitempty"`
	// 学校
	SchoolName *string `json:"school_name,omitempty"`
	// 用英文逗号分隔，最多6项
	SkillName *string `json:"skill_name,omitempty"`
	// 参加工作的时间，格式形如 2011-07
	StartTime *string `json:"start_time,omitempty"`
	// 信息类型
	Type *string `json:"type,omitempty"`
	// 有效期：开始结束 ms 时间戳
	ValidDateEnd *string `json:"valid_date_end,omitempty"`
	// 有效期：开始时间 ms时间戳
	ValidDateStart *string `json:"valid_date_start,omitempty"`
	// 校验状态
	VerifyStatus *string `json:"verify_status,omitempty"`
	// 工作描述
	WorkDesc *string `json:"work_desc,omitempty"`
	// 工作结束时间，毫秒级时间戳
	WorkEndTime *string `json:"work_end_time,omitempty"`
	// 工作经历工作地
	WorkPlace *string `json:"work_place,omitempty"`
	// 岗位属性：全职(FULL_TIME)或者兼职(PART_TIME)
	WorkProperty *string `json:"work_property,omitempty"`
	// 工作开始时间，毫秒级时间戳
	WorkStartTime *string `json:"work_start_time,omitempty"`
	// 毕业的年
	Year *string `json:"year,omitempty"`
}

// NewJobWorthJobdata instantiates a new JobWorthJobdata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobWorthJobdata() *JobWorthJobdata {
	this := JobWorthJobdata{}
	return &this
}

// NewJobWorthJobdataWithDefaults instantiates a new JobWorthJobdata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobWorthJobdataWithDefaults() *JobWorthJobdata {
	this := JobWorthJobdata{}
	return &this
}

// GetCertificateGrantInstitution returns the CertificateGrantInstitution field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetCertificateGrantInstitution() string {
	if o == nil || IsNil(o.CertificateGrantInstitution) {
		var ret string
		return ret
	}
	return *o.CertificateGrantInstitution
}

// GetCertificateGrantInstitutionOk returns a tuple with the CertificateGrantInstitution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetCertificateGrantInstitutionOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateGrantInstitution) {
		return nil, false
	}
	return o.CertificateGrantInstitution, true
}

// HasCertificateGrantInstitution returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasCertificateGrantInstitution() bool {
	if o != nil && !IsNil(o.CertificateGrantInstitution) {
		return true
	}

	return false
}

// SetCertificateGrantInstitution gets a reference to the given string and assigns it to the CertificateGrantInstitution field.
func (o *JobWorthJobdata) SetCertificateGrantInstitution(v string) {
	o.CertificateGrantInstitution = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetCertificateId() string {
	if o == nil || IsNil(o.CertificateId) {
		var ret string
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetCertificateIdOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasCertificateId() bool {
	if o != nil && !IsNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given string and assigns it to the CertificateId field.
func (o *JobWorthJobdata) SetCertificateId(v string) {
	o.CertificateId = &v
}

// GetCertificateLevel returns the CertificateLevel field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetCertificateLevel() string {
	if o == nil || IsNil(o.CertificateLevel) {
		var ret string
		return ret
	}
	return *o.CertificateLevel
}

// GetCertificateLevelOk returns a tuple with the CertificateLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetCertificateLevelOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateLevel) {
		return nil, false
	}
	return o.CertificateLevel, true
}

// HasCertificateLevel returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasCertificateLevel() bool {
	if o != nil && !IsNil(o.CertificateLevel) {
		return true
	}

	return false
}

// SetCertificateLevel gets a reference to the given string and assigns it to the CertificateLevel field.
func (o *JobWorthJobdata) SetCertificateLevel(v string) {
	o.CertificateLevel = &v
}

// GetCertificateName returns the CertificateName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetCertificateName() string {
	if o == nil || IsNil(o.CertificateName) {
		var ret string
		return ret
	}
	return *o.CertificateName
}

// GetCertificateNameOk returns a tuple with the CertificateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetCertificateNameOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateName) {
		return nil, false
	}
	return o.CertificateName, true
}

// HasCertificateName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasCertificateName() bool {
	if o != nil && !IsNil(o.CertificateName) {
		return true
	}

	return false
}

// SetCertificateName gets a reference to the given string and assigns it to the CertificateName field.
func (o *JobWorthJobdata) SetCertificateName(v string) {
	o.CertificateName = &v
}

// GetCertificatePicId returns the CertificatePicId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetCertificatePicId() string {
	if o == nil || IsNil(o.CertificatePicId) {
		var ret string
		return ret
	}
	return *o.CertificatePicId
}

// GetCertificatePicIdOk returns a tuple with the CertificatePicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetCertificatePicIdOk() (*string, bool) {
	if o == nil || IsNil(o.CertificatePicId) {
		return nil, false
	}
	return o.CertificatePicId, true
}

// HasCertificatePicId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasCertificatePicId() bool {
	if o != nil && !IsNil(o.CertificatePicId) {
		return true
	}

	return false
}

// SetCertificatePicId gets a reference to the given string and assigns it to the CertificatePicId field.
func (o *JobWorthJobdata) SetCertificatePicId(v string) {
	o.CertificatePicId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *JobWorthJobdata) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetDegree returns the Degree field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetDegree() string {
	if o == nil || IsNil(o.Degree) {
		var ret string
		return ret
	}
	return *o.Degree
}

// GetDegreeOk returns a tuple with the Degree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetDegreeOk() (*string, bool) {
	if o == nil || IsNil(o.Degree) {
		return nil, false
	}
	return o.Degree, true
}

// HasDegree returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasDegree() bool {
	if o != nil && !IsNil(o.Degree) {
		return true
	}

	return false
}

// SetDegree gets a reference to the given string and assigns it to the Degree field.
func (o *JobWorthJobdata) SetDegree(v string) {
	o.Degree = &v
}

// GetDeliveryPositionId returns the DeliveryPositionId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetDeliveryPositionId() string {
	if o == nil || IsNil(o.DeliveryPositionId) {
		var ret string
		return ret
	}
	return *o.DeliveryPositionId
}

// GetDeliveryPositionIdOk returns a tuple with the DeliveryPositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetDeliveryPositionIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryPositionId) {
		return nil, false
	}
	return o.DeliveryPositionId, true
}

// HasDeliveryPositionId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasDeliveryPositionId() bool {
	if o != nil && !IsNil(o.DeliveryPositionId) {
		return true
	}

	return false
}

// SetDeliveryPositionId gets a reference to the given string and assigns it to the DeliveryPositionId field.
func (o *JobWorthJobdata) SetDeliveryPositionId(v string) {
	o.DeliveryPositionId = &v
}

// GetDeliveryTime returns the DeliveryTime field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetDeliveryTime() int32 {
	if o == nil || IsNil(o.DeliveryTime) {
		var ret int32
		return ret
	}
	return *o.DeliveryTime
}

// GetDeliveryTimeOk returns a tuple with the DeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetDeliveryTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.DeliveryTime) {
		return nil, false
	}
	return o.DeliveryTime, true
}

// HasDeliveryTime returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasDeliveryTime() bool {
	if o != nil && !IsNil(o.DeliveryTime) {
		return true
	}

	return false
}

// SetDeliveryTime gets a reference to the given int32 and assigns it to the DeliveryTime field.
func (o *JobWorthJobdata) SetDeliveryTime(v int32) {
	o.DeliveryTime = &v
}

// GetEducationStatus returns the EducationStatus field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetEducationStatus() string {
	if o == nil || IsNil(o.EducationStatus) {
		var ret string
		return ret
	}
	return *o.EducationStatus
}

// GetEducationStatusOk returns a tuple with the EducationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetEducationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EducationStatus) {
		return nil, false
	}
	return o.EducationStatus, true
}

// HasEducationStatus returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasEducationStatus() bool {
	if o != nil && !IsNil(o.EducationStatus) {
		return true
	}

	return false
}

// SetEducationStatus gets a reference to the given string and assigns it to the EducationStatus field.
func (o *JobWorthJobdata) SetEducationStatus(v string) {
	o.EducationStatus = &v
}

// GetEntryNo returns the EntryNo field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetEntryNo() string {
	if o == nil || IsNil(o.EntryNo) {
		var ret string
		return ret
	}
	return *o.EntryNo
}

// GetEntryNoOk returns a tuple with the EntryNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetEntryNoOk() (*string, bool) {
	if o == nil || IsNil(o.EntryNo) {
		return nil, false
	}
	return o.EntryNo, true
}

// HasEntryNo returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasEntryNo() bool {
	if o != nil && !IsNil(o.EntryNo) {
		return true
	}

	return false
}

// SetEntryNo gets a reference to the given string and assigns it to the EntryNo field.
func (o *JobWorthJobdata) SetEntryNo(v string) {
	o.EntryNo = &v
}

// GetExamScore returns the ExamScore field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetExamScore() string {
	if o == nil || IsNil(o.ExamScore) {
		var ret string
		return ret
	}
	return *o.ExamScore
}

// GetExamScoreOk returns a tuple with the ExamScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetExamScoreOk() (*string, bool) {
	if o == nil || IsNil(o.ExamScore) {
		return nil, false
	}
	return o.ExamScore, true
}

// HasExamScore returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasExamScore() bool {
	if o != nil && !IsNil(o.ExamScore) {
		return true
	}

	return false
}

// SetExamScore gets a reference to the given string and assigns it to the ExamScore field.
func (o *JobWorthJobdata) SetExamScore(v string) {
	o.ExamScore = &v
}

// GetHeadPicId returns the HeadPicId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetHeadPicId() string {
	if o == nil || IsNil(o.HeadPicId) {
		var ret string
		return ret
	}
	return *o.HeadPicId
}

// GetHeadPicIdOk returns a tuple with the HeadPicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetHeadPicIdOk() (*string, bool) {
	if o == nil || IsNil(o.HeadPicId) {
		return nil, false
	}
	return o.HeadPicId, true
}

// HasHeadPicId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasHeadPicId() bool {
	if o != nil && !IsNil(o.HeadPicId) {
		return true
	}

	return false
}

// SetHeadPicId gets a reference to the given string and assigns it to the HeadPicId field.
func (o *JobWorthJobdata) SetHeadPicId(v string) {
	o.HeadPicId = &v
}

// GetIntentionCity returns the IntentionCity field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetIntentionCity() string {
	if o == nil || IsNil(o.IntentionCity) {
		var ret string
		return ret
	}
	return *o.IntentionCity
}

// GetIntentionCityOk returns a tuple with the IntentionCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetIntentionCityOk() (*string, bool) {
	if o == nil || IsNil(o.IntentionCity) {
		return nil, false
	}
	return o.IntentionCity, true
}

// HasIntentionCity returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasIntentionCity() bool {
	if o != nil && !IsNil(o.IntentionCity) {
		return true
	}

	return false
}

// SetIntentionCity gets a reference to the given string and assigns it to the IntentionCity field.
func (o *JobWorthJobdata) SetIntentionCity(v string) {
	o.IntentionCity = &v
}

// GetIntentionCityName returns the IntentionCityName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetIntentionCityName() string {
	if o == nil || IsNil(o.IntentionCityName) {
		var ret string
		return ret
	}
	return *o.IntentionCityName
}

// GetIntentionCityNameOk returns a tuple with the IntentionCityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetIntentionCityNameOk() (*string, bool) {
	if o == nil || IsNil(o.IntentionCityName) {
		return nil, false
	}
	return o.IntentionCityName, true
}

// HasIntentionCityName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasIntentionCityName() bool {
	if o != nil && !IsNil(o.IntentionCityName) {
		return true
	}

	return false
}

// SetIntentionCityName gets a reference to the given string and assigns it to the IntentionCityName field.
func (o *JobWorthJobdata) SetIntentionCityName(v string) {
	o.IntentionCityName = &v
}

// GetIssueDate returns the IssueDate field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetIssueDate() string {
	if o == nil || IsNil(o.IssueDate) {
		var ret string
		return ret
	}
	return *o.IssueDate
}

// GetIssueDateOk returns a tuple with the IssueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetIssueDateOk() (*string, bool) {
	if o == nil || IsNil(o.IssueDate) {
		return nil, false
	}
	return o.IssueDate, true
}

// HasIssueDate returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasIssueDate() bool {
	if o != nil && !IsNil(o.IssueDate) {
		return true
	}

	return false
}

// SetIssueDate gets a reference to the given string and assigns it to the IssueDate field.
func (o *JobWorthJobdata) SetIssueDate(v string) {
	o.IssueDate = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *JobWorthJobdata) SetJobId(v string) {
	o.JobId = &v
}

// GetJobName returns the JobName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetJobName() string {
	if o == nil || IsNil(o.JobName) {
		var ret string
		return ret
	}
	return *o.JobName
}

// GetJobNameOk returns a tuple with the JobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.JobName) {
		return nil, false
	}
	return o.JobName, true
}

// HasJobName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasJobName() bool {
	if o != nil && !IsNil(o.JobName) {
		return true
	}

	return false
}

// SetJobName gets a reference to the given string and assigns it to the JobName field.
func (o *JobWorthJobdata) SetJobName(v string) {
	o.JobName = &v
}

// GetKaJobId returns the KaJobId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetKaJobId() string {
	if o == nil || IsNil(o.KaJobId) {
		var ret string
		return ret
	}
	return *o.KaJobId
}

// GetKaJobIdOk returns a tuple with the KaJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetKaJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.KaJobId) {
		return nil, false
	}
	return o.KaJobId, true
}

// HasKaJobId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasKaJobId() bool {
	if o != nil && !IsNil(o.KaJobId) {
		return true
	}

	return false
}

// SetKaJobId gets a reference to the given string and assigns it to the KaJobId field.
func (o *JobWorthJobdata) SetKaJobId(v string) {
	o.KaJobId = &v
}

// GetKaJobName returns the KaJobName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetKaJobName() string {
	if o == nil || IsNil(o.KaJobName) {
		var ret string
		return ret
	}
	return *o.KaJobName
}

// GetKaJobNameOk returns a tuple with the KaJobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetKaJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.KaJobName) {
		return nil, false
	}
	return o.KaJobName, true
}

// HasKaJobName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasKaJobName() bool {
	if o != nil && !IsNil(o.KaJobName) {
		return true
	}

	return false
}

// SetKaJobName gets a reference to the given string and assigns it to the KaJobName field.
func (o *JobWorthJobdata) SetKaJobName(v string) {
	o.KaJobName = &v
}

// GetKaProfessionId returns the KaProfessionId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetKaProfessionId() string {
	if o == nil || IsNil(o.KaProfessionId) {
		var ret string
		return ret
	}
	return *o.KaProfessionId
}

// GetKaProfessionIdOk returns a tuple with the KaProfessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetKaProfessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.KaProfessionId) {
		return nil, false
	}
	return o.KaProfessionId, true
}

// HasKaProfessionId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasKaProfessionId() bool {
	if o != nil && !IsNil(o.KaProfessionId) {
		return true
	}

	return false
}

// SetKaProfessionId gets a reference to the given string and assigns it to the KaProfessionId field.
func (o *JobWorthJobdata) SetKaProfessionId(v string) {
	o.KaProfessionId = &v
}

// GetKaProfessionName returns the KaProfessionName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetKaProfessionName() string {
	if o == nil || IsNil(o.KaProfessionName) {
		var ret string
		return ret
	}
	return *o.KaProfessionName
}

// GetKaProfessionNameOk returns a tuple with the KaProfessionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetKaProfessionNameOk() (*string, bool) {
	if o == nil || IsNil(o.KaProfessionName) {
		return nil, false
	}
	return o.KaProfessionName, true
}

// HasKaProfessionName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasKaProfessionName() bool {
	if o != nil && !IsNil(o.KaProfessionName) {
		return true
	}

	return false
}

// SetKaProfessionName gets a reference to the given string and assigns it to the KaProfessionName field.
func (o *JobWorthJobdata) SetKaProfessionName(v string) {
	o.KaProfessionName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *JobWorthJobdata) SetLocation(v string) {
	o.Location = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetMonth() string {
	if o == nil || IsNil(o.Month) {
		var ret string
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetMonthOk() (*string, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given string and assigns it to the Month field.
func (o *JobWorthJobdata) SetMonth(v string) {
	o.Month = &v
}

// GetOnceToken returns the OnceToken field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetOnceToken() string {
	if o == nil || IsNil(o.OnceToken) {
		var ret string
		return ret
	}
	return *o.OnceToken
}

// GetOnceTokenOk returns a tuple with the OnceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetOnceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.OnceToken) {
		return nil, false
	}
	return o.OnceToken, true
}

// HasOnceToken returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasOnceToken() bool {
	if o != nil && !IsNil(o.OnceToken) {
		return true
	}

	return false
}

// SetOnceToken gets a reference to the given string and assigns it to the OnceToken field.
func (o *JobWorthJobdata) SetOnceToken(v string) {
	o.OnceToken = &v
}

// GetProfessionId returns the ProfessionId field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetProfessionId() string {
	if o == nil || IsNil(o.ProfessionId) {
		var ret string
		return ret
	}
	return *o.ProfessionId
}

// GetProfessionIdOk returns a tuple with the ProfessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetProfessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfessionId) {
		return nil, false
	}
	return o.ProfessionId, true
}

// HasProfessionId returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasProfessionId() bool {
	if o != nil && !IsNil(o.ProfessionId) {
		return true
	}

	return false
}

// SetProfessionId gets a reference to the given string and assigns it to the ProfessionId field.
func (o *JobWorthJobdata) SetProfessionId(v string) {
	o.ProfessionId = &v
}

// GetProfessionName returns the ProfessionName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetProfessionName() string {
	if o == nil || IsNil(o.ProfessionName) {
		var ret string
		return ret
	}
	return *o.ProfessionName
}

// GetProfessionNameOk returns a tuple with the ProfessionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetProfessionNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProfessionName) {
		return nil, false
	}
	return o.ProfessionName, true
}

// HasProfessionName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasProfessionName() bool {
	if o != nil && !IsNil(o.ProfessionName) {
		return true
	}

	return false
}

// SetProfessionName gets a reference to the given string and assigns it to the ProfessionName field.
func (o *JobWorthJobdata) SetProfessionName(v string) {
	o.ProfessionName = &v
}

// GetSalaryMax returns the SalaryMax field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetSalaryMax() string {
	if o == nil || IsNil(o.SalaryMax) {
		var ret string
		return ret
	}
	return *o.SalaryMax
}

// GetSalaryMaxOk returns a tuple with the SalaryMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetSalaryMaxOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryMax) {
		return nil, false
	}
	return o.SalaryMax, true
}

// HasSalaryMax returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasSalaryMax() bool {
	if o != nil && !IsNil(o.SalaryMax) {
		return true
	}

	return false
}

// SetSalaryMax gets a reference to the given string and assigns it to the SalaryMax field.
func (o *JobWorthJobdata) SetSalaryMax(v string) {
	o.SalaryMax = &v
}

// GetSalaryMin returns the SalaryMin field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetSalaryMin() string {
	if o == nil || IsNil(o.SalaryMin) {
		var ret string
		return ret
	}
	return *o.SalaryMin
}

// GetSalaryMinOk returns a tuple with the SalaryMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetSalaryMinOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryMin) {
		return nil, false
	}
	return o.SalaryMin, true
}

// HasSalaryMin returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasSalaryMin() bool {
	if o != nil && !IsNil(o.SalaryMin) {
		return true
	}

	return false
}

// SetSalaryMin gets a reference to the given string and assigns it to the SalaryMin field.
func (o *JobWorthJobdata) SetSalaryMin(v string) {
	o.SalaryMin = &v
}

// GetSalaryUnit returns the SalaryUnit field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetSalaryUnit() string {
	if o == nil || IsNil(o.SalaryUnit) {
		var ret string
		return ret
	}
	return *o.SalaryUnit
}

// GetSalaryUnitOk returns a tuple with the SalaryUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetSalaryUnitOk() (*string, bool) {
	if o == nil || IsNil(o.SalaryUnit) {
		return nil, false
	}
	return o.SalaryUnit, true
}

// HasSalaryUnit returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasSalaryUnit() bool {
	if o != nil && !IsNil(o.SalaryUnit) {
		return true
	}

	return false
}

// SetSalaryUnit gets a reference to the given string and assigns it to the SalaryUnit field.
func (o *JobWorthJobdata) SetSalaryUnit(v string) {
	o.SalaryUnit = &v
}

// GetSchoolName returns the SchoolName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetSchoolName() string {
	if o == nil || IsNil(o.SchoolName) {
		var ret string
		return ret
	}
	return *o.SchoolName
}

// GetSchoolNameOk returns a tuple with the SchoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetSchoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.SchoolName) {
		return nil, false
	}
	return o.SchoolName, true
}

// HasSchoolName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasSchoolName() bool {
	if o != nil && !IsNil(o.SchoolName) {
		return true
	}

	return false
}

// SetSchoolName gets a reference to the given string and assigns it to the SchoolName field.
func (o *JobWorthJobdata) SetSchoolName(v string) {
	o.SchoolName = &v
}

// GetSkillName returns the SkillName field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetSkillName() string {
	if o == nil || IsNil(o.SkillName) {
		var ret string
		return ret
	}
	return *o.SkillName
}

// GetSkillNameOk returns a tuple with the SkillName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetSkillNameOk() (*string, bool) {
	if o == nil || IsNil(o.SkillName) {
		return nil, false
	}
	return o.SkillName, true
}

// HasSkillName returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasSkillName() bool {
	if o != nil && !IsNil(o.SkillName) {
		return true
	}

	return false
}

// SetSkillName gets a reference to the given string and assigns it to the SkillName field.
func (o *JobWorthJobdata) SetSkillName(v string) {
	o.SkillName = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *JobWorthJobdata) SetStartTime(v string) {
	o.StartTime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *JobWorthJobdata) SetType(v string) {
	o.Type = &v
}

// GetValidDateEnd returns the ValidDateEnd field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetValidDateEnd() string {
	if o == nil || IsNil(o.ValidDateEnd) {
		var ret string
		return ret
	}
	return *o.ValidDateEnd
}

// GetValidDateEndOk returns a tuple with the ValidDateEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetValidDateEndOk() (*string, bool) {
	if o == nil || IsNil(o.ValidDateEnd) {
		return nil, false
	}
	return o.ValidDateEnd, true
}

// HasValidDateEnd returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasValidDateEnd() bool {
	if o != nil && !IsNil(o.ValidDateEnd) {
		return true
	}

	return false
}

// SetValidDateEnd gets a reference to the given string and assigns it to the ValidDateEnd field.
func (o *JobWorthJobdata) SetValidDateEnd(v string) {
	o.ValidDateEnd = &v
}

// GetValidDateStart returns the ValidDateStart field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetValidDateStart() string {
	if o == nil || IsNil(o.ValidDateStart) {
		var ret string
		return ret
	}
	return *o.ValidDateStart
}

// GetValidDateStartOk returns a tuple with the ValidDateStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetValidDateStartOk() (*string, bool) {
	if o == nil || IsNil(o.ValidDateStart) {
		return nil, false
	}
	return o.ValidDateStart, true
}

// HasValidDateStart returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasValidDateStart() bool {
	if o != nil && !IsNil(o.ValidDateStart) {
		return true
	}

	return false
}

// SetValidDateStart gets a reference to the given string and assigns it to the ValidDateStart field.
func (o *JobWorthJobdata) SetValidDateStart(v string) {
	o.ValidDateStart = &v
}

// GetVerifyStatus returns the VerifyStatus field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetVerifyStatus() string {
	if o == nil || IsNil(o.VerifyStatus) {
		var ret string
		return ret
	}
	return *o.VerifyStatus
}

// GetVerifyStatusOk returns a tuple with the VerifyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetVerifyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyStatus) {
		return nil, false
	}
	return o.VerifyStatus, true
}

// HasVerifyStatus returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasVerifyStatus() bool {
	if o != nil && !IsNil(o.VerifyStatus) {
		return true
	}

	return false
}

// SetVerifyStatus gets a reference to the given string and assigns it to the VerifyStatus field.
func (o *JobWorthJobdata) SetVerifyStatus(v string) {
	o.VerifyStatus = &v
}

// GetWorkDesc returns the WorkDesc field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetWorkDesc() string {
	if o == nil || IsNil(o.WorkDesc) {
		var ret string
		return ret
	}
	return *o.WorkDesc
}

// GetWorkDescOk returns a tuple with the WorkDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetWorkDescOk() (*string, bool) {
	if o == nil || IsNil(o.WorkDesc) {
		return nil, false
	}
	return o.WorkDesc, true
}

// HasWorkDesc returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasWorkDesc() bool {
	if o != nil && !IsNil(o.WorkDesc) {
		return true
	}

	return false
}

// SetWorkDesc gets a reference to the given string and assigns it to the WorkDesc field.
func (o *JobWorthJobdata) SetWorkDesc(v string) {
	o.WorkDesc = &v
}

// GetWorkEndTime returns the WorkEndTime field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetWorkEndTime() string {
	if o == nil || IsNil(o.WorkEndTime) {
		var ret string
		return ret
	}
	return *o.WorkEndTime
}

// GetWorkEndTimeOk returns a tuple with the WorkEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetWorkEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WorkEndTime) {
		return nil, false
	}
	return o.WorkEndTime, true
}

// HasWorkEndTime returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasWorkEndTime() bool {
	if o != nil && !IsNil(o.WorkEndTime) {
		return true
	}

	return false
}

// SetWorkEndTime gets a reference to the given string and assigns it to the WorkEndTime field.
func (o *JobWorthJobdata) SetWorkEndTime(v string) {
	o.WorkEndTime = &v
}

// GetWorkPlace returns the WorkPlace field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetWorkPlace() string {
	if o == nil || IsNil(o.WorkPlace) {
		var ret string
		return ret
	}
	return *o.WorkPlace
}

// GetWorkPlaceOk returns a tuple with the WorkPlace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetWorkPlaceOk() (*string, bool) {
	if o == nil || IsNil(o.WorkPlace) {
		return nil, false
	}
	return o.WorkPlace, true
}

// HasWorkPlace returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasWorkPlace() bool {
	if o != nil && !IsNil(o.WorkPlace) {
		return true
	}

	return false
}

// SetWorkPlace gets a reference to the given string and assigns it to the WorkPlace field.
func (o *JobWorthJobdata) SetWorkPlace(v string) {
	o.WorkPlace = &v
}

// GetWorkProperty returns the WorkProperty field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetWorkProperty() string {
	if o == nil || IsNil(o.WorkProperty) {
		var ret string
		return ret
	}
	return *o.WorkProperty
}

// GetWorkPropertyOk returns a tuple with the WorkProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetWorkPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.WorkProperty) {
		return nil, false
	}
	return o.WorkProperty, true
}

// HasWorkProperty returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasWorkProperty() bool {
	if o != nil && !IsNil(o.WorkProperty) {
		return true
	}

	return false
}

// SetWorkProperty gets a reference to the given string and assigns it to the WorkProperty field.
func (o *JobWorthJobdata) SetWorkProperty(v string) {
	o.WorkProperty = &v
}

// GetWorkStartTime returns the WorkStartTime field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetWorkStartTime() string {
	if o == nil || IsNil(o.WorkStartTime) {
		var ret string
		return ret
	}
	return *o.WorkStartTime
}

// GetWorkStartTimeOk returns a tuple with the WorkStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetWorkStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WorkStartTime) {
		return nil, false
	}
	return o.WorkStartTime, true
}

// HasWorkStartTime returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasWorkStartTime() bool {
	if o != nil && !IsNil(o.WorkStartTime) {
		return true
	}

	return false
}

// SetWorkStartTime gets a reference to the given string and assigns it to the WorkStartTime field.
func (o *JobWorthJobdata) SetWorkStartTime(v string) {
	o.WorkStartTime = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *JobWorthJobdata) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobWorthJobdata) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *JobWorthJobdata) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *JobWorthJobdata) SetYear(v string) {
	o.Year = &v
}

func (o JobWorthJobdata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobWorthJobdata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificateGrantInstitution) {
		toSerialize["certificate_grant_institution"] = o.CertificateGrantInstitution
	}
	if !IsNil(o.CertificateId) {
		toSerialize["certificate_id"] = o.CertificateId
	}
	if !IsNil(o.CertificateLevel) {
		toSerialize["certificate_level"] = o.CertificateLevel
	}
	if !IsNil(o.CertificateName) {
		toSerialize["certificate_name"] = o.CertificateName
	}
	if !IsNil(o.CertificatePicId) {
		toSerialize["certificate_pic_id"] = o.CertificatePicId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.Degree) {
		toSerialize["degree"] = o.Degree
	}
	if !IsNil(o.DeliveryPositionId) {
		toSerialize["delivery_position_id"] = o.DeliveryPositionId
	}
	if !IsNil(o.DeliveryTime) {
		toSerialize["delivery_time"] = o.DeliveryTime
	}
	if !IsNil(o.EducationStatus) {
		toSerialize["education_status"] = o.EducationStatus
	}
	if !IsNil(o.EntryNo) {
		toSerialize["entry_no"] = o.EntryNo
	}
	if !IsNil(o.ExamScore) {
		toSerialize["exam_score"] = o.ExamScore
	}
	if !IsNil(o.HeadPicId) {
		toSerialize["head_pic_id"] = o.HeadPicId
	}
	if !IsNil(o.IntentionCity) {
		toSerialize["intention_city"] = o.IntentionCity
	}
	if !IsNil(o.IntentionCityName) {
		toSerialize["intention_city_name"] = o.IntentionCityName
	}
	if !IsNil(o.IssueDate) {
		toSerialize["issue_date"] = o.IssueDate
	}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.JobName) {
		toSerialize["job_name"] = o.JobName
	}
	if !IsNil(o.KaJobId) {
		toSerialize["ka_job_id"] = o.KaJobId
	}
	if !IsNil(o.KaJobName) {
		toSerialize["ka_job_name"] = o.KaJobName
	}
	if !IsNil(o.KaProfessionId) {
		toSerialize["ka_profession_id"] = o.KaProfessionId
	}
	if !IsNil(o.KaProfessionName) {
		toSerialize["ka_profession_name"] = o.KaProfessionName
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.OnceToken) {
		toSerialize["once_token"] = o.OnceToken
	}
	if !IsNil(o.ProfessionId) {
		toSerialize["profession_id"] = o.ProfessionId
	}
	if !IsNil(o.ProfessionName) {
		toSerialize["profession_name"] = o.ProfessionName
	}
	if !IsNil(o.SalaryMax) {
		toSerialize["salary_max"] = o.SalaryMax
	}
	if !IsNil(o.SalaryMin) {
		toSerialize["salary_min"] = o.SalaryMin
	}
	if !IsNil(o.SalaryUnit) {
		toSerialize["salary_unit"] = o.SalaryUnit
	}
	if !IsNil(o.SchoolName) {
		toSerialize["school_name"] = o.SchoolName
	}
	if !IsNil(o.SkillName) {
		toSerialize["skill_name"] = o.SkillName
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ValidDateEnd) {
		toSerialize["valid_date_end"] = o.ValidDateEnd
	}
	if !IsNil(o.ValidDateStart) {
		toSerialize["valid_date_start"] = o.ValidDateStart
	}
	if !IsNil(o.VerifyStatus) {
		toSerialize["verify_status"] = o.VerifyStatus
	}
	if !IsNil(o.WorkDesc) {
		toSerialize["work_desc"] = o.WorkDesc
	}
	if !IsNil(o.WorkEndTime) {
		toSerialize["work_end_time"] = o.WorkEndTime
	}
	if !IsNil(o.WorkPlace) {
		toSerialize["work_place"] = o.WorkPlace
	}
	if !IsNil(o.WorkProperty) {
		toSerialize["work_property"] = o.WorkProperty
	}
	if !IsNil(o.WorkStartTime) {
		toSerialize["work_start_time"] = o.WorkStartTime
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableJobWorthJobdata struct {
	value *JobWorthJobdata
	isSet bool
}

func (v NullableJobWorthJobdata) Get() *JobWorthJobdata {
	return v.value
}

func (v *NullableJobWorthJobdata) Set(val *JobWorthJobdata) {
	v.value = val
	v.isSet = true
}

func (v NullableJobWorthJobdata) IsSet() bool {
	return v.isSet
}

func (v *NullableJobWorthJobdata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobWorthJobdata(val *JobWorthJobdata) *NullableJobWorthJobdata {
	return &NullableJobWorthJobdata{value: val, isSet: true}
}

func (v NullableJobWorthJobdata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobWorthJobdata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

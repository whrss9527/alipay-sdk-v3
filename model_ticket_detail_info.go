/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TicketDetailInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TicketDetailInfo{}

// TicketDetailInfo struct for TicketDetailInfo
type TicketDetailInfo struct {
	// 总金额，元为单位
	Amount *string `json:"amount,omitempty"`
	// 终点站编码
	EndStation *string `json:"end_station,omitempty"`
	// 终点站中文名称
	EndStationName *string `json:"end_station_name,omitempty"`
	// 票数量
	Quantity *string `json:"quantity,omitempty"`
	// 起点站编码
	StartStation *string `json:"start_station,omitempty"`
	// 起点站中文名称
	StartStationName *string `json:"start_station_name,omitempty"`
	// 订单状态
	Status *string `json:"status,omitempty"`
	// 单价，元为单位
	TicketPrice *string `json:"ticket_price,omitempty"`
	// 票类型
	TicketType *string `json:"ticket_type,omitempty"`
	// 支付宝交易号
	TradeNo *string `json:"trade_no,omitempty"`
}

// NewTicketDetailInfo instantiates a new TicketDetailInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketDetailInfo() *TicketDetailInfo {
	this := TicketDetailInfo{}
	return &this
}

// NewTicketDetailInfoWithDefaults instantiates a new TicketDetailInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketDetailInfoWithDefaults() *TicketDetailInfo {
	this := TicketDetailInfo{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *TicketDetailInfo) SetAmount(v string) {
	o.Amount = &v
}

// GetEndStation returns the EndStation field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetEndStation() string {
	if o == nil || IsNil(o.EndStation) {
		var ret string
		return ret
	}
	return *o.EndStation
}

// GetEndStationOk returns a tuple with the EndStation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetEndStationOk() (*string, bool) {
	if o == nil || IsNil(o.EndStation) {
		return nil, false
	}
	return o.EndStation, true
}

// HasEndStation returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasEndStation() bool {
	if o != nil && !IsNil(o.EndStation) {
		return true
	}

	return false
}

// SetEndStation gets a reference to the given string and assigns it to the EndStation field.
func (o *TicketDetailInfo) SetEndStation(v string) {
	o.EndStation = &v
}

// GetEndStationName returns the EndStationName field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetEndStationName() string {
	if o == nil || IsNil(o.EndStationName) {
		var ret string
		return ret
	}
	return *o.EndStationName
}

// GetEndStationNameOk returns a tuple with the EndStationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetEndStationNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndStationName) {
		return nil, false
	}
	return o.EndStationName, true
}

// HasEndStationName returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasEndStationName() bool {
	if o != nil && !IsNil(o.EndStationName) {
		return true
	}

	return false
}

// SetEndStationName gets a reference to the given string and assigns it to the EndStationName field.
func (o *TicketDetailInfo) SetEndStationName(v string) {
	o.EndStationName = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetQuantity() string {
	if o == nil || IsNil(o.Quantity) {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *TicketDetailInfo) SetQuantity(v string) {
	o.Quantity = &v
}

// GetStartStation returns the StartStation field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetStartStation() string {
	if o == nil || IsNil(o.StartStation) {
		var ret string
		return ret
	}
	return *o.StartStation
}

// GetStartStationOk returns a tuple with the StartStation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetStartStationOk() (*string, bool) {
	if o == nil || IsNil(o.StartStation) {
		return nil, false
	}
	return o.StartStation, true
}

// HasStartStation returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasStartStation() bool {
	if o != nil && !IsNil(o.StartStation) {
		return true
	}

	return false
}

// SetStartStation gets a reference to the given string and assigns it to the StartStation field.
func (o *TicketDetailInfo) SetStartStation(v string) {
	o.StartStation = &v
}

// GetStartStationName returns the StartStationName field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetStartStationName() string {
	if o == nil || IsNil(o.StartStationName) {
		var ret string
		return ret
	}
	return *o.StartStationName
}

// GetStartStationNameOk returns a tuple with the StartStationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetStartStationNameOk() (*string, bool) {
	if o == nil || IsNil(o.StartStationName) {
		return nil, false
	}
	return o.StartStationName, true
}

// HasStartStationName returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasStartStationName() bool {
	if o != nil && !IsNil(o.StartStationName) {
		return true
	}

	return false
}

// SetStartStationName gets a reference to the given string and assigns it to the StartStationName field.
func (o *TicketDetailInfo) SetStartStationName(v string) {
	o.StartStationName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TicketDetailInfo) SetStatus(v string) {
	o.Status = &v
}

// GetTicketPrice returns the TicketPrice field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetTicketPrice() string {
	if o == nil || IsNil(o.TicketPrice) {
		var ret string
		return ret
	}
	return *o.TicketPrice
}

// GetTicketPriceOk returns a tuple with the TicketPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetTicketPriceOk() (*string, bool) {
	if o == nil || IsNil(o.TicketPrice) {
		return nil, false
	}
	return o.TicketPrice, true
}

// HasTicketPrice returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasTicketPrice() bool {
	if o != nil && !IsNil(o.TicketPrice) {
		return true
	}

	return false
}

// SetTicketPrice gets a reference to the given string and assigns it to the TicketPrice field.
func (o *TicketDetailInfo) SetTicketPrice(v string) {
	o.TicketPrice = &v
}

// GetTicketType returns the TicketType field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetTicketType() string {
	if o == nil || IsNil(o.TicketType) {
		var ret string
		return ret
	}
	return *o.TicketType
}

// GetTicketTypeOk returns a tuple with the TicketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetTicketTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TicketType) {
		return nil, false
	}
	return o.TicketType, true
}

// HasTicketType returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasTicketType() bool {
	if o != nil && !IsNil(o.TicketType) {
		return true
	}

	return false
}

// SetTicketType gets a reference to the given string and assigns it to the TicketType field.
func (o *TicketDetailInfo) SetTicketType(v string) {
	o.TicketType = &v
}

// GetTradeNo returns the TradeNo field value if set, zero value otherwise.
func (o *TicketDetailInfo) GetTradeNo() string {
	if o == nil || IsNil(o.TradeNo) {
		var ret string
		return ret
	}
	return *o.TradeNo
}

// GetTradeNoOk returns a tuple with the TradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketDetailInfo) GetTradeNoOk() (*string, bool) {
	if o == nil || IsNil(o.TradeNo) {
		return nil, false
	}
	return o.TradeNo, true
}

// HasTradeNo returns a boolean if a field has been set.
func (o *TicketDetailInfo) HasTradeNo() bool {
	if o != nil && !IsNil(o.TradeNo) {
		return true
	}

	return false
}

// SetTradeNo gets a reference to the given string and assigns it to the TradeNo field.
func (o *TicketDetailInfo) SetTradeNo(v string) {
	o.TradeNo = &v
}

func (o TicketDetailInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TicketDetailInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.EndStation) {
		toSerialize["end_station"] = o.EndStation
	}
	if !IsNil(o.EndStationName) {
		toSerialize["end_station_name"] = o.EndStationName
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.StartStation) {
		toSerialize["start_station"] = o.StartStation
	}
	if !IsNil(o.StartStationName) {
		toSerialize["start_station_name"] = o.StartStationName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TicketPrice) {
		toSerialize["ticket_price"] = o.TicketPrice
	}
	if !IsNil(o.TicketType) {
		toSerialize["ticket_type"] = o.TicketType
	}
	if !IsNil(o.TradeNo) {
		toSerialize["trade_no"] = o.TradeNo
	}
	return toSerialize, nil
}

type NullableTicketDetailInfo struct {
	value *TicketDetailInfo
	isSet bool
}

func (v NullableTicketDetailInfo) Get() *TicketDetailInfo {
	return v.value
}

func (v *NullableTicketDetailInfo) Set(val *TicketDetailInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketDetailInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketDetailInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketDetailInfo(val *TicketDetailInfo) *NullableTicketDetailInfo {
	return &NullableTicketDetailInfo{value: val, isSet: true}
}

func (v NullableTicketDetailInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketDetailInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceItemOpenModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceItemOpenModel{}

// InvoiceItemOpenModel struct for InvoiceItemOpenModel
type InvoiceItemOpenModel struct {
	// 明细行不含税金额，单位元，保留两位小数
	ItemExTaxAmount *string `json:"item_ex_tax_amount,omitempty"`
	// 开票项目：货物或应税劳务、服务名称
	ItemName *string `json:"item_name,omitempty"`
	// 国税局制定的商品税收编码，必须是最末级
	ItemNo *string `json:"item_no,omitempty"`
	// 数量； 1.当row_type=0或2且item_unit_price为空，可空； 2.可精确到小数点后6位
	ItemQuantity *int32 `json:"item_quantity,omitempty"`
	// 规格型号
	ItemSpec *string `json:"item_spec,omitempty"`
	// 明细行价税合计，单位元，必须保证item_sum_amount=item_ex_tax_amount+item_tax_amount。
	ItemSumAmount *string `json:"item_sum_amount,omitempty"`
	// 明细行税额，单位元，保留两位小数，无税或者免税情况下输入：0.00。
	ItemTaxAmount *string `json:"item_tax_amount,omitempty"`
	// 明细行税率，无税或者免税情况下输入：0.00。
	ItemTaxRate *string `json:"item_tax_rate,omitempty"`
	// 单位
	ItemUnit *string `json:"item_unit,omitempty"`
	// 不含税单价（元）; 1.当row_type=0或2且item_quantity为空，可空 2.可精确到小数点后8位；
	ItemUnitPrice *string `json:"item_unit_price,omitempty"`
	// 发票行性质：0表示正常行，1表示折扣行，2表示被折扣行。
	RowType *string `json:"row_type,omitempty"`
}

// NewInvoiceItemOpenModel instantiates a new InvoiceItemOpenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItemOpenModel() *InvoiceItemOpenModel {
	this := InvoiceItemOpenModel{}
	return &this
}

// NewInvoiceItemOpenModelWithDefaults instantiates a new InvoiceItemOpenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemOpenModelWithDefaults() *InvoiceItemOpenModel {
	this := InvoiceItemOpenModel{}
	return &this
}

// GetItemExTaxAmount returns the ItemExTaxAmount field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemExTaxAmount() string {
	if o == nil || IsNil(o.ItemExTaxAmount) {
		var ret string
		return ret
	}
	return *o.ItemExTaxAmount
}

// GetItemExTaxAmountOk returns a tuple with the ItemExTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemExTaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ItemExTaxAmount) {
		return nil, false
	}
	return o.ItemExTaxAmount, true
}

// HasItemExTaxAmount returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemExTaxAmount() bool {
	if o != nil && !IsNil(o.ItemExTaxAmount) {
		return true
	}

	return false
}

// SetItemExTaxAmount gets a reference to the given string and assigns it to the ItemExTaxAmount field.
func (o *InvoiceItemOpenModel) SetItemExTaxAmount(v string) {
	o.ItemExTaxAmount = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemName() string {
	if o == nil || IsNil(o.ItemName) {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ItemName) {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemName() bool {
	if o != nil && !IsNil(o.ItemName) {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *InvoiceItemOpenModel) SetItemName(v string) {
	o.ItemName = &v
}

// GetItemNo returns the ItemNo field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemNo() string {
	if o == nil || IsNil(o.ItemNo) {
		var ret string
		return ret
	}
	return *o.ItemNo
}

// GetItemNoOk returns a tuple with the ItemNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemNoOk() (*string, bool) {
	if o == nil || IsNil(o.ItemNo) {
		return nil, false
	}
	return o.ItemNo, true
}

// HasItemNo returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemNo() bool {
	if o != nil && !IsNil(o.ItemNo) {
		return true
	}

	return false
}

// SetItemNo gets a reference to the given string and assigns it to the ItemNo field.
func (o *InvoiceItemOpenModel) SetItemNo(v string) {
	o.ItemNo = &v
}

// GetItemQuantity returns the ItemQuantity field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemQuantity() int32 {
	if o == nil || IsNil(o.ItemQuantity) {
		var ret int32
		return ret
	}
	return *o.ItemQuantity
}

// GetItemQuantityOk returns a tuple with the ItemQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemQuantity) {
		return nil, false
	}
	return o.ItemQuantity, true
}

// HasItemQuantity returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemQuantity() bool {
	if o != nil && !IsNil(o.ItemQuantity) {
		return true
	}

	return false
}

// SetItemQuantity gets a reference to the given int32 and assigns it to the ItemQuantity field.
func (o *InvoiceItemOpenModel) SetItemQuantity(v int32) {
	o.ItemQuantity = &v
}

// GetItemSpec returns the ItemSpec field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemSpec() string {
	if o == nil || IsNil(o.ItemSpec) {
		var ret string
		return ret
	}
	return *o.ItemSpec
}

// GetItemSpecOk returns a tuple with the ItemSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemSpecOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSpec) {
		return nil, false
	}
	return o.ItemSpec, true
}

// HasItemSpec returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemSpec() bool {
	if o != nil && !IsNil(o.ItemSpec) {
		return true
	}

	return false
}

// SetItemSpec gets a reference to the given string and assigns it to the ItemSpec field.
func (o *InvoiceItemOpenModel) SetItemSpec(v string) {
	o.ItemSpec = &v
}

// GetItemSumAmount returns the ItemSumAmount field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemSumAmount() string {
	if o == nil || IsNil(o.ItemSumAmount) {
		var ret string
		return ret
	}
	return *o.ItemSumAmount
}

// GetItemSumAmountOk returns a tuple with the ItemSumAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemSumAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ItemSumAmount) {
		return nil, false
	}
	return o.ItemSumAmount, true
}

// HasItemSumAmount returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemSumAmount() bool {
	if o != nil && !IsNil(o.ItemSumAmount) {
		return true
	}

	return false
}

// SetItemSumAmount gets a reference to the given string and assigns it to the ItemSumAmount field.
func (o *InvoiceItemOpenModel) SetItemSumAmount(v string) {
	o.ItemSumAmount = &v
}

// GetItemTaxAmount returns the ItemTaxAmount field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemTaxAmount() string {
	if o == nil || IsNil(o.ItemTaxAmount) {
		var ret string
		return ret
	}
	return *o.ItemTaxAmount
}

// GetItemTaxAmountOk returns a tuple with the ItemTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemTaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ItemTaxAmount) {
		return nil, false
	}
	return o.ItemTaxAmount, true
}

// HasItemTaxAmount returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemTaxAmount() bool {
	if o != nil && !IsNil(o.ItemTaxAmount) {
		return true
	}

	return false
}

// SetItemTaxAmount gets a reference to the given string and assigns it to the ItemTaxAmount field.
func (o *InvoiceItemOpenModel) SetItemTaxAmount(v string) {
	o.ItemTaxAmount = &v
}

// GetItemTaxRate returns the ItemTaxRate field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemTaxRate() string {
	if o == nil || IsNil(o.ItemTaxRate) {
		var ret string
		return ret
	}
	return *o.ItemTaxRate
}

// GetItemTaxRateOk returns a tuple with the ItemTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemTaxRateOk() (*string, bool) {
	if o == nil || IsNil(o.ItemTaxRate) {
		return nil, false
	}
	return o.ItemTaxRate, true
}

// HasItemTaxRate returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemTaxRate() bool {
	if o != nil && !IsNil(o.ItemTaxRate) {
		return true
	}

	return false
}

// SetItemTaxRate gets a reference to the given string and assigns it to the ItemTaxRate field.
func (o *InvoiceItemOpenModel) SetItemTaxRate(v string) {
	o.ItemTaxRate = &v
}

// GetItemUnit returns the ItemUnit field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemUnit() string {
	if o == nil || IsNil(o.ItemUnit) {
		var ret string
		return ret
	}
	return *o.ItemUnit
}

// GetItemUnitOk returns a tuple with the ItemUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemUnitOk() (*string, bool) {
	if o == nil || IsNil(o.ItemUnit) {
		return nil, false
	}
	return o.ItemUnit, true
}

// HasItemUnit returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemUnit() bool {
	if o != nil && !IsNil(o.ItemUnit) {
		return true
	}

	return false
}

// SetItemUnit gets a reference to the given string and assigns it to the ItemUnit field.
func (o *InvoiceItemOpenModel) SetItemUnit(v string) {
	o.ItemUnit = &v
}

// GetItemUnitPrice returns the ItemUnitPrice field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetItemUnitPrice() string {
	if o == nil || IsNil(o.ItemUnitPrice) {
		var ret string
		return ret
	}
	return *o.ItemUnitPrice
}

// GetItemUnitPriceOk returns a tuple with the ItemUnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetItemUnitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.ItemUnitPrice) {
		return nil, false
	}
	return o.ItemUnitPrice, true
}

// HasItemUnitPrice returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasItemUnitPrice() bool {
	if o != nil && !IsNil(o.ItemUnitPrice) {
		return true
	}

	return false
}

// SetItemUnitPrice gets a reference to the given string and assigns it to the ItemUnitPrice field.
func (o *InvoiceItemOpenModel) SetItemUnitPrice(v string) {
	o.ItemUnitPrice = &v
}

// GetRowType returns the RowType field value if set, zero value otherwise.
func (o *InvoiceItemOpenModel) GetRowType() string {
	if o == nil || IsNil(o.RowType) {
		var ret string
		return ret
	}
	return *o.RowType
}

// GetRowTypeOk returns a tuple with the RowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemOpenModel) GetRowTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RowType) {
		return nil, false
	}
	return o.RowType, true
}

// HasRowType returns a boolean if a field has been set.
func (o *InvoiceItemOpenModel) HasRowType() bool {
	if o != nil && !IsNil(o.RowType) {
		return true
	}

	return false
}

// SetRowType gets a reference to the given string and assigns it to the RowType field.
func (o *InvoiceItemOpenModel) SetRowType(v string) {
	o.RowType = &v
}

func (o InvoiceItemOpenModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceItemOpenModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemExTaxAmount) {
		toSerialize["item_ex_tax_amount"] = o.ItemExTaxAmount
	}
	if !IsNil(o.ItemName) {
		toSerialize["item_name"] = o.ItemName
	}
	if !IsNil(o.ItemNo) {
		toSerialize["item_no"] = o.ItemNo
	}
	if !IsNil(o.ItemQuantity) {
		toSerialize["item_quantity"] = o.ItemQuantity
	}
	if !IsNil(o.ItemSpec) {
		toSerialize["item_spec"] = o.ItemSpec
	}
	if !IsNil(o.ItemSumAmount) {
		toSerialize["item_sum_amount"] = o.ItemSumAmount
	}
	if !IsNil(o.ItemTaxAmount) {
		toSerialize["item_tax_amount"] = o.ItemTaxAmount
	}
	if !IsNil(o.ItemTaxRate) {
		toSerialize["item_tax_rate"] = o.ItemTaxRate
	}
	if !IsNil(o.ItemUnit) {
		toSerialize["item_unit"] = o.ItemUnit
	}
	if !IsNil(o.ItemUnitPrice) {
		toSerialize["item_unit_price"] = o.ItemUnitPrice
	}
	if !IsNil(o.RowType) {
		toSerialize["row_type"] = o.RowType
	}
	return toSerialize, nil
}

type NullableInvoiceItemOpenModel struct {
	value *InvoiceItemOpenModel
	isSet bool
}

func (v NullableInvoiceItemOpenModel) Get() *InvoiceItemOpenModel {
	return v.value
}

func (v *NullableInvoiceItemOpenModel) Set(val *InvoiceItemOpenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceItemOpenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceItemOpenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceItemOpenModel(val *InvoiceItemOpenModel) *NullableInvoiceItemOpenModel {
	return &NullableInvoiceItemOpenModel{value: val, isSet: true}
}

func (v NullableInvoiceItemOpenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceItemOpenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



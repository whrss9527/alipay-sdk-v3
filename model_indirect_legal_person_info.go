/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the IndirectLegalPersonInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndirectLegalPersonInfo{}

// IndirectLegalPersonInfo struct for IndirectLegalPersonInfo
type IndirectLegalPersonInfo struct {
	// 授权函照片（使用图片上传接口），当证件持有人类型为 经办人时，必须上传。其他情况，无需上传
	AuthLetterImg *string `json:"auth_letter_img,omitempty"`
	// 法人/经营者证件反面照（使用图片上传接口的image_id）。当证件类型为身份证时，此字段必传；当证件类型为非身份证时，此字段非必传。
	CardBackImg *string `json:"card_back_img,omitempty"`
	// 法人/经营者证件正面照（使用图片上传接口返回的image_id）
	CardFrontImg *string `json:"card_front_img,omitempty"`
	// 证件号码
	CardNo *string `json:"card_no,omitempty"`
	// 证件类型，枚举值：中国大陆居民-身份证(RESIDENT)、其他国家或地区居民-护照(PASSPORT)、中国港澳居民-来往内地通行证(PASSPORT_HK_MO)、中国台湾居民-来往大陆通行证(PASSPORT_TWN)、港澳居民居住证（RESIDENCE_PERMIT_HM）、台湾居民居住证（RESIDENCE_PERMIT_TW）、外国人永久居住证（PERMANENT_RESIDENCE_FOREIGNER）。个体户/企业/事业单位/社会组织：可选择任一证件类型，政府机关、小微商户仅支持身份证类型。
	CardType *string `json:"card_type,omitempty"`
	// 证件生效时间
	EffectTime *string `json:"effect_time,omitempty"`
	// 证件过期时间
	ExpireTime *string `json:"expire_time,omitempty"`
	// 经营者/法人是否为受益人
	IsBenefitPerson *bool `json:"is_benefit_person,omitempty"`
	// 证件持有人类型： - 法人  LEGAL_PERSON - 经办人  AGENT_PERSON 主体类型为政府机关、事业单位时选传： （1）若上传的是法人证件，则不需要上传该字段。 （2）若因特殊情况，无法提供法人证件时，可上传经办人。 主体类型为企业、个体户、社会组织、小微商户时，默认为经营者/法人，不需要上传该字段。
	LegalType *string `json:"legal_type,omitempty"`
	// 法人姓名
	PersonName *string `json:"person_name,omitempty"`
}

// NewIndirectLegalPersonInfo instantiates a new IndirectLegalPersonInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndirectLegalPersonInfo() *IndirectLegalPersonInfo {
	this := IndirectLegalPersonInfo{}
	return &this
}

// NewIndirectLegalPersonInfoWithDefaults instantiates a new IndirectLegalPersonInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndirectLegalPersonInfoWithDefaults() *IndirectLegalPersonInfo {
	this := IndirectLegalPersonInfo{}
	return &this
}

// GetAuthLetterImg returns the AuthLetterImg field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetAuthLetterImg() string {
	if o == nil || IsNil(o.AuthLetterImg) {
		var ret string
		return ret
	}
	return *o.AuthLetterImg
}

// GetAuthLetterImgOk returns a tuple with the AuthLetterImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetAuthLetterImgOk() (*string, bool) {
	if o == nil || IsNil(o.AuthLetterImg) {
		return nil, false
	}
	return o.AuthLetterImg, true
}

// HasAuthLetterImg returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasAuthLetterImg() bool {
	if o != nil && !IsNil(o.AuthLetterImg) {
		return true
	}

	return false
}

// SetAuthLetterImg gets a reference to the given string and assigns it to the AuthLetterImg field.
func (o *IndirectLegalPersonInfo) SetAuthLetterImg(v string) {
	o.AuthLetterImg = &v
}

// GetCardBackImg returns the CardBackImg field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetCardBackImg() string {
	if o == nil || IsNil(o.CardBackImg) {
		var ret string
		return ret
	}
	return *o.CardBackImg
}

// GetCardBackImgOk returns a tuple with the CardBackImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetCardBackImgOk() (*string, bool) {
	if o == nil || IsNil(o.CardBackImg) {
		return nil, false
	}
	return o.CardBackImg, true
}

// HasCardBackImg returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasCardBackImg() bool {
	if o != nil && !IsNil(o.CardBackImg) {
		return true
	}

	return false
}

// SetCardBackImg gets a reference to the given string and assigns it to the CardBackImg field.
func (o *IndirectLegalPersonInfo) SetCardBackImg(v string) {
	o.CardBackImg = &v
}

// GetCardFrontImg returns the CardFrontImg field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetCardFrontImg() string {
	if o == nil || IsNil(o.CardFrontImg) {
		var ret string
		return ret
	}
	return *o.CardFrontImg
}

// GetCardFrontImgOk returns a tuple with the CardFrontImg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetCardFrontImgOk() (*string, bool) {
	if o == nil || IsNil(o.CardFrontImg) {
		return nil, false
	}
	return o.CardFrontImg, true
}

// HasCardFrontImg returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasCardFrontImg() bool {
	if o != nil && !IsNil(o.CardFrontImg) {
		return true
	}

	return false
}

// SetCardFrontImg gets a reference to the given string and assigns it to the CardFrontImg field.
func (o *IndirectLegalPersonInfo) SetCardFrontImg(v string) {
	o.CardFrontImg = &v
}

// GetCardNo returns the CardNo field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetCardNo() string {
	if o == nil || IsNil(o.CardNo) {
		var ret string
		return ret
	}
	return *o.CardNo
}

// GetCardNoOk returns a tuple with the CardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.CardNo) {
		return nil, false
	}
	return o.CardNo, true
}

// HasCardNo returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasCardNo() bool {
	if o != nil && !IsNil(o.CardNo) {
		return true
	}

	return false
}

// SetCardNo gets a reference to the given string and assigns it to the CardNo field.
func (o *IndirectLegalPersonInfo) SetCardNo(v string) {
	o.CardNo = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetCardType() string {
	if o == nil || IsNil(o.CardType) {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetCardTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CardType) {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasCardType() bool {
	if o != nil && !IsNil(o.CardType) {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *IndirectLegalPersonInfo) SetCardType(v string) {
	o.CardType = &v
}

// GetEffectTime returns the EffectTime field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetEffectTime() string {
	if o == nil || IsNil(o.EffectTime) {
		var ret string
		return ret
	}
	return *o.EffectTime
}

// GetEffectTimeOk returns a tuple with the EffectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetEffectTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EffectTime) {
		return nil, false
	}
	return o.EffectTime, true
}

// HasEffectTime returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasEffectTime() bool {
	if o != nil && !IsNil(o.EffectTime) {
		return true
	}

	return false
}

// SetEffectTime gets a reference to the given string and assigns it to the EffectTime field.
func (o *IndirectLegalPersonInfo) SetEffectTime(v string) {
	o.EffectTime = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *IndirectLegalPersonInfo) SetExpireTime(v string) {
	o.ExpireTime = &v
}

// GetIsBenefitPerson returns the IsBenefitPerson field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetIsBenefitPerson() bool {
	if o == nil || IsNil(o.IsBenefitPerson) {
		var ret bool
		return ret
	}
	return *o.IsBenefitPerson
}

// GetIsBenefitPersonOk returns a tuple with the IsBenefitPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetIsBenefitPersonOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBenefitPerson) {
		return nil, false
	}
	return o.IsBenefitPerson, true
}

// HasIsBenefitPerson returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasIsBenefitPerson() bool {
	if o != nil && !IsNil(o.IsBenefitPerson) {
		return true
	}

	return false
}

// SetIsBenefitPerson gets a reference to the given bool and assigns it to the IsBenefitPerson field.
func (o *IndirectLegalPersonInfo) SetIsBenefitPerson(v bool) {
	o.IsBenefitPerson = &v
}

// GetLegalType returns the LegalType field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetLegalType() string {
	if o == nil || IsNil(o.LegalType) {
		var ret string
		return ret
	}
	return *o.LegalType
}

// GetLegalTypeOk returns a tuple with the LegalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetLegalTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LegalType) {
		return nil, false
	}
	return o.LegalType, true
}

// HasLegalType returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasLegalType() bool {
	if o != nil && !IsNil(o.LegalType) {
		return true
	}

	return false
}

// SetLegalType gets a reference to the given string and assigns it to the LegalType field.
func (o *IndirectLegalPersonInfo) SetLegalType(v string) {
	o.LegalType = &v
}

// GetPersonName returns the PersonName field value if set, zero value otherwise.
func (o *IndirectLegalPersonInfo) GetPersonName() string {
	if o == nil || IsNil(o.PersonName) {
		var ret string
		return ret
	}
	return *o.PersonName
}

// GetPersonNameOk returns a tuple with the PersonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndirectLegalPersonInfo) GetPersonNameOk() (*string, bool) {
	if o == nil || IsNil(o.PersonName) {
		return nil, false
	}
	return o.PersonName, true
}

// HasPersonName returns a boolean if a field has been set.
func (o *IndirectLegalPersonInfo) HasPersonName() bool {
	if o != nil && !IsNil(o.PersonName) {
		return true
	}

	return false
}

// SetPersonName gets a reference to the given string and assigns it to the PersonName field.
func (o *IndirectLegalPersonInfo) SetPersonName(v string) {
	o.PersonName = &v
}

func (o IndirectLegalPersonInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndirectLegalPersonInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthLetterImg) {
		toSerialize["auth_letter_img"] = o.AuthLetterImg
	}
	if !IsNil(o.CardBackImg) {
		toSerialize["card_back_img"] = o.CardBackImg
	}
	if !IsNil(o.CardFrontImg) {
		toSerialize["card_front_img"] = o.CardFrontImg
	}
	if !IsNil(o.CardNo) {
		toSerialize["card_no"] = o.CardNo
	}
	if !IsNil(o.CardType) {
		toSerialize["card_type"] = o.CardType
	}
	if !IsNil(o.EffectTime) {
		toSerialize["effect_time"] = o.EffectTime
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expire_time"] = o.ExpireTime
	}
	if !IsNil(o.IsBenefitPerson) {
		toSerialize["is_benefit_person"] = o.IsBenefitPerson
	}
	if !IsNil(o.LegalType) {
		toSerialize["legal_type"] = o.LegalType
	}
	if !IsNil(o.PersonName) {
		toSerialize["person_name"] = o.PersonName
	}
	return toSerialize, nil
}

type NullableIndirectLegalPersonInfo struct {
	value *IndirectLegalPersonInfo
	isSet bool
}

func (v NullableIndirectLegalPersonInfo) Get() *IndirectLegalPersonInfo {
	return v.value
}

func (v *NullableIndirectLegalPersonInfo) Set(val *IndirectLegalPersonInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIndirectLegalPersonInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIndirectLegalPersonInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndirectLegalPersonInfo(val *IndirectLegalPersonInfo) *NullableIndirectLegalPersonInfo {
	return &NullableIndirectLegalPersonInfo{value: val, isSet: true}
}

func (v NullableIndirectLegalPersonInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndirectLegalPersonInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

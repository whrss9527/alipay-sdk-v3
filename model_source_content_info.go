/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the SourceContentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceContentInfo{}

// SourceContentInfo struct for SourceContentInfo
type SourceContentInfo struct {
	// 内容ID
	ContentId *string `json:"content_id,omitempty"`
	// 支付宝内容链接
	Link *string `json:"link,omitempty"`
	// 内容分发范围。0 - 仅创作者自己可见，1 - 所有人可见，2 - 分发范围受限。
	PermissionStatus *string `json:"permission_status,omitempty"`
	// 作者
	SourceAuthor *string `json:"source_author,omitempty"`
	// 来源文章的原始链接地址
	SourceLink *string `json:"source_link,omitempty"`
	// 素材列表
	SourceMediaInfos []SourceMediaInfo `json:"source_media_infos,omitempty"`
	// 关联服务
	SourceOffers []SourceOffer `json:"source_offers,omitempty"`
	// 文章发布时间
	SourcePublishDate *string `json:"source_publish_date,omitempty"`
	// 内容状态 0-审核中 1-成功发布 2-审核不通过 3-己删除
	SourceStatus *string `json:"source_status,omitempty"`
	// 文章的摘要
	SourceSummary *string `json:"source_summary,omitempty"`
	// 内容标题
	SourceTitle *string `json:"source_title,omitempty"`
	// 内容类型（0-长图文 1-短图文 2-视频）
	SourceType *string `json:"source_type,omitempty"`
	// 平台加工后的内容标签，例如 HIGH_QUALITY: 优质
	SpecialTags []string `json:"special_tags,omitempty"`
}

// NewSourceContentInfo instantiates a new SourceContentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceContentInfo() *SourceContentInfo {
	this := SourceContentInfo{}
	return &this
}

// NewSourceContentInfoWithDefaults instantiates a new SourceContentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceContentInfoWithDefaults() *SourceContentInfo {
	this := SourceContentInfo{}
	return &this
}

// GetContentId returns the ContentId field value if set, zero value otherwise.
func (o *SourceContentInfo) GetContentId() string {
	if o == nil || IsNil(o.ContentId) {
		var ret string
		return ret
	}
	return *o.ContentId
}

// GetContentIdOk returns a tuple with the ContentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetContentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContentId) {
		return nil, false
	}
	return o.ContentId, true
}

// HasContentId returns a boolean if a field has been set.
func (o *SourceContentInfo) HasContentId() bool {
	if o != nil && !IsNil(o.ContentId) {
		return true
	}

	return false
}

// SetContentId gets a reference to the given string and assigns it to the ContentId field.
func (o *SourceContentInfo) SetContentId(v string) {
	o.ContentId = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *SourceContentInfo) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *SourceContentInfo) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *SourceContentInfo) SetLink(v string) {
	o.Link = &v
}

// GetPermissionStatus returns the PermissionStatus field value if set, zero value otherwise.
func (o *SourceContentInfo) GetPermissionStatus() string {
	if o == nil || IsNil(o.PermissionStatus) {
		var ret string
		return ret
	}
	return *o.PermissionStatus
}

// GetPermissionStatusOk returns a tuple with the PermissionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetPermissionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PermissionStatus) {
		return nil, false
	}
	return o.PermissionStatus, true
}

// HasPermissionStatus returns a boolean if a field has been set.
func (o *SourceContentInfo) HasPermissionStatus() bool {
	if o != nil && !IsNil(o.PermissionStatus) {
		return true
	}

	return false
}

// SetPermissionStatus gets a reference to the given string and assigns it to the PermissionStatus field.
func (o *SourceContentInfo) SetPermissionStatus(v string) {
	o.PermissionStatus = &v
}

// GetSourceAuthor returns the SourceAuthor field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceAuthor() string {
	if o == nil || IsNil(o.SourceAuthor) {
		var ret string
		return ret
	}
	return *o.SourceAuthor
}

// GetSourceAuthorOk returns a tuple with the SourceAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAuthor) {
		return nil, false
	}
	return o.SourceAuthor, true
}

// HasSourceAuthor returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceAuthor() bool {
	if o != nil && !IsNil(o.SourceAuthor) {
		return true
	}

	return false
}

// SetSourceAuthor gets a reference to the given string and assigns it to the SourceAuthor field.
func (o *SourceContentInfo) SetSourceAuthor(v string) {
	o.SourceAuthor = &v
}

// GetSourceLink returns the SourceLink field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceLink() string {
	if o == nil || IsNil(o.SourceLink) {
		var ret string
		return ret
	}
	return *o.SourceLink
}

// GetSourceLinkOk returns a tuple with the SourceLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SourceLink) {
		return nil, false
	}
	return o.SourceLink, true
}

// HasSourceLink returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceLink() bool {
	if o != nil && !IsNil(o.SourceLink) {
		return true
	}

	return false
}

// SetSourceLink gets a reference to the given string and assigns it to the SourceLink field.
func (o *SourceContentInfo) SetSourceLink(v string) {
	o.SourceLink = &v
}

// GetSourceMediaInfos returns the SourceMediaInfos field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceMediaInfos() []SourceMediaInfo {
	if o == nil || IsNil(o.SourceMediaInfos) {
		var ret []SourceMediaInfo
		return ret
	}
	return o.SourceMediaInfos
}

// GetSourceMediaInfosOk returns a tuple with the SourceMediaInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceMediaInfosOk() ([]SourceMediaInfo, bool) {
	if o == nil || IsNil(o.SourceMediaInfos) {
		return nil, false
	}
	return o.SourceMediaInfos, true
}

// HasSourceMediaInfos returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceMediaInfos() bool {
	if o != nil && !IsNil(o.SourceMediaInfos) {
		return true
	}

	return false
}

// SetSourceMediaInfos gets a reference to the given []SourceMediaInfo and assigns it to the SourceMediaInfos field.
func (o *SourceContentInfo) SetSourceMediaInfos(v []SourceMediaInfo) {
	o.SourceMediaInfos = v
}

// GetSourceOffers returns the SourceOffers field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceOffers() []SourceOffer {
	if o == nil || IsNil(o.SourceOffers) {
		var ret []SourceOffer
		return ret
	}
	return o.SourceOffers
}

// GetSourceOffersOk returns a tuple with the SourceOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceOffersOk() ([]SourceOffer, bool) {
	if o == nil || IsNil(o.SourceOffers) {
		return nil, false
	}
	return o.SourceOffers, true
}

// HasSourceOffers returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceOffers() bool {
	if o != nil && !IsNil(o.SourceOffers) {
		return true
	}

	return false
}

// SetSourceOffers gets a reference to the given []SourceOffer and assigns it to the SourceOffers field.
func (o *SourceContentInfo) SetSourceOffers(v []SourceOffer) {
	o.SourceOffers = v
}

// GetSourcePublishDate returns the SourcePublishDate field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourcePublishDate() string {
	if o == nil || IsNil(o.SourcePublishDate) {
		var ret string
		return ret
	}
	return *o.SourcePublishDate
}

// GetSourcePublishDateOk returns a tuple with the SourcePublishDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourcePublishDateOk() (*string, bool) {
	if o == nil || IsNil(o.SourcePublishDate) {
		return nil, false
	}
	return o.SourcePublishDate, true
}

// HasSourcePublishDate returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourcePublishDate() bool {
	if o != nil && !IsNil(o.SourcePublishDate) {
		return true
	}

	return false
}

// SetSourcePublishDate gets a reference to the given string and assigns it to the SourcePublishDate field.
func (o *SourceContentInfo) SetSourcePublishDate(v string) {
	o.SourcePublishDate = &v
}

// GetSourceStatus returns the SourceStatus field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceStatus() string {
	if o == nil || IsNil(o.SourceStatus) {
		var ret string
		return ret
	}
	return *o.SourceStatus
}

// GetSourceStatusOk returns a tuple with the SourceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SourceStatus) {
		return nil, false
	}
	return o.SourceStatus, true
}

// HasSourceStatus returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceStatus() bool {
	if o != nil && !IsNil(o.SourceStatus) {
		return true
	}

	return false
}

// SetSourceStatus gets a reference to the given string and assigns it to the SourceStatus field.
func (o *SourceContentInfo) SetSourceStatus(v string) {
	o.SourceStatus = &v
}

// GetSourceSummary returns the SourceSummary field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceSummary() string {
	if o == nil || IsNil(o.SourceSummary) {
		var ret string
		return ret
	}
	return *o.SourceSummary
}

// GetSourceSummaryOk returns a tuple with the SourceSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.SourceSummary) {
		return nil, false
	}
	return o.SourceSummary, true
}

// HasSourceSummary returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceSummary() bool {
	if o != nil && !IsNil(o.SourceSummary) {
		return true
	}

	return false
}

// SetSourceSummary gets a reference to the given string and assigns it to the SourceSummary field.
func (o *SourceContentInfo) SetSourceSummary(v string) {
	o.SourceSummary = &v
}

// GetSourceTitle returns the SourceTitle field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceTitle() string {
	if o == nil || IsNil(o.SourceTitle) {
		var ret string
		return ret
	}
	return *o.SourceTitle
}

// GetSourceTitleOk returns a tuple with the SourceTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTitle) {
		return nil, false
	}
	return o.SourceTitle, true
}

// HasSourceTitle returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceTitle() bool {
	if o != nil && !IsNil(o.SourceTitle) {
		return true
	}

	return false
}

// SetSourceTitle gets a reference to the given string and assigns it to the SourceTitle field.
func (o *SourceContentInfo) SetSourceTitle(v string) {
	o.SourceTitle = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSourceType() string {
	if o == nil || IsNil(o.SourceType) {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *SourceContentInfo) SetSourceType(v string) {
	o.SourceType = &v
}

// GetSpecialTags returns the SpecialTags field value if set, zero value otherwise.
func (o *SourceContentInfo) GetSpecialTags() []string {
	if o == nil || IsNil(o.SpecialTags) {
		var ret []string
		return ret
	}
	return o.SpecialTags
}

// GetSpecialTagsOk returns a tuple with the SpecialTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceContentInfo) GetSpecialTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.SpecialTags) {
		return nil, false
	}
	return o.SpecialTags, true
}

// HasSpecialTags returns a boolean if a field has been set.
func (o *SourceContentInfo) HasSpecialTags() bool {
	if o != nil && !IsNil(o.SpecialTags) {
		return true
	}

	return false
}

// SetSpecialTags gets a reference to the given []string and assigns it to the SpecialTags field.
func (o *SourceContentInfo) SetSpecialTags(v []string) {
	o.SpecialTags = v
}

func (o SourceContentInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceContentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentId) {
		toSerialize["content_id"] = o.ContentId
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.PermissionStatus) {
		toSerialize["permission_status"] = o.PermissionStatus
	}
	if !IsNil(o.SourceAuthor) {
		toSerialize["source_author"] = o.SourceAuthor
	}
	if !IsNil(o.SourceLink) {
		toSerialize["source_link"] = o.SourceLink
	}
	if !IsNil(o.SourceMediaInfos) {
		toSerialize["source_media_infos"] = o.SourceMediaInfos
	}
	if !IsNil(o.SourceOffers) {
		toSerialize["source_offers"] = o.SourceOffers
	}
	if !IsNil(o.SourcePublishDate) {
		toSerialize["source_publish_date"] = o.SourcePublishDate
	}
	if !IsNil(o.SourceStatus) {
		toSerialize["source_status"] = o.SourceStatus
	}
	if !IsNil(o.SourceSummary) {
		toSerialize["source_summary"] = o.SourceSummary
	}
	if !IsNil(o.SourceTitle) {
		toSerialize["source_title"] = o.SourceTitle
	}
	if !IsNil(o.SourceType) {
		toSerialize["source_type"] = o.SourceType
	}
	if !IsNil(o.SpecialTags) {
		toSerialize["special_tags"] = o.SpecialTags
	}
	return toSerialize, nil
}

type NullableSourceContentInfo struct {
	value *SourceContentInfo
	isSet bool
}

func (v NullableSourceContentInfo) Get() *SourceContentInfo {
	return v.value
}

func (v *NullableSourceContentInfo) Set(val *SourceContentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceContentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceContentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceContentInfo(val *SourceContentInfo) *NullableSourceContentInfo {
	return &NullableSourceContentInfo{value: val, isSet: true}
}

func (v NullableSourceContentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceContentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

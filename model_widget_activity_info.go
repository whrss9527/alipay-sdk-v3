/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the WidgetActivityInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetActivityInfo{}

// WidgetActivityInfo struct for WidgetActivityInfo
type WidgetActivityInfo struct {
	// 活动点击跳转到小程序的链接地址
	ActivityClickUrl *string `json:"activity_click_url,omitempty"`
	// 活动的唯一标识，同一个小程序橱窗下，该标识唯一，请开发者自行保证
	ActivityId *string `json:"activity_id,omitempty"`
	// 活动名称
	ActivityName *string `json:"activity_name,omitempty"`
	// 活动图片链接,最多不能超过5个
	ActivityPictureUrls []string `json:"activity_picture_urls,omitempty"`
}

// NewWidgetActivityInfo instantiates a new WidgetActivityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetActivityInfo() *WidgetActivityInfo {
	this := WidgetActivityInfo{}
	return &this
}

// NewWidgetActivityInfoWithDefaults instantiates a new WidgetActivityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetActivityInfoWithDefaults() *WidgetActivityInfo {
	this := WidgetActivityInfo{}
	return &this
}

// GetActivityClickUrl returns the ActivityClickUrl field value if set, zero value otherwise.
func (o *WidgetActivityInfo) GetActivityClickUrl() string {
	if o == nil || IsNil(o.ActivityClickUrl) {
		var ret string
		return ret
	}
	return *o.ActivityClickUrl
}

// GetActivityClickUrlOk returns a tuple with the ActivityClickUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetActivityInfo) GetActivityClickUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityClickUrl) {
		return nil, false
	}
	return o.ActivityClickUrl, true
}

// HasActivityClickUrl returns a boolean if a field has been set.
func (o *WidgetActivityInfo) HasActivityClickUrl() bool {
	if o != nil && !IsNil(o.ActivityClickUrl) {
		return true
	}

	return false
}

// SetActivityClickUrl gets a reference to the given string and assigns it to the ActivityClickUrl field.
func (o *WidgetActivityInfo) SetActivityClickUrl(v string) {
	o.ActivityClickUrl = &v
}

// GetActivityId returns the ActivityId field value if set, zero value otherwise.
func (o *WidgetActivityInfo) GetActivityId() string {
	if o == nil || IsNil(o.ActivityId) {
		var ret string
		return ret
	}
	return *o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetActivityInfo) GetActivityIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityId) {
		return nil, false
	}
	return o.ActivityId, true
}

// HasActivityId returns a boolean if a field has been set.
func (o *WidgetActivityInfo) HasActivityId() bool {
	if o != nil && !IsNil(o.ActivityId) {
		return true
	}

	return false
}

// SetActivityId gets a reference to the given string and assigns it to the ActivityId field.
func (o *WidgetActivityInfo) SetActivityId(v string) {
	o.ActivityId = &v
}

// GetActivityName returns the ActivityName field value if set, zero value otherwise.
func (o *WidgetActivityInfo) GetActivityName() string {
	if o == nil || IsNil(o.ActivityName) {
		var ret string
		return ret
	}
	return *o.ActivityName
}

// GetActivityNameOk returns a tuple with the ActivityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetActivityInfo) GetActivityNameOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityName) {
		return nil, false
	}
	return o.ActivityName, true
}

// HasActivityName returns a boolean if a field has been set.
func (o *WidgetActivityInfo) HasActivityName() bool {
	if o != nil && !IsNil(o.ActivityName) {
		return true
	}

	return false
}

// SetActivityName gets a reference to the given string and assigns it to the ActivityName field.
func (o *WidgetActivityInfo) SetActivityName(v string) {
	o.ActivityName = &v
}

// GetActivityPictureUrls returns the ActivityPictureUrls field value if set, zero value otherwise.
func (o *WidgetActivityInfo) GetActivityPictureUrls() []string {
	if o == nil || IsNil(o.ActivityPictureUrls) {
		var ret []string
		return ret
	}
	return o.ActivityPictureUrls
}

// GetActivityPictureUrlsOk returns a tuple with the ActivityPictureUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetActivityInfo) GetActivityPictureUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.ActivityPictureUrls) {
		return nil, false
	}
	return o.ActivityPictureUrls, true
}

// HasActivityPictureUrls returns a boolean if a field has been set.
func (o *WidgetActivityInfo) HasActivityPictureUrls() bool {
	if o != nil && !IsNil(o.ActivityPictureUrls) {
		return true
	}

	return false
}

// SetActivityPictureUrls gets a reference to the given []string and assigns it to the ActivityPictureUrls field.
func (o *WidgetActivityInfo) SetActivityPictureUrls(v []string) {
	o.ActivityPictureUrls = v
}

func (o WidgetActivityInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetActivityInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivityClickUrl) {
		toSerialize["activity_click_url"] = o.ActivityClickUrl
	}
	if !IsNil(o.ActivityId) {
		toSerialize["activity_id"] = o.ActivityId
	}
	if !IsNil(o.ActivityName) {
		toSerialize["activity_name"] = o.ActivityName
	}
	if !IsNil(o.ActivityPictureUrls) {
		toSerialize["activity_picture_urls"] = o.ActivityPictureUrls
	}
	return toSerialize, nil
}

type NullableWidgetActivityInfo struct {
	value *WidgetActivityInfo
	isSet bool
}

func (v NullableWidgetActivityInfo) Get() *WidgetActivityInfo {
	return v.value
}

func (v *NullableWidgetActivityInfo) Set(val *WidgetActivityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetActivityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetActivityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetActivityInfo(val *WidgetActivityInfo) *NullableWidgetActivityInfo {
	return &NullableWidgetActivityInfo{value: val, isSet: true}
}

func (v NullableWidgetActivityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetActivityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

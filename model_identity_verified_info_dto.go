/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the IdentityVerifiedInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityVerifiedInfoDTO{}

// IdentityVerifiedInfoDTO struct for IdentityVerifiedInfoDTO
type IdentityVerifiedInfoDTO struct {
	// MD5加密处理后的证件号
	CertNo *string `json:"cert_no,omitempty"`
	// 证件类型。暂仅支持 IDENTITY_CARD （身份证）
	CertType *string `json:"cert_type,omitempty"`
	// 用户的真实姓名
	UserName *string `json:"user_name,omitempty"`
}

// NewIdentityVerifiedInfoDTO instantiates a new IdentityVerifiedInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityVerifiedInfoDTO() *IdentityVerifiedInfoDTO {
	this := IdentityVerifiedInfoDTO{}
	return &this
}

// NewIdentityVerifiedInfoDTOWithDefaults instantiates a new IdentityVerifiedInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityVerifiedInfoDTOWithDefaults() *IdentityVerifiedInfoDTO {
	this := IdentityVerifiedInfoDTO{}
	return &this
}

// GetCertNo returns the CertNo field value if set, zero value otherwise.
func (o *IdentityVerifiedInfoDTO) GetCertNo() string {
	if o == nil || IsNil(o.CertNo) {
		var ret string
		return ret
	}
	return *o.CertNo
}

// GetCertNoOk returns a tuple with the CertNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityVerifiedInfoDTO) GetCertNoOk() (*string, bool) {
	if o == nil || IsNil(o.CertNo) {
		return nil, false
	}
	return o.CertNo, true
}

// HasCertNo returns a boolean if a field has been set.
func (o *IdentityVerifiedInfoDTO) HasCertNo() bool {
	if o != nil && !IsNil(o.CertNo) {
		return true
	}

	return false
}

// SetCertNo gets a reference to the given string and assigns it to the CertNo field.
func (o *IdentityVerifiedInfoDTO) SetCertNo(v string) {
	o.CertNo = &v
}

// GetCertType returns the CertType field value if set, zero value otherwise.
func (o *IdentityVerifiedInfoDTO) GetCertType() string {
	if o == nil || IsNil(o.CertType) {
		var ret string
		return ret
	}
	return *o.CertType
}

// GetCertTypeOk returns a tuple with the CertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityVerifiedInfoDTO) GetCertTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CertType) {
		return nil, false
	}
	return o.CertType, true
}

// HasCertType returns a boolean if a field has been set.
func (o *IdentityVerifiedInfoDTO) HasCertType() bool {
	if o != nil && !IsNil(o.CertType) {
		return true
	}

	return false
}

// SetCertType gets a reference to the given string and assigns it to the CertType field.
func (o *IdentityVerifiedInfoDTO) SetCertType(v string) {
	o.CertType = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *IdentityVerifiedInfoDTO) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityVerifiedInfoDTO) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *IdentityVerifiedInfoDTO) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *IdentityVerifiedInfoDTO) SetUserName(v string) {
	o.UserName = &v
}

func (o IdentityVerifiedInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityVerifiedInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertNo) {
		toSerialize["cert_no"] = o.CertNo
	}
	if !IsNil(o.CertType) {
		toSerialize["cert_type"] = o.CertType
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableIdentityVerifiedInfoDTO struct {
	value *IdentityVerifiedInfoDTO
	isSet bool
}

func (v NullableIdentityVerifiedInfoDTO) Get() *IdentityVerifiedInfoDTO {
	return v.value
}

func (v *NullableIdentityVerifiedInfoDTO) Set(val *IdentityVerifiedInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityVerifiedInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityVerifiedInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityVerifiedInfoDTO(val *IdentityVerifiedInfoDTO) *NullableIdentityVerifiedInfoDTO {
	return &NullableIdentityVerifiedInfoDTO{value: val, isSet: true}
}

func (v NullableIdentityVerifiedInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityVerifiedInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

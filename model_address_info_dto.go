/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AddressInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressInfoDTO{}

// AddressInfoDTO struct for AddressInfoDTO
type AddressInfoDTO struct {
	// 共同账户id，当入参传入共同账户id时返回该值
	AccountId *string `json:"account_id,omitempty"`
	// 详细地址
	Address *string `json:"address,omitempty"`
	// 地址id
	AddressId *string `json:"address_id,omitempty"`
	// 市(国家统一行政规划编码)
	CityCode *string `json:"city_code,omitempty"`
	// 城市
	CityName *string `json:"city_name,omitempty"`
	// 小区/楼宇
	Community *string `json:"community,omitempty"`
	// 企业id，当入参传入企业id时返回该值
	EnterpriseId *string `json:"enterprise_id,omitempty"`
	// 纬度
	Latitude *string `json:"latitude,omitempty"`
	// 经度
	Longitude *string `json:"longitude,omitempty"`
	// 备注
	Mark *string `json:"mark,omitempty"`
	// 地图poi
	PoiId *string `json:"poi_id,omitempty"`
}

// NewAddressInfoDTO instantiates a new AddressInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressInfoDTO() *AddressInfoDTO {
	this := AddressInfoDTO{}
	return &this
}

// NewAddressInfoDTOWithDefaults instantiates a new AddressInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressInfoDTOWithDefaults() *AddressInfoDTO {
	this := AddressInfoDTO{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AddressInfoDTO) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *AddressInfoDTO) SetAddress(v string) {
	o.Address = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetAddressId() string {
	if o == nil || IsNil(o.AddressId) {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *AddressInfoDTO) SetAddressId(v string) {
	o.AddressId = &v
}

// GetCityCode returns the CityCode field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetCityCode() string {
	if o == nil || IsNil(o.CityCode) {
		var ret string
		return ret
	}
	return *o.CityCode
}

// GetCityCodeOk returns a tuple with the CityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetCityCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CityCode) {
		return nil, false
	}
	return o.CityCode, true
}

// HasCityCode returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasCityCode() bool {
	if o != nil && !IsNil(o.CityCode) {
		return true
	}

	return false
}

// SetCityCode gets a reference to the given string and assigns it to the CityCode field.
func (o *AddressInfoDTO) SetCityCode(v string) {
	o.CityCode = &v
}

// GetCityName returns the CityName field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetCityName() string {
	if o == nil || IsNil(o.CityName) {
		var ret string
		return ret
	}
	return *o.CityName
}

// GetCityNameOk returns a tuple with the CityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetCityNameOk() (*string, bool) {
	if o == nil || IsNil(o.CityName) {
		return nil, false
	}
	return o.CityName, true
}

// HasCityName returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasCityName() bool {
	if o != nil && !IsNil(o.CityName) {
		return true
	}

	return false
}

// SetCityName gets a reference to the given string and assigns it to the CityName field.
func (o *AddressInfoDTO) SetCityName(v string) {
	o.CityName = &v
}

// GetCommunity returns the Community field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetCommunity() string {
	if o == nil || IsNil(o.Community) {
		var ret string
		return ret
	}
	return *o.Community
}

// GetCommunityOk returns a tuple with the Community field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetCommunityOk() (*string, bool) {
	if o == nil || IsNil(o.Community) {
		return nil, false
	}
	return o.Community, true
}

// HasCommunity returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasCommunity() bool {
	if o != nil && !IsNil(o.Community) {
		return true
	}

	return false
}

// SetCommunity gets a reference to the given string and assigns it to the Community field.
func (o *AddressInfoDTO) SetCommunity(v string) {
	o.Community = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetEnterpriseId() string {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret string
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetEnterpriseIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given string and assigns it to the EnterpriseId field.
func (o *AddressInfoDTO) SetEnterpriseId(v string) {
	o.EnterpriseId = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetLatitude() string {
	if o == nil || IsNil(o.Latitude) {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *AddressInfoDTO) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetLongitude() string {
	if o == nil || IsNil(o.Longitude) {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *AddressInfoDTO) SetLongitude(v string) {
	o.Longitude = &v
}

// GetMark returns the Mark field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetMark() string {
	if o == nil || IsNil(o.Mark) {
		var ret string
		return ret
	}
	return *o.Mark
}

// GetMarkOk returns a tuple with the Mark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetMarkOk() (*string, bool) {
	if o == nil || IsNil(o.Mark) {
		return nil, false
	}
	return o.Mark, true
}

// HasMark returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasMark() bool {
	if o != nil && !IsNil(o.Mark) {
		return true
	}

	return false
}

// SetMark gets a reference to the given string and assigns it to the Mark field.
func (o *AddressInfoDTO) SetMark(v string) {
	o.Mark = &v
}

// GetPoiId returns the PoiId field value if set, zero value otherwise.
func (o *AddressInfoDTO) GetPoiId() string {
	if o == nil || IsNil(o.PoiId) {
		var ret string
		return ret
	}
	return *o.PoiId
}

// GetPoiIdOk returns a tuple with the PoiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressInfoDTO) GetPoiIdOk() (*string, bool) {
	if o == nil || IsNil(o.PoiId) {
		return nil, false
	}
	return o.PoiId, true
}

// HasPoiId returns a boolean if a field has been set.
func (o *AddressInfoDTO) HasPoiId() bool {
	if o != nil && !IsNil(o.PoiId) {
		return true
	}

	return false
}

// SetPoiId gets a reference to the given string and assigns it to the PoiId field.
func (o *AddressInfoDTO) SetPoiId(v string) {
	o.PoiId = &v
}

func (o AddressInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AddressId) {
		toSerialize["address_id"] = o.AddressId
	}
	if !IsNil(o.CityCode) {
		toSerialize["city_code"] = o.CityCode
	}
	if !IsNil(o.CityName) {
		toSerialize["city_name"] = o.CityName
	}
	if !IsNil(o.Community) {
		toSerialize["community"] = o.Community
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.Mark) {
		toSerialize["mark"] = o.Mark
	}
	if !IsNil(o.PoiId) {
		toSerialize["poi_id"] = o.PoiId
	}
	return toSerialize, nil
}

type NullableAddressInfoDTO struct {
	value *AddressInfoDTO
	isSet bool
}

func (v NullableAddressInfoDTO) Get() *AddressInfoDTO {
	return v.value
}

func (v *NullableAddressInfoDTO) Set(val *AddressInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressInfoDTO(val *AddressInfoDTO) *NullableAddressInfoDTO {
	return &NullableAddressInfoDTO{value: val, isSet: true}
}

func (v NullableAddressInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

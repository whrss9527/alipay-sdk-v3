/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EmployeeDepartmentDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmployeeDepartmentDTO{}

// EmployeeDepartmentDTO struct for EmployeeDepartmentDTO
type EmployeeDepartmentDTO struct {
	// 部门id
	DepartmentId *string `json:"department_id,omitempty"`
	// 部门名称
	DepartmentName *string `json:"department_name,omitempty"`
}

// NewEmployeeDepartmentDTO instantiates a new EmployeeDepartmentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmployeeDepartmentDTO() *EmployeeDepartmentDTO {
	this := EmployeeDepartmentDTO{}
	return &this
}

// NewEmployeeDepartmentDTOWithDefaults instantiates a new EmployeeDepartmentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmployeeDepartmentDTOWithDefaults() *EmployeeDepartmentDTO {
	this := EmployeeDepartmentDTO{}
	return &this
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *EmployeeDepartmentDTO) GetDepartmentId() string {
	if o == nil || IsNil(o.DepartmentId) {
		var ret string
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeDepartmentDTO) GetDepartmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DepartmentId) {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *EmployeeDepartmentDTO) HasDepartmentId() bool {
	if o != nil && !IsNil(o.DepartmentId) {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given string and assigns it to the DepartmentId field.
func (o *EmployeeDepartmentDTO) SetDepartmentId(v string) {
	o.DepartmentId = &v
}

// GetDepartmentName returns the DepartmentName field value if set, zero value otherwise.
func (o *EmployeeDepartmentDTO) GetDepartmentName() string {
	if o == nil || IsNil(o.DepartmentName) {
		var ret string
		return ret
	}
	return *o.DepartmentName
}

// GetDepartmentNameOk returns a tuple with the DepartmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeDepartmentDTO) GetDepartmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.DepartmentName) {
		return nil, false
	}
	return o.DepartmentName, true
}

// HasDepartmentName returns a boolean if a field has been set.
func (o *EmployeeDepartmentDTO) HasDepartmentName() bool {
	if o != nil && !IsNil(o.DepartmentName) {
		return true
	}

	return false
}

// SetDepartmentName gets a reference to the given string and assigns it to the DepartmentName field.
func (o *EmployeeDepartmentDTO) SetDepartmentName(v string) {
	o.DepartmentName = &v
}

func (o EmployeeDepartmentDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmployeeDepartmentDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DepartmentId) {
		toSerialize["department_id"] = o.DepartmentId
	}
	if !IsNil(o.DepartmentName) {
		toSerialize["department_name"] = o.DepartmentName
	}
	return toSerialize, nil
}

type NullableEmployeeDepartmentDTO struct {
	value *EmployeeDepartmentDTO
	isSet bool
}

func (v NullableEmployeeDepartmentDTO) Get() *EmployeeDepartmentDTO {
	return v.value
}

func (v *NullableEmployeeDepartmentDTO) Set(val *EmployeeDepartmentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEmployeeDepartmentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEmployeeDepartmentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmployeeDepartmentDTO(val *EmployeeDepartmentDTO) *NullableEmployeeDepartmentDTO {
	return &NullableEmployeeDepartmentDTO{value: val, isSet: true}
}

func (v NullableEmployeeDepartmentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmployeeDepartmentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



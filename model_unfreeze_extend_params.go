/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UnfreezeExtendParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnfreezeExtendParams{}

// UnfreezeExtendParams struct for UnfreezeExtendParams
type UnfreezeExtendParams struct {
	// 退出类型
	QuitType *string `json:"quit_type,omitempty"`
	// 芝麻Go开始到到期过程中享受的优惠总金额
	TotalDiscountAmount *string `json:"total_discount_amount,omitempty"`
	// 芝麻Go开始到到期过程中任务相关支付的总金额。
	TotalRealPayAmount *string `json:"total_real_pay_amount,omitempty"`
	// 芝麻Go开始到到期过程中和任务相关的完成次数
	TotalTaskCount *string `json:"total_task_count,omitempty"`
}

// NewUnfreezeExtendParams instantiates a new UnfreezeExtendParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnfreezeExtendParams() *UnfreezeExtendParams {
	this := UnfreezeExtendParams{}
	return &this
}

// NewUnfreezeExtendParamsWithDefaults instantiates a new UnfreezeExtendParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnfreezeExtendParamsWithDefaults() *UnfreezeExtendParams {
	this := UnfreezeExtendParams{}
	return &this
}

// GetQuitType returns the QuitType field value if set, zero value otherwise.
func (o *UnfreezeExtendParams) GetQuitType() string {
	if o == nil || IsNil(o.QuitType) {
		var ret string
		return ret
	}
	return *o.QuitType
}

// GetQuitTypeOk returns a tuple with the QuitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnfreezeExtendParams) GetQuitTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QuitType) {
		return nil, false
	}
	return o.QuitType, true
}

// HasQuitType returns a boolean if a field has been set.
func (o *UnfreezeExtendParams) HasQuitType() bool {
	if o != nil && !IsNil(o.QuitType) {
		return true
	}

	return false
}

// SetQuitType gets a reference to the given string and assigns it to the QuitType field.
func (o *UnfreezeExtendParams) SetQuitType(v string) {
	o.QuitType = &v
}

// GetTotalDiscountAmount returns the TotalDiscountAmount field value if set, zero value otherwise.
func (o *UnfreezeExtendParams) GetTotalDiscountAmount() string {
	if o == nil || IsNil(o.TotalDiscountAmount) {
		var ret string
		return ret
	}
	return *o.TotalDiscountAmount
}

// GetTotalDiscountAmountOk returns a tuple with the TotalDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnfreezeExtendParams) GetTotalDiscountAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalDiscountAmount) {
		return nil, false
	}
	return o.TotalDiscountAmount, true
}

// HasTotalDiscountAmount returns a boolean if a field has been set.
func (o *UnfreezeExtendParams) HasTotalDiscountAmount() bool {
	if o != nil && !IsNil(o.TotalDiscountAmount) {
		return true
	}

	return false
}

// SetTotalDiscountAmount gets a reference to the given string and assigns it to the TotalDiscountAmount field.
func (o *UnfreezeExtendParams) SetTotalDiscountAmount(v string) {
	o.TotalDiscountAmount = &v
}

// GetTotalRealPayAmount returns the TotalRealPayAmount field value if set, zero value otherwise.
func (o *UnfreezeExtendParams) GetTotalRealPayAmount() string {
	if o == nil || IsNil(o.TotalRealPayAmount) {
		var ret string
		return ret
	}
	return *o.TotalRealPayAmount
}

// GetTotalRealPayAmountOk returns a tuple with the TotalRealPayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnfreezeExtendParams) GetTotalRealPayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalRealPayAmount) {
		return nil, false
	}
	return o.TotalRealPayAmount, true
}

// HasTotalRealPayAmount returns a boolean if a field has been set.
func (o *UnfreezeExtendParams) HasTotalRealPayAmount() bool {
	if o != nil && !IsNil(o.TotalRealPayAmount) {
		return true
	}

	return false
}

// SetTotalRealPayAmount gets a reference to the given string and assigns it to the TotalRealPayAmount field.
func (o *UnfreezeExtendParams) SetTotalRealPayAmount(v string) {
	o.TotalRealPayAmount = &v
}

// GetTotalTaskCount returns the TotalTaskCount field value if set, zero value otherwise.
func (o *UnfreezeExtendParams) GetTotalTaskCount() string {
	if o == nil || IsNil(o.TotalTaskCount) {
		var ret string
		return ret
	}
	return *o.TotalTaskCount
}

// GetTotalTaskCountOk returns a tuple with the TotalTaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnfreezeExtendParams) GetTotalTaskCountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalTaskCount) {
		return nil, false
	}
	return o.TotalTaskCount, true
}

// HasTotalTaskCount returns a boolean if a field has been set.
func (o *UnfreezeExtendParams) HasTotalTaskCount() bool {
	if o != nil && !IsNil(o.TotalTaskCount) {
		return true
	}

	return false
}

// SetTotalTaskCount gets a reference to the given string and assigns it to the TotalTaskCount field.
func (o *UnfreezeExtendParams) SetTotalTaskCount(v string) {
	o.TotalTaskCount = &v
}

func (o UnfreezeExtendParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnfreezeExtendParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuitType) {
		toSerialize["quit_type"] = o.QuitType
	}
	if !IsNil(o.TotalDiscountAmount) {
		toSerialize["total_discount_amount"] = o.TotalDiscountAmount
	}
	if !IsNil(o.TotalRealPayAmount) {
		toSerialize["total_real_pay_amount"] = o.TotalRealPayAmount
	}
	if !IsNil(o.TotalTaskCount) {
		toSerialize["total_task_count"] = o.TotalTaskCount
	}
	return toSerialize, nil
}

type NullableUnfreezeExtendParams struct {
	value *UnfreezeExtendParams
	isSet bool
}

func (v NullableUnfreezeExtendParams) Get() *UnfreezeExtendParams {
	return v.value
}

func (v *NullableUnfreezeExtendParams) Set(val *UnfreezeExtendParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUnfreezeExtendParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUnfreezeExtendParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnfreezeExtendParams(val *UnfreezeExtendParams) *NullableUnfreezeExtendParams {
	return &NullableUnfreezeExtendParams{value: val, isSet: true}
}

func (v NullableUnfreezeExtendParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnfreezeExtendParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



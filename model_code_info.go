/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the CodeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CodeInfo{}

// CodeInfo struct for CodeInfo
type CodeInfo struct {
	// 跳转URL，扫码关注服务窗后会直接跳转到此URL
	GotoUrl *string `json:"goto_url,omitempty"`
	Scene   *Scene  `json:"scene,omitempty"`
}

// NewCodeInfo instantiates a new CodeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeInfo() *CodeInfo {
	this := CodeInfo{}
	return &this
}

// NewCodeInfoWithDefaults instantiates a new CodeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeInfoWithDefaults() *CodeInfo {
	this := CodeInfo{}
	return &this
}

// GetGotoUrl returns the GotoUrl field value if set, zero value otherwise.
func (o *CodeInfo) GetGotoUrl() string {
	if o == nil || IsNil(o.GotoUrl) {
		var ret string
		return ret
	}
	return *o.GotoUrl
}

// GetGotoUrlOk returns a tuple with the GotoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeInfo) GetGotoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.GotoUrl) {
		return nil, false
	}
	return o.GotoUrl, true
}

// HasGotoUrl returns a boolean if a field has been set.
func (o *CodeInfo) HasGotoUrl() bool {
	if o != nil && !IsNil(o.GotoUrl) {
		return true
	}

	return false
}

// SetGotoUrl gets a reference to the given string and assigns it to the GotoUrl field.
func (o *CodeInfo) SetGotoUrl(v string) {
	o.GotoUrl = &v
}

// GetScene returns the Scene field value if set, zero value otherwise.
func (o *CodeInfo) GetScene() Scene {
	if o == nil || IsNil(o.Scene) {
		var ret Scene
		return ret
	}
	return *o.Scene
}

// GetSceneOk returns a tuple with the Scene field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeInfo) GetSceneOk() (*Scene, bool) {
	if o == nil || IsNil(o.Scene) {
		return nil, false
	}
	return o.Scene, true
}

// HasScene returns a boolean if a field has been set.
func (o *CodeInfo) HasScene() bool {
	if o != nil && !IsNil(o.Scene) {
		return true
	}

	return false
}

// SetScene gets a reference to the given Scene and assigns it to the Scene field.
func (o *CodeInfo) SetScene(v Scene) {
	o.Scene = &v
}

func (o CodeInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GotoUrl) {
		toSerialize["goto_url"] = o.GotoUrl
	}
	if !IsNil(o.Scene) {
		toSerialize["scene"] = o.Scene
	}
	return toSerialize, nil
}

type NullableCodeInfo struct {
	value *CodeInfo
	isSet bool
}

func (v NullableCodeInfo) Get() *CodeInfo {
	return v.value
}

func (v *NullableCodeInfo) Set(val *CodeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeInfo(val *CodeInfo) *NullableCodeInfo {
	return &NullableCodeInfo{value: val, isSet: true}
}

func (v NullableCodeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RefundGoodsDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefundGoodsDetail{}

// RefundGoodsDetail struct for RefundGoodsDetail
type RefundGoodsDetail struct {
	// 商品编号。 对应支付时传入的goods_id
	GoodsId *string `json:"goods_id,omitempty"`
	// 商家侧小程序商品ID，对应支付时传入的out_item_id
	OutItemId *string `json:"out_item_id,omitempty"`
	// 商家侧小程序商品sku ID，对应支付时传入的out_sku_id
	OutSkuId *string `json:"out_sku_id,omitempty"`
	// 该商品的退款总金额，单位为元
	RefundAmount *string `json:"refund_amount,omitempty"`
}

// NewRefundGoodsDetail instantiates a new RefundGoodsDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefundGoodsDetail() *RefundGoodsDetail {
	this := RefundGoodsDetail{}
	return &this
}

// NewRefundGoodsDetailWithDefaults instantiates a new RefundGoodsDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefundGoodsDetailWithDefaults() *RefundGoodsDetail {
	this := RefundGoodsDetail{}
	return &this
}

// GetGoodsId returns the GoodsId field value if set, zero value otherwise.
func (o *RefundGoodsDetail) GetGoodsId() string {
	if o == nil || IsNil(o.GoodsId) {
		var ret string
		return ret
	}
	return *o.GoodsId
}

// GetGoodsIdOk returns a tuple with the GoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundGoodsDetail) GetGoodsIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsId) {
		return nil, false
	}
	return o.GoodsId, true
}

// HasGoodsId returns a boolean if a field has been set.
func (o *RefundGoodsDetail) HasGoodsId() bool {
	if o != nil && !IsNil(o.GoodsId) {
		return true
	}

	return false
}

// SetGoodsId gets a reference to the given string and assigns it to the GoodsId field.
func (o *RefundGoodsDetail) SetGoodsId(v string) {
	o.GoodsId = &v
}

// GetOutItemId returns the OutItemId field value if set, zero value otherwise.
func (o *RefundGoodsDetail) GetOutItemId() string {
	if o == nil || IsNil(o.OutItemId) {
		var ret string
		return ret
	}
	return *o.OutItemId
}

// GetOutItemIdOk returns a tuple with the OutItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundGoodsDetail) GetOutItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutItemId) {
		return nil, false
	}
	return o.OutItemId, true
}

// HasOutItemId returns a boolean if a field has been set.
func (o *RefundGoodsDetail) HasOutItemId() bool {
	if o != nil && !IsNil(o.OutItemId) {
		return true
	}

	return false
}

// SetOutItemId gets a reference to the given string and assigns it to the OutItemId field.
func (o *RefundGoodsDetail) SetOutItemId(v string) {
	o.OutItemId = &v
}

// GetOutSkuId returns the OutSkuId field value if set, zero value otherwise.
func (o *RefundGoodsDetail) GetOutSkuId() string {
	if o == nil || IsNil(o.OutSkuId) {
		var ret string
		return ret
	}
	return *o.OutSkuId
}

// GetOutSkuIdOk returns a tuple with the OutSkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundGoodsDetail) GetOutSkuIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutSkuId) {
		return nil, false
	}
	return o.OutSkuId, true
}

// HasOutSkuId returns a boolean if a field has been set.
func (o *RefundGoodsDetail) HasOutSkuId() bool {
	if o != nil && !IsNil(o.OutSkuId) {
		return true
	}

	return false
}

// SetOutSkuId gets a reference to the given string and assigns it to the OutSkuId field.
func (o *RefundGoodsDetail) SetOutSkuId(v string) {
	o.OutSkuId = &v
}

// GetRefundAmount returns the RefundAmount field value if set, zero value otherwise.
func (o *RefundGoodsDetail) GetRefundAmount() string {
	if o == nil || IsNil(o.RefundAmount) {
		var ret string
		return ret
	}
	return *o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundGoodsDetail) GetRefundAmountOk() (*string, bool) {
	if o == nil || IsNil(o.RefundAmount) {
		return nil, false
	}
	return o.RefundAmount, true
}

// HasRefundAmount returns a boolean if a field has been set.
func (o *RefundGoodsDetail) HasRefundAmount() bool {
	if o != nil && !IsNil(o.RefundAmount) {
		return true
	}

	return false
}

// SetRefundAmount gets a reference to the given string and assigns it to the RefundAmount field.
func (o *RefundGoodsDetail) SetRefundAmount(v string) {
	o.RefundAmount = &v
}

func (o RefundGoodsDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefundGoodsDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoodsId) {
		toSerialize["goods_id"] = o.GoodsId
	}
	if !IsNil(o.OutItemId) {
		toSerialize["out_item_id"] = o.OutItemId
	}
	if !IsNil(o.OutSkuId) {
		toSerialize["out_sku_id"] = o.OutSkuId
	}
	if !IsNil(o.RefundAmount) {
		toSerialize["refund_amount"] = o.RefundAmount
	}
	return toSerialize, nil
}

type NullableRefundGoodsDetail struct {
	value *RefundGoodsDetail
	isSet bool
}

func (v NullableRefundGoodsDetail) Get() *RefundGoodsDetail {
	return v.value
}

func (v *NullableRefundGoodsDetail) Set(val *RefundGoodsDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableRefundGoodsDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableRefundGoodsDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefundGoodsDetail(val *RefundGoodsDetail) *NullableRefundGoodsDetail {
	return &NullableRefundGoodsDetail{value: val, isSet: true}
}

func (v NullableRefundGoodsDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefundGoodsDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



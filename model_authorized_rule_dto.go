/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the AuthorizedRuleDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizedRuleDTO{}

// AuthorizedRuleDTO struct for AuthorizedRuleDTO
type AuthorizedRuleDTO struct {
	// 授权商户列表
	AuthorizedDetailList []AuthorizeDetailDTO `json:"authorized_detail_list,omitempty"`
	// WHITELIST-白名单 ALL-全部
	AuthorizedType *string `json:"authorized_type,omitempty"`
}

// NewAuthorizedRuleDTO instantiates a new AuthorizedRuleDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizedRuleDTO() *AuthorizedRuleDTO {
	this := AuthorizedRuleDTO{}
	return &this
}

// NewAuthorizedRuleDTOWithDefaults instantiates a new AuthorizedRuleDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizedRuleDTOWithDefaults() *AuthorizedRuleDTO {
	this := AuthorizedRuleDTO{}
	return &this
}

// GetAuthorizedDetailList returns the AuthorizedDetailList field value if set, zero value otherwise.
func (o *AuthorizedRuleDTO) GetAuthorizedDetailList() []AuthorizeDetailDTO {
	if o == nil || IsNil(o.AuthorizedDetailList) {
		var ret []AuthorizeDetailDTO
		return ret
	}
	return o.AuthorizedDetailList
}

// GetAuthorizedDetailListOk returns a tuple with the AuthorizedDetailList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedRuleDTO) GetAuthorizedDetailListOk() ([]AuthorizeDetailDTO, bool) {
	if o == nil || IsNil(o.AuthorizedDetailList) {
		return nil, false
	}
	return o.AuthorizedDetailList, true
}

// HasAuthorizedDetailList returns a boolean if a field has been set.
func (o *AuthorizedRuleDTO) HasAuthorizedDetailList() bool {
	if o != nil && !IsNil(o.AuthorizedDetailList) {
		return true
	}

	return false
}

// SetAuthorizedDetailList gets a reference to the given []AuthorizeDetailDTO and assigns it to the AuthorizedDetailList field.
func (o *AuthorizedRuleDTO) SetAuthorizedDetailList(v []AuthorizeDetailDTO) {
	o.AuthorizedDetailList = v
}

// GetAuthorizedType returns the AuthorizedType field value if set, zero value otherwise.
func (o *AuthorizedRuleDTO) GetAuthorizedType() string {
	if o == nil || IsNil(o.AuthorizedType) {
		var ret string
		return ret
	}
	return *o.AuthorizedType
}

// GetAuthorizedTypeOk returns a tuple with the AuthorizedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedRuleDTO) GetAuthorizedTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizedType) {
		return nil, false
	}
	return o.AuthorizedType, true
}

// HasAuthorizedType returns a boolean if a field has been set.
func (o *AuthorizedRuleDTO) HasAuthorizedType() bool {
	if o != nil && !IsNil(o.AuthorizedType) {
		return true
	}

	return false
}

// SetAuthorizedType gets a reference to the given string and assigns it to the AuthorizedType field.
func (o *AuthorizedRuleDTO) SetAuthorizedType(v string) {
	o.AuthorizedType = &v
}

func (o AuthorizedRuleDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizedRuleDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizedDetailList) {
		toSerialize["authorized_detail_list"] = o.AuthorizedDetailList
	}
	if !IsNil(o.AuthorizedType) {
		toSerialize["authorized_type"] = o.AuthorizedType
	}
	return toSerialize, nil
}

type NullableAuthorizedRuleDTO struct {
	value *AuthorizedRuleDTO
	isSet bool
}

func (v NullableAuthorizedRuleDTO) Get() *AuthorizedRuleDTO {
	return v.value
}

func (v *NullableAuthorizedRuleDTO) Set(val *AuthorizedRuleDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizedRuleDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizedRuleDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizedRuleDTO(val *AuthorizedRuleDTO) *NullableAuthorizedRuleDTO {
	return &NullableAuthorizedRuleDTO{value: val, isSet: true}
}

func (v NullableAuthorizedRuleDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizedRuleDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

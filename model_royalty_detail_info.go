/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoyaltyDetailInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoyaltyDetailInfo{}

// RoyaltyDetailInfo struct for RoyaltyDetailInfo
type RoyaltyDetailInfo struct {
	// 分账金额，单位为元
	Amount *string `json:"amount,omitempty"`
	// 分账描述
	Desc *string `json:"desc,omitempty"`
	// 分账场景，目前仅支持5中类型，RETURN_MONEY(垫资还款), CHARGE（费用）, REPLENISH（补贴），FUND_TRANS_IN_SWITCHING（存量资金搬迁），PUNISHMENT（处罚）
	Scene *string `json:"scene,omitempty"`
	// 分账转入账户id。当分账账户id类型是cardSerialNo时，本参数为用户在支付宝绑定的卡编号；当分账账户id类型是userId时，本参数为用户的支付宝账号对应的支付宝唯一用户号；当分账账户id类型是loginName时，本参数为用户的支付宝登录号;当分账账户id类型是openId时，本参数为用户的在该应用下的支付宝OpenId; 当 trans_in_account_type 为defaultSettle时，本参数必须为空
	TransInAccountId *string `json:"trans_in_account_id,omitempty"`
	// 分账转入账户id类型。 当trans_in_account_type 为bankCard时，本参数为cardSerialNo，表示分账账户id是银行卡编号; 当trans_in_account_type 为alipayBalance时，本参数为userId或者loginName或者openId，其中userId表示分账账户id是支付宝唯一用户号，loginName表示分账账户id是支付宝登录号，openId表示分账账户id是支付宝OpenId; 当 trans_in_account_type 为 defaultSettle 时，本参数必须为空。
	TransInAccountIdType *string `json:"trans_in_account_id_type,omitempty"`
	// 分账账户类型。 bankCard: 分账账户为银行卡； alipayBalance: 分账账户为支付宝余额户; defaultSettle: 按默认结算规则分账
	TransInAccountType *string `json:"trans_in_account_type,omitempty"`
	// 分账账户业务类型，目前仅支持已结算类型 settled
	TransInEntityBizType *string `json:"trans_in_entity_biz_type,omitempty"`
	// 分账转出主体账 号。    当分账转出主体类型为SecondMerchant，本参数为二级商户的SecondMerchantID    当分账转出类型为Store，本参数为StoreID
	TransInEntityId *string `json:"trans_in_entity_id,omitempty"`
	// 分账转入主体类型。 SecondMerchant：分账转入主体为二级商户 Store: 分账转入主体为门店
	TransInEntityType *string `json:"trans_in_entity_type,omitempty"`
	TransInSubMerchant *SubMerchant `json:"trans_in_sub_merchant,omitempty"`
	// 分账转出方主体业务类型，目前仅支持已结算类型 settled
	TransOutEntityBizType *string `json:"trans_out_entity_biz_type,omitempty"`
	// 分账转出主体账。    当分账转出主体类型为SecondMerchant，本参数为二级商户的SecondMerchantId    当分账转出类型为Store，本参数为StoreID
	TransOutEntityId *string `json:"trans_out_entity_id,omitempty"`
	// 分账转出主体类型。 SecondMerchant：结算主体为二级商户 Store: 结算主体为门店
	TransOutEntityType *string `json:"trans_out_entity_type,omitempty"`
	TransOutSubMerchant *SubMerchant `json:"trans_out_sub_merchant,omitempty"`
}

// NewRoyaltyDetailInfo instantiates a new RoyaltyDetailInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoyaltyDetailInfo() *RoyaltyDetailInfo {
	this := RoyaltyDetailInfo{}
	return &this
}

// NewRoyaltyDetailInfoWithDefaults instantiates a new RoyaltyDetailInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoyaltyDetailInfoWithDefaults() *RoyaltyDetailInfo {
	this := RoyaltyDetailInfo{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *RoyaltyDetailInfo) SetAmount(v string) {
	o.Amount = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *RoyaltyDetailInfo) SetDesc(v string) {
	o.Desc = &v
}

// GetScene returns the Scene field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetScene() string {
	if o == nil || IsNil(o.Scene) {
		var ret string
		return ret
	}
	return *o.Scene
}

// GetSceneOk returns a tuple with the Scene field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetSceneOk() (*string, bool) {
	if o == nil || IsNil(o.Scene) {
		return nil, false
	}
	return o.Scene, true
}

// HasScene returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasScene() bool {
	if o != nil && !IsNil(o.Scene) {
		return true
	}

	return false
}

// SetScene gets a reference to the given string and assigns it to the Scene field.
func (o *RoyaltyDetailInfo) SetScene(v string) {
	o.Scene = &v
}

// GetTransInAccountId returns the TransInAccountId field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInAccountId() string {
	if o == nil || IsNil(o.TransInAccountId) {
		var ret string
		return ret
	}
	return *o.TransInAccountId
}

// GetTransInAccountIdOk returns a tuple with the TransInAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountId) {
		return nil, false
	}
	return o.TransInAccountId, true
}

// HasTransInAccountId returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInAccountId() bool {
	if o != nil && !IsNil(o.TransInAccountId) {
		return true
	}

	return false
}

// SetTransInAccountId gets a reference to the given string and assigns it to the TransInAccountId field.
func (o *RoyaltyDetailInfo) SetTransInAccountId(v string) {
	o.TransInAccountId = &v
}

// GetTransInAccountIdType returns the TransInAccountIdType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInAccountIdType() string {
	if o == nil || IsNil(o.TransInAccountIdType) {
		var ret string
		return ret
	}
	return *o.TransInAccountIdType
}

// GetTransInAccountIdTypeOk returns a tuple with the TransInAccountIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInAccountIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountIdType) {
		return nil, false
	}
	return o.TransInAccountIdType, true
}

// HasTransInAccountIdType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInAccountIdType() bool {
	if o != nil && !IsNil(o.TransInAccountIdType) {
		return true
	}

	return false
}

// SetTransInAccountIdType gets a reference to the given string and assigns it to the TransInAccountIdType field.
func (o *RoyaltyDetailInfo) SetTransInAccountIdType(v string) {
	o.TransInAccountIdType = &v
}

// GetTransInAccountType returns the TransInAccountType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInAccountType() string {
	if o == nil || IsNil(o.TransInAccountType) {
		var ret string
		return ret
	}
	return *o.TransInAccountType
}

// GetTransInAccountTypeOk returns a tuple with the TransInAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInAccountType) {
		return nil, false
	}
	return o.TransInAccountType, true
}

// HasTransInAccountType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInAccountType() bool {
	if o != nil && !IsNil(o.TransInAccountType) {
		return true
	}

	return false
}

// SetTransInAccountType gets a reference to the given string and assigns it to the TransInAccountType field.
func (o *RoyaltyDetailInfo) SetTransInAccountType(v string) {
	o.TransInAccountType = &v
}

// GetTransInEntityBizType returns the TransInEntityBizType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInEntityBizType() string {
	if o == nil || IsNil(o.TransInEntityBizType) {
		var ret string
		return ret
	}
	return *o.TransInEntityBizType
}

// GetTransInEntityBizTypeOk returns a tuple with the TransInEntityBizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInEntityBizTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInEntityBizType) {
		return nil, false
	}
	return o.TransInEntityBizType, true
}

// HasTransInEntityBizType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInEntityBizType() bool {
	if o != nil && !IsNil(o.TransInEntityBizType) {
		return true
	}

	return false
}

// SetTransInEntityBizType gets a reference to the given string and assigns it to the TransInEntityBizType field.
func (o *RoyaltyDetailInfo) SetTransInEntityBizType(v string) {
	o.TransInEntityBizType = &v
}

// GetTransInEntityId returns the TransInEntityId field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInEntityId() string {
	if o == nil || IsNil(o.TransInEntityId) {
		var ret string
		return ret
	}
	return *o.TransInEntityId
}

// GetTransInEntityIdOk returns a tuple with the TransInEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransInEntityId) {
		return nil, false
	}
	return o.TransInEntityId, true
}

// HasTransInEntityId returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInEntityId() bool {
	if o != nil && !IsNil(o.TransInEntityId) {
		return true
	}

	return false
}

// SetTransInEntityId gets a reference to the given string and assigns it to the TransInEntityId field.
func (o *RoyaltyDetailInfo) SetTransInEntityId(v string) {
	o.TransInEntityId = &v
}

// GetTransInEntityType returns the TransInEntityType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInEntityType() string {
	if o == nil || IsNil(o.TransInEntityType) {
		var ret string
		return ret
	}
	return *o.TransInEntityType
}

// GetTransInEntityTypeOk returns a tuple with the TransInEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransInEntityType) {
		return nil, false
	}
	return o.TransInEntityType, true
}

// HasTransInEntityType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInEntityType() bool {
	if o != nil && !IsNil(o.TransInEntityType) {
		return true
	}

	return false
}

// SetTransInEntityType gets a reference to the given string and assigns it to the TransInEntityType field.
func (o *RoyaltyDetailInfo) SetTransInEntityType(v string) {
	o.TransInEntityType = &v
}

// GetTransInSubMerchant returns the TransInSubMerchant field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransInSubMerchant() SubMerchant {
	if o == nil || IsNil(o.TransInSubMerchant) {
		var ret SubMerchant
		return ret
	}
	return *o.TransInSubMerchant
}

// GetTransInSubMerchantOk returns a tuple with the TransInSubMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransInSubMerchantOk() (*SubMerchant, bool) {
	if o == nil || IsNil(o.TransInSubMerchant) {
		return nil, false
	}
	return o.TransInSubMerchant, true
}

// HasTransInSubMerchant returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransInSubMerchant() bool {
	if o != nil && !IsNil(o.TransInSubMerchant) {
		return true
	}

	return false
}

// SetTransInSubMerchant gets a reference to the given SubMerchant and assigns it to the TransInSubMerchant field.
func (o *RoyaltyDetailInfo) SetTransInSubMerchant(v SubMerchant) {
	o.TransInSubMerchant = &v
}

// GetTransOutEntityBizType returns the TransOutEntityBizType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransOutEntityBizType() string {
	if o == nil || IsNil(o.TransOutEntityBizType) {
		var ret string
		return ret
	}
	return *o.TransOutEntityBizType
}

// GetTransOutEntityBizTypeOk returns a tuple with the TransOutEntityBizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransOutEntityBizTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutEntityBizType) {
		return nil, false
	}
	return o.TransOutEntityBizType, true
}

// HasTransOutEntityBizType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransOutEntityBizType() bool {
	if o != nil && !IsNil(o.TransOutEntityBizType) {
		return true
	}

	return false
}

// SetTransOutEntityBizType gets a reference to the given string and assigns it to the TransOutEntityBizType field.
func (o *RoyaltyDetailInfo) SetTransOutEntityBizType(v string) {
	o.TransOutEntityBizType = &v
}

// GetTransOutEntityId returns the TransOutEntityId field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransOutEntityId() string {
	if o == nil || IsNil(o.TransOutEntityId) {
		var ret string
		return ret
	}
	return *o.TransOutEntityId
}

// GetTransOutEntityIdOk returns a tuple with the TransOutEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransOutEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutEntityId) {
		return nil, false
	}
	return o.TransOutEntityId, true
}

// HasTransOutEntityId returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransOutEntityId() bool {
	if o != nil && !IsNil(o.TransOutEntityId) {
		return true
	}

	return false
}

// SetTransOutEntityId gets a reference to the given string and assigns it to the TransOutEntityId field.
func (o *RoyaltyDetailInfo) SetTransOutEntityId(v string) {
	o.TransOutEntityId = &v
}

// GetTransOutEntityType returns the TransOutEntityType field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransOutEntityType() string {
	if o == nil || IsNil(o.TransOutEntityType) {
		var ret string
		return ret
	}
	return *o.TransOutEntityType
}

// GetTransOutEntityTypeOk returns a tuple with the TransOutEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransOutEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutEntityType) {
		return nil, false
	}
	return o.TransOutEntityType, true
}

// HasTransOutEntityType returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransOutEntityType() bool {
	if o != nil && !IsNil(o.TransOutEntityType) {
		return true
	}

	return false
}

// SetTransOutEntityType gets a reference to the given string and assigns it to the TransOutEntityType field.
func (o *RoyaltyDetailInfo) SetTransOutEntityType(v string) {
	o.TransOutEntityType = &v
}

// GetTransOutSubMerchant returns the TransOutSubMerchant field value if set, zero value otherwise.
func (o *RoyaltyDetailInfo) GetTransOutSubMerchant() SubMerchant {
	if o == nil || IsNil(o.TransOutSubMerchant) {
		var ret SubMerchant
		return ret
	}
	return *o.TransOutSubMerchant
}

// GetTransOutSubMerchantOk returns a tuple with the TransOutSubMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoyaltyDetailInfo) GetTransOutSubMerchantOk() (*SubMerchant, bool) {
	if o == nil || IsNil(o.TransOutSubMerchant) {
		return nil, false
	}
	return o.TransOutSubMerchant, true
}

// HasTransOutSubMerchant returns a boolean if a field has been set.
func (o *RoyaltyDetailInfo) HasTransOutSubMerchant() bool {
	if o != nil && !IsNil(o.TransOutSubMerchant) {
		return true
	}

	return false
}

// SetTransOutSubMerchant gets a reference to the given SubMerchant and assigns it to the TransOutSubMerchant field.
func (o *RoyaltyDetailInfo) SetTransOutSubMerchant(v SubMerchant) {
	o.TransOutSubMerchant = &v
}

func (o RoyaltyDetailInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoyaltyDetailInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Scene) {
		toSerialize["scene"] = o.Scene
	}
	if !IsNil(o.TransInAccountId) {
		toSerialize["trans_in_account_id"] = o.TransInAccountId
	}
	if !IsNil(o.TransInAccountIdType) {
		toSerialize["trans_in_account_id_type"] = o.TransInAccountIdType
	}
	if !IsNil(o.TransInAccountType) {
		toSerialize["trans_in_account_type"] = o.TransInAccountType
	}
	if !IsNil(o.TransInEntityBizType) {
		toSerialize["trans_in_entity_biz_type"] = o.TransInEntityBizType
	}
	if !IsNil(o.TransInEntityId) {
		toSerialize["trans_in_entity_id"] = o.TransInEntityId
	}
	if !IsNil(o.TransInEntityType) {
		toSerialize["trans_in_entity_type"] = o.TransInEntityType
	}
	if !IsNil(o.TransInSubMerchant) {
		toSerialize["trans_in_sub_merchant"] = o.TransInSubMerchant
	}
	if !IsNil(o.TransOutEntityBizType) {
		toSerialize["trans_out_entity_biz_type"] = o.TransOutEntityBizType
	}
	if !IsNil(o.TransOutEntityId) {
		toSerialize["trans_out_entity_id"] = o.TransOutEntityId
	}
	if !IsNil(o.TransOutEntityType) {
		toSerialize["trans_out_entity_type"] = o.TransOutEntityType
	}
	if !IsNil(o.TransOutSubMerchant) {
		toSerialize["trans_out_sub_merchant"] = o.TransOutSubMerchant
	}
	return toSerialize, nil
}

type NullableRoyaltyDetailInfo struct {
	value *RoyaltyDetailInfo
	isSet bool
}

func (v NullableRoyaltyDetailInfo) Get() *RoyaltyDetailInfo {
	return v.value
}

func (v *NullableRoyaltyDetailInfo) Set(val *RoyaltyDetailInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRoyaltyDetailInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRoyaltyDetailInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoyaltyDetailInfo(val *RoyaltyDetailInfo) *NullableRoyaltyDetailInfo {
	return &NullableRoyaltyDetailInfo{value: val, isSet: true}
}

func (v NullableRoyaltyDetailInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoyaltyDetailInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



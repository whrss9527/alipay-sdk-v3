/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TicketOrderInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TicketOrderInfo{}

// TicketOrderInfo struct for TicketOrderInfo
type TicketOrderInfo struct {
	Arrival *JourneyLocation `json:"arrival,omitempty"`
	// 凭证内容
	Content *string `json:"content,omitempty"`
	Departure *JourneyLocation `json:"departure,omitempty"`
	// 凭证有效数
	EffectiveNum *int32 `json:"effective_num,omitempty"`
	// 凭证结束时间
	EndTime *string `json:"end_time,omitempty"`
	// 扩展信息
	ExtInfo []OrderExtInfo `json:"ext_info,omitempty"`
	// 票面价
	FaceValue *string `json:"face_value,omitempty"`
	// 功能服务信息
	FunctionalServices []FunctionalService `json:"functional_services,omitempty"`
	// 凭证失效原因
	InvalidReason *string `json:"invalid_reason,omitempty"`
	// 凭证可使用地点
	Locations []JourneyLocation `json:"locations,omitempty"`
	// 商户侧凭证ID或核销码
	MerchantTicketNo *string `json:"merchant_ticket_no,omitempty"`
	// 座位信息
	SeatInfos []SeatInfo `json:"seat_infos,omitempty"`
	ServiceProvider *OrderParticipantInfo `json:"service_provider,omitempty"`
	// 凭证可使用门店列表
	Shops []OrderShopInfo `json:"shops,omitempty"`
	// 凭证开始时间
	StartTime *string `json:"start_time,omitempty"`
	// 凭证状态
	Status *string `json:"status,omitempty"`
	// 凭证创建时间
	TicketCreateTime *string `json:"ticket_create_time,omitempty"`
	// 凭证修改时间
	TicketModifyTime *string `json:"ticket_modify_time,omitempty"`
	// 凭证购买数
	TicketNum *int32 `json:"ticket_num,omitempty"`
	// 凭证使用者信息
	TicketUsers []UserInfomation `json:"ticket_users,omitempty"`
	// 凭证标题
	Title *string `json:"title,omitempty"`
	VehicleInfo *OrderVehicleInfo `json:"vehicle_info,omitempty"`
}

// NewTicketOrderInfo instantiates a new TicketOrderInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketOrderInfo() *TicketOrderInfo {
	this := TicketOrderInfo{}
	return &this
}

// NewTicketOrderInfoWithDefaults instantiates a new TicketOrderInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketOrderInfoWithDefaults() *TicketOrderInfo {
	this := TicketOrderInfo{}
	return &this
}

// GetArrival returns the Arrival field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetArrival() JourneyLocation {
	if o == nil || IsNil(o.Arrival) {
		var ret JourneyLocation
		return ret
	}
	return *o.Arrival
}

// GetArrivalOk returns a tuple with the Arrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetArrivalOk() (*JourneyLocation, bool) {
	if o == nil || IsNil(o.Arrival) {
		return nil, false
	}
	return o.Arrival, true
}

// HasArrival returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasArrival() bool {
	if o != nil && !IsNil(o.Arrival) {
		return true
	}

	return false
}

// SetArrival gets a reference to the given JourneyLocation and assigns it to the Arrival field.
func (o *TicketOrderInfo) SetArrival(v JourneyLocation) {
	o.Arrival = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *TicketOrderInfo) SetContent(v string) {
	o.Content = &v
}

// GetDeparture returns the Departure field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetDeparture() JourneyLocation {
	if o == nil || IsNil(o.Departure) {
		var ret JourneyLocation
		return ret
	}
	return *o.Departure
}

// GetDepartureOk returns a tuple with the Departure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetDepartureOk() (*JourneyLocation, bool) {
	if o == nil || IsNil(o.Departure) {
		return nil, false
	}
	return o.Departure, true
}

// HasDeparture returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasDeparture() bool {
	if o != nil && !IsNil(o.Departure) {
		return true
	}

	return false
}

// SetDeparture gets a reference to the given JourneyLocation and assigns it to the Departure field.
func (o *TicketOrderInfo) SetDeparture(v JourneyLocation) {
	o.Departure = &v
}

// GetEffectiveNum returns the EffectiveNum field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetEffectiveNum() int32 {
	if o == nil || IsNil(o.EffectiveNum) {
		var ret int32
		return ret
	}
	return *o.EffectiveNum
}

// GetEffectiveNumOk returns a tuple with the EffectiveNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetEffectiveNumOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectiveNum) {
		return nil, false
	}
	return o.EffectiveNum, true
}

// HasEffectiveNum returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasEffectiveNum() bool {
	if o != nil && !IsNil(o.EffectiveNum) {
		return true
	}

	return false
}

// SetEffectiveNum gets a reference to the given int32 and assigns it to the EffectiveNum field.
func (o *TicketOrderInfo) SetEffectiveNum(v int32) {
	o.EffectiveNum = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *TicketOrderInfo) SetEndTime(v string) {
	o.EndTime = &v
}

// GetExtInfo returns the ExtInfo field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetExtInfo() []OrderExtInfo {
	if o == nil || IsNil(o.ExtInfo) {
		var ret []OrderExtInfo
		return ret
	}
	return o.ExtInfo
}

// GetExtInfoOk returns a tuple with the ExtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetExtInfoOk() ([]OrderExtInfo, bool) {
	if o == nil || IsNil(o.ExtInfo) {
		return nil, false
	}
	return o.ExtInfo, true
}

// HasExtInfo returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasExtInfo() bool {
	if o != nil && !IsNil(o.ExtInfo) {
		return true
	}

	return false
}

// SetExtInfo gets a reference to the given []OrderExtInfo and assigns it to the ExtInfo field.
func (o *TicketOrderInfo) SetExtInfo(v []OrderExtInfo) {
	o.ExtInfo = v
}

// GetFaceValue returns the FaceValue field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetFaceValue() string {
	if o == nil || IsNil(o.FaceValue) {
		var ret string
		return ret
	}
	return *o.FaceValue
}

// GetFaceValueOk returns a tuple with the FaceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetFaceValueOk() (*string, bool) {
	if o == nil || IsNil(o.FaceValue) {
		return nil, false
	}
	return o.FaceValue, true
}

// HasFaceValue returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasFaceValue() bool {
	if o != nil && !IsNil(o.FaceValue) {
		return true
	}

	return false
}

// SetFaceValue gets a reference to the given string and assigns it to the FaceValue field.
func (o *TicketOrderInfo) SetFaceValue(v string) {
	o.FaceValue = &v
}

// GetFunctionalServices returns the FunctionalServices field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetFunctionalServices() []FunctionalService {
	if o == nil || IsNil(o.FunctionalServices) {
		var ret []FunctionalService
		return ret
	}
	return o.FunctionalServices
}

// GetFunctionalServicesOk returns a tuple with the FunctionalServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetFunctionalServicesOk() ([]FunctionalService, bool) {
	if o == nil || IsNil(o.FunctionalServices) {
		return nil, false
	}
	return o.FunctionalServices, true
}

// HasFunctionalServices returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasFunctionalServices() bool {
	if o != nil && !IsNil(o.FunctionalServices) {
		return true
	}

	return false
}

// SetFunctionalServices gets a reference to the given []FunctionalService and assigns it to the FunctionalServices field.
func (o *TicketOrderInfo) SetFunctionalServices(v []FunctionalService) {
	o.FunctionalServices = v
}

// GetInvalidReason returns the InvalidReason field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetInvalidReason() string {
	if o == nil || IsNil(o.InvalidReason) {
		var ret string
		return ret
	}
	return *o.InvalidReason
}

// GetInvalidReasonOk returns a tuple with the InvalidReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetInvalidReasonOk() (*string, bool) {
	if o == nil || IsNil(o.InvalidReason) {
		return nil, false
	}
	return o.InvalidReason, true
}

// HasInvalidReason returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasInvalidReason() bool {
	if o != nil && !IsNil(o.InvalidReason) {
		return true
	}

	return false
}

// SetInvalidReason gets a reference to the given string and assigns it to the InvalidReason field.
func (o *TicketOrderInfo) SetInvalidReason(v string) {
	o.InvalidReason = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetLocations() []JourneyLocation {
	if o == nil || IsNil(o.Locations) {
		var ret []JourneyLocation
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetLocationsOk() ([]JourneyLocation, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []JourneyLocation and assigns it to the Locations field.
func (o *TicketOrderInfo) SetLocations(v []JourneyLocation) {
	o.Locations = v
}

// GetMerchantTicketNo returns the MerchantTicketNo field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetMerchantTicketNo() string {
	if o == nil || IsNil(o.MerchantTicketNo) {
		var ret string
		return ret
	}
	return *o.MerchantTicketNo
}

// GetMerchantTicketNoOk returns a tuple with the MerchantTicketNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetMerchantTicketNoOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantTicketNo) {
		return nil, false
	}
	return o.MerchantTicketNo, true
}

// HasMerchantTicketNo returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasMerchantTicketNo() bool {
	if o != nil && !IsNil(o.MerchantTicketNo) {
		return true
	}

	return false
}

// SetMerchantTicketNo gets a reference to the given string and assigns it to the MerchantTicketNo field.
func (o *TicketOrderInfo) SetMerchantTicketNo(v string) {
	o.MerchantTicketNo = &v
}

// GetSeatInfos returns the SeatInfos field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetSeatInfos() []SeatInfo {
	if o == nil || IsNil(o.SeatInfos) {
		var ret []SeatInfo
		return ret
	}
	return o.SeatInfos
}

// GetSeatInfosOk returns a tuple with the SeatInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetSeatInfosOk() ([]SeatInfo, bool) {
	if o == nil || IsNil(o.SeatInfos) {
		return nil, false
	}
	return o.SeatInfos, true
}

// HasSeatInfos returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasSeatInfos() bool {
	if o != nil && !IsNil(o.SeatInfos) {
		return true
	}

	return false
}

// SetSeatInfos gets a reference to the given []SeatInfo and assigns it to the SeatInfos field.
func (o *TicketOrderInfo) SetSeatInfos(v []SeatInfo) {
	o.SeatInfos = v
}

// GetServiceProvider returns the ServiceProvider field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetServiceProvider() OrderParticipantInfo {
	if o == nil || IsNil(o.ServiceProvider) {
		var ret OrderParticipantInfo
		return ret
	}
	return *o.ServiceProvider
}

// GetServiceProviderOk returns a tuple with the ServiceProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetServiceProviderOk() (*OrderParticipantInfo, bool) {
	if o == nil || IsNil(o.ServiceProvider) {
		return nil, false
	}
	return o.ServiceProvider, true
}

// HasServiceProvider returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasServiceProvider() bool {
	if o != nil && !IsNil(o.ServiceProvider) {
		return true
	}

	return false
}

// SetServiceProvider gets a reference to the given OrderParticipantInfo and assigns it to the ServiceProvider field.
func (o *TicketOrderInfo) SetServiceProvider(v OrderParticipantInfo) {
	o.ServiceProvider = &v
}

// GetShops returns the Shops field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetShops() []OrderShopInfo {
	if o == nil || IsNil(o.Shops) {
		var ret []OrderShopInfo
		return ret
	}
	return o.Shops
}

// GetShopsOk returns a tuple with the Shops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetShopsOk() ([]OrderShopInfo, bool) {
	if o == nil || IsNil(o.Shops) {
		return nil, false
	}
	return o.Shops, true
}

// HasShops returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasShops() bool {
	if o != nil && !IsNil(o.Shops) {
		return true
	}

	return false
}

// SetShops gets a reference to the given []OrderShopInfo and assigns it to the Shops field.
func (o *TicketOrderInfo) SetShops(v []OrderShopInfo) {
	o.Shops = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *TicketOrderInfo) SetStartTime(v string) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TicketOrderInfo) SetStatus(v string) {
	o.Status = &v
}

// GetTicketCreateTime returns the TicketCreateTime field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetTicketCreateTime() string {
	if o == nil || IsNil(o.TicketCreateTime) {
		var ret string
		return ret
	}
	return *o.TicketCreateTime
}

// GetTicketCreateTimeOk returns a tuple with the TicketCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetTicketCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TicketCreateTime) {
		return nil, false
	}
	return o.TicketCreateTime, true
}

// HasTicketCreateTime returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasTicketCreateTime() bool {
	if o != nil && !IsNil(o.TicketCreateTime) {
		return true
	}

	return false
}

// SetTicketCreateTime gets a reference to the given string and assigns it to the TicketCreateTime field.
func (o *TicketOrderInfo) SetTicketCreateTime(v string) {
	o.TicketCreateTime = &v
}

// GetTicketModifyTime returns the TicketModifyTime field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetTicketModifyTime() string {
	if o == nil || IsNil(o.TicketModifyTime) {
		var ret string
		return ret
	}
	return *o.TicketModifyTime
}

// GetTicketModifyTimeOk returns a tuple with the TicketModifyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetTicketModifyTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TicketModifyTime) {
		return nil, false
	}
	return o.TicketModifyTime, true
}

// HasTicketModifyTime returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasTicketModifyTime() bool {
	if o != nil && !IsNil(o.TicketModifyTime) {
		return true
	}

	return false
}

// SetTicketModifyTime gets a reference to the given string and assigns it to the TicketModifyTime field.
func (o *TicketOrderInfo) SetTicketModifyTime(v string) {
	o.TicketModifyTime = &v
}

// GetTicketNum returns the TicketNum field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetTicketNum() int32 {
	if o == nil || IsNil(o.TicketNum) {
		var ret int32
		return ret
	}
	return *o.TicketNum
}

// GetTicketNumOk returns a tuple with the TicketNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetTicketNumOk() (*int32, bool) {
	if o == nil || IsNil(o.TicketNum) {
		return nil, false
	}
	return o.TicketNum, true
}

// HasTicketNum returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasTicketNum() bool {
	if o != nil && !IsNil(o.TicketNum) {
		return true
	}

	return false
}

// SetTicketNum gets a reference to the given int32 and assigns it to the TicketNum field.
func (o *TicketOrderInfo) SetTicketNum(v int32) {
	o.TicketNum = &v
}

// GetTicketUsers returns the TicketUsers field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetTicketUsers() []UserInfomation {
	if o == nil || IsNil(o.TicketUsers) {
		var ret []UserInfomation
		return ret
	}
	return o.TicketUsers
}

// GetTicketUsersOk returns a tuple with the TicketUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetTicketUsersOk() ([]UserInfomation, bool) {
	if o == nil || IsNil(o.TicketUsers) {
		return nil, false
	}
	return o.TicketUsers, true
}

// HasTicketUsers returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasTicketUsers() bool {
	if o != nil && !IsNil(o.TicketUsers) {
		return true
	}

	return false
}

// SetTicketUsers gets a reference to the given []UserInfomation and assigns it to the TicketUsers field.
func (o *TicketOrderInfo) SetTicketUsers(v []UserInfomation) {
	o.TicketUsers = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TicketOrderInfo) SetTitle(v string) {
	o.Title = &v
}

// GetVehicleInfo returns the VehicleInfo field value if set, zero value otherwise.
func (o *TicketOrderInfo) GetVehicleInfo() OrderVehicleInfo {
	if o == nil || IsNil(o.VehicleInfo) {
		var ret OrderVehicleInfo
		return ret
	}
	return *o.VehicleInfo
}

// GetVehicleInfoOk returns a tuple with the VehicleInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketOrderInfo) GetVehicleInfoOk() (*OrderVehicleInfo, bool) {
	if o == nil || IsNil(o.VehicleInfo) {
		return nil, false
	}
	return o.VehicleInfo, true
}

// HasVehicleInfo returns a boolean if a field has been set.
func (o *TicketOrderInfo) HasVehicleInfo() bool {
	if o != nil && !IsNil(o.VehicleInfo) {
		return true
	}

	return false
}

// SetVehicleInfo gets a reference to the given OrderVehicleInfo and assigns it to the VehicleInfo field.
func (o *TicketOrderInfo) SetVehicleInfo(v OrderVehicleInfo) {
	o.VehicleInfo = &v
}

func (o TicketOrderInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TicketOrderInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arrival) {
		toSerialize["arrival"] = o.Arrival
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Departure) {
		toSerialize["departure"] = o.Departure
	}
	if !IsNil(o.EffectiveNum) {
		toSerialize["effective_num"] = o.EffectiveNum
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.ExtInfo) {
		toSerialize["ext_info"] = o.ExtInfo
	}
	if !IsNil(o.FaceValue) {
		toSerialize["face_value"] = o.FaceValue
	}
	if !IsNil(o.FunctionalServices) {
		toSerialize["functional_services"] = o.FunctionalServices
	}
	if !IsNil(o.InvalidReason) {
		toSerialize["invalid_reason"] = o.InvalidReason
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.MerchantTicketNo) {
		toSerialize["merchant_ticket_no"] = o.MerchantTicketNo
	}
	if !IsNil(o.SeatInfos) {
		toSerialize["seat_infos"] = o.SeatInfos
	}
	if !IsNil(o.ServiceProvider) {
		toSerialize["service_provider"] = o.ServiceProvider
	}
	if !IsNil(o.Shops) {
		toSerialize["shops"] = o.Shops
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TicketCreateTime) {
		toSerialize["ticket_create_time"] = o.TicketCreateTime
	}
	if !IsNil(o.TicketModifyTime) {
		toSerialize["ticket_modify_time"] = o.TicketModifyTime
	}
	if !IsNil(o.TicketNum) {
		toSerialize["ticket_num"] = o.TicketNum
	}
	if !IsNil(o.TicketUsers) {
		toSerialize["ticket_users"] = o.TicketUsers
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.VehicleInfo) {
		toSerialize["vehicle_info"] = o.VehicleInfo
	}
	return toSerialize, nil
}

type NullableTicketOrderInfo struct {
	value *TicketOrderInfo
	isSet bool
}

func (v NullableTicketOrderInfo) Get() *TicketOrderInfo {
	return v.value
}

func (v *NullableTicketOrderInfo) Set(val *TicketOrderInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketOrderInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketOrderInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketOrderInfo(val *TicketOrderInfo) *NullableTicketOrderInfo {
	return &NullableTicketOrderInfo{value: val, isSet: true}
}

func (v NullableTicketOrderInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketOrderInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the IssueRuleIdInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueRuleIdInfo{}

// IssueRuleIdInfo struct for IssueRuleIdInfo
type IssueRuleIdInfo struct {
	// 发放规则id
	IssueRuleId *string `json:"issue_rule_id,omitempty"`
	// 外部发放规则id
	OuterSourceId *string `json:"outer_source_id,omitempty"`
}

// NewIssueRuleIdInfo instantiates a new IssueRuleIdInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueRuleIdInfo() *IssueRuleIdInfo {
	this := IssueRuleIdInfo{}
	return &this
}

// NewIssueRuleIdInfoWithDefaults instantiates a new IssueRuleIdInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueRuleIdInfoWithDefaults() *IssueRuleIdInfo {
	this := IssueRuleIdInfo{}
	return &this
}

// GetIssueRuleId returns the IssueRuleId field value if set, zero value otherwise.
func (o *IssueRuleIdInfo) GetIssueRuleId() string {
	if o == nil || IsNil(o.IssueRuleId) {
		var ret string
		return ret
	}
	return *o.IssueRuleId
}

// GetIssueRuleIdOk returns a tuple with the IssueRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueRuleIdInfo) GetIssueRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.IssueRuleId) {
		return nil, false
	}
	return o.IssueRuleId, true
}

// HasIssueRuleId returns a boolean if a field has been set.
func (o *IssueRuleIdInfo) HasIssueRuleId() bool {
	if o != nil && !IsNil(o.IssueRuleId) {
		return true
	}

	return false
}

// SetIssueRuleId gets a reference to the given string and assigns it to the IssueRuleId field.
func (o *IssueRuleIdInfo) SetIssueRuleId(v string) {
	o.IssueRuleId = &v
}

// GetOuterSourceId returns the OuterSourceId field value if set, zero value otherwise.
func (o *IssueRuleIdInfo) GetOuterSourceId() string {
	if o == nil || IsNil(o.OuterSourceId) {
		var ret string
		return ret
	}
	return *o.OuterSourceId
}

// GetOuterSourceIdOk returns a tuple with the OuterSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueRuleIdInfo) GetOuterSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.OuterSourceId) {
		return nil, false
	}
	return o.OuterSourceId, true
}

// HasOuterSourceId returns a boolean if a field has been set.
func (o *IssueRuleIdInfo) HasOuterSourceId() bool {
	if o != nil && !IsNil(o.OuterSourceId) {
		return true
	}

	return false
}

// SetOuterSourceId gets a reference to the given string and assigns it to the OuterSourceId field.
func (o *IssueRuleIdInfo) SetOuterSourceId(v string) {
	o.OuterSourceId = &v
}

func (o IssueRuleIdInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueRuleIdInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssueRuleId) {
		toSerialize["issue_rule_id"] = o.IssueRuleId
	}
	if !IsNil(o.OuterSourceId) {
		toSerialize["outer_source_id"] = o.OuterSourceId
	}
	return toSerialize, nil
}

type NullableIssueRuleIdInfo struct {
	value *IssueRuleIdInfo
	isSet bool
}

func (v NullableIssueRuleIdInfo) Get() *IssueRuleIdInfo {
	return v.value
}

func (v *NullableIssueRuleIdInfo) Set(val *IssueRuleIdInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueRuleIdInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueRuleIdInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueRuleIdInfo(val *IssueRuleIdInfo) *NullableIssueRuleIdInfo {
	return &NullableIssueRuleIdInfo{value: val, isSet: true}
}

func (v NullableIssueRuleIdInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueRuleIdInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

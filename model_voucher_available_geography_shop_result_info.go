/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the VoucherAvailableGeographyShopResultInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherAvailableGeographyShopResultInfo{}

// VoucherAvailableGeographyShopResultInfo struct for VoucherAvailableGeographyShopResultInfo
type VoucherAvailableGeographyShopResultInfo struct {
	AvailableGeographyAllShopResultInfo *VoucherAvailableGeographyAllShopResultInfo `json:"available_geography_all_shop_result_info,omitempty"`
	// 失败的物理门店详情。
	FailAvailableRealShopInfos []VoucherFailShopInfo `json:"fail_available_real_shop_infos,omitempty"`
	// 失败的可用门店。
	FailAvailableShopInfos []VoucherFailShopInfo `json:"fail_available_shop_infos,omitempty"`
	// 代运营商业关系门店列表，列表中的门店id是调用接口alipay.business.relation.shop.create创建门店返回的real_shop_id  接口参数是列表类型。
	SuccessAvailableRealShopIds []string `json:"success_available_real_shop_ids,omitempty"`
	// 券可使用的门店列表。列表中的门店id是通过调用接口ant.merchant.expand.shop.create创建门店返回的支付宝门店id  接口参数是列表类型。
	SuccessAvailableShopIds []string `json:"success_available_shop_ids,omitempty"`
}

// NewVoucherAvailableGeographyShopResultInfo instantiates a new VoucherAvailableGeographyShopResultInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherAvailableGeographyShopResultInfo() *VoucherAvailableGeographyShopResultInfo {
	this := VoucherAvailableGeographyShopResultInfo{}
	return &this
}

// NewVoucherAvailableGeographyShopResultInfoWithDefaults instantiates a new VoucherAvailableGeographyShopResultInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherAvailableGeographyShopResultInfoWithDefaults() *VoucherAvailableGeographyShopResultInfo {
	this := VoucherAvailableGeographyShopResultInfo{}
	return &this
}

// GetAvailableGeographyAllShopResultInfo returns the AvailableGeographyAllShopResultInfo field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyShopResultInfo) GetAvailableGeographyAllShopResultInfo() VoucherAvailableGeographyAllShopResultInfo {
	if o == nil || IsNil(o.AvailableGeographyAllShopResultInfo) {
		var ret VoucherAvailableGeographyAllShopResultInfo
		return ret
	}
	return *o.AvailableGeographyAllShopResultInfo
}

// GetAvailableGeographyAllShopResultInfoOk returns a tuple with the AvailableGeographyAllShopResultInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyShopResultInfo) GetAvailableGeographyAllShopResultInfoOk() (*VoucherAvailableGeographyAllShopResultInfo, bool) {
	if o == nil || IsNil(o.AvailableGeographyAllShopResultInfo) {
		return nil, false
	}
	return o.AvailableGeographyAllShopResultInfo, true
}

// HasAvailableGeographyAllShopResultInfo returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyShopResultInfo) HasAvailableGeographyAllShopResultInfo() bool {
	if o != nil && !IsNil(o.AvailableGeographyAllShopResultInfo) {
		return true
	}

	return false
}

// SetAvailableGeographyAllShopResultInfo gets a reference to the given VoucherAvailableGeographyAllShopResultInfo and assigns it to the AvailableGeographyAllShopResultInfo field.
func (o *VoucherAvailableGeographyShopResultInfo) SetAvailableGeographyAllShopResultInfo(v VoucherAvailableGeographyAllShopResultInfo) {
	o.AvailableGeographyAllShopResultInfo = &v
}

// GetFailAvailableRealShopInfos returns the FailAvailableRealShopInfos field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyShopResultInfo) GetFailAvailableRealShopInfos() []VoucherFailShopInfo {
	if o == nil || IsNil(o.FailAvailableRealShopInfos) {
		var ret []VoucherFailShopInfo
		return ret
	}
	return o.FailAvailableRealShopInfos
}

// GetFailAvailableRealShopInfosOk returns a tuple with the FailAvailableRealShopInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyShopResultInfo) GetFailAvailableRealShopInfosOk() ([]VoucherFailShopInfo, bool) {
	if o == nil || IsNil(o.FailAvailableRealShopInfos) {
		return nil, false
	}
	return o.FailAvailableRealShopInfos, true
}

// HasFailAvailableRealShopInfos returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyShopResultInfo) HasFailAvailableRealShopInfos() bool {
	if o != nil && !IsNil(o.FailAvailableRealShopInfos) {
		return true
	}

	return false
}

// SetFailAvailableRealShopInfos gets a reference to the given []VoucherFailShopInfo and assigns it to the FailAvailableRealShopInfos field.
func (o *VoucherAvailableGeographyShopResultInfo) SetFailAvailableRealShopInfos(v []VoucherFailShopInfo) {
	o.FailAvailableRealShopInfos = v
}

// GetFailAvailableShopInfos returns the FailAvailableShopInfos field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyShopResultInfo) GetFailAvailableShopInfos() []VoucherFailShopInfo {
	if o == nil || IsNil(o.FailAvailableShopInfos) {
		var ret []VoucherFailShopInfo
		return ret
	}
	return o.FailAvailableShopInfos
}

// GetFailAvailableShopInfosOk returns a tuple with the FailAvailableShopInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyShopResultInfo) GetFailAvailableShopInfosOk() ([]VoucherFailShopInfo, bool) {
	if o == nil || IsNil(o.FailAvailableShopInfos) {
		return nil, false
	}
	return o.FailAvailableShopInfos, true
}

// HasFailAvailableShopInfos returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyShopResultInfo) HasFailAvailableShopInfos() bool {
	if o != nil && !IsNil(o.FailAvailableShopInfos) {
		return true
	}

	return false
}

// SetFailAvailableShopInfos gets a reference to the given []VoucherFailShopInfo and assigns it to the FailAvailableShopInfos field.
func (o *VoucherAvailableGeographyShopResultInfo) SetFailAvailableShopInfos(v []VoucherFailShopInfo) {
	o.FailAvailableShopInfos = v
}

// GetSuccessAvailableRealShopIds returns the SuccessAvailableRealShopIds field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyShopResultInfo) GetSuccessAvailableRealShopIds() []string {
	if o == nil || IsNil(o.SuccessAvailableRealShopIds) {
		var ret []string
		return ret
	}
	return o.SuccessAvailableRealShopIds
}

// GetSuccessAvailableRealShopIdsOk returns a tuple with the SuccessAvailableRealShopIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyShopResultInfo) GetSuccessAvailableRealShopIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SuccessAvailableRealShopIds) {
		return nil, false
	}
	return o.SuccessAvailableRealShopIds, true
}

// HasSuccessAvailableRealShopIds returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyShopResultInfo) HasSuccessAvailableRealShopIds() bool {
	if o != nil && !IsNil(o.SuccessAvailableRealShopIds) {
		return true
	}

	return false
}

// SetSuccessAvailableRealShopIds gets a reference to the given []string and assigns it to the SuccessAvailableRealShopIds field.
func (o *VoucherAvailableGeographyShopResultInfo) SetSuccessAvailableRealShopIds(v []string) {
	o.SuccessAvailableRealShopIds = v
}

// GetSuccessAvailableShopIds returns the SuccessAvailableShopIds field value if set, zero value otherwise.
func (o *VoucherAvailableGeographyShopResultInfo) GetSuccessAvailableShopIds() []string {
	if o == nil || IsNil(o.SuccessAvailableShopIds) {
		var ret []string
		return ret
	}
	return o.SuccessAvailableShopIds
}

// GetSuccessAvailableShopIdsOk returns a tuple with the SuccessAvailableShopIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableGeographyShopResultInfo) GetSuccessAvailableShopIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SuccessAvailableShopIds) {
		return nil, false
	}
	return o.SuccessAvailableShopIds, true
}

// HasSuccessAvailableShopIds returns a boolean if a field has been set.
func (o *VoucherAvailableGeographyShopResultInfo) HasSuccessAvailableShopIds() bool {
	if o != nil && !IsNil(o.SuccessAvailableShopIds) {
		return true
	}

	return false
}

// SetSuccessAvailableShopIds gets a reference to the given []string and assigns it to the SuccessAvailableShopIds field.
func (o *VoucherAvailableGeographyShopResultInfo) SetSuccessAvailableShopIds(v []string) {
	o.SuccessAvailableShopIds = v
}

func (o VoucherAvailableGeographyShopResultInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherAvailableGeographyShopResultInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableGeographyAllShopResultInfo) {
		toSerialize["available_geography_all_shop_result_info"] = o.AvailableGeographyAllShopResultInfo
	}
	if !IsNil(o.FailAvailableRealShopInfos) {
		toSerialize["fail_available_real_shop_infos"] = o.FailAvailableRealShopInfos
	}
	if !IsNil(o.FailAvailableShopInfos) {
		toSerialize["fail_available_shop_infos"] = o.FailAvailableShopInfos
	}
	if !IsNil(o.SuccessAvailableRealShopIds) {
		toSerialize["success_available_real_shop_ids"] = o.SuccessAvailableRealShopIds
	}
	if !IsNil(o.SuccessAvailableShopIds) {
		toSerialize["success_available_shop_ids"] = o.SuccessAvailableShopIds
	}
	return toSerialize, nil
}

type NullableVoucherAvailableGeographyShopResultInfo struct {
	value *VoucherAvailableGeographyShopResultInfo
	isSet bool
}

func (v NullableVoucherAvailableGeographyShopResultInfo) Get() *VoucherAvailableGeographyShopResultInfo {
	return v.value
}

func (v *NullableVoucherAvailableGeographyShopResultInfo) Set(val *VoucherAvailableGeographyShopResultInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherAvailableGeographyShopResultInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherAvailableGeographyShopResultInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherAvailableGeographyShopResultInfo(val *VoucherAvailableGeographyShopResultInfo) *NullableVoucherAvailableGeographyShopResultInfo {
	return &NullableVoucherAvailableGeographyShopResultInfo{value: val, isSet: true}
}

func (v NullableVoucherAvailableGeographyShopResultInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherAvailableGeographyShopResultInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

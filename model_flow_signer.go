/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FlowSigner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowSigner{}

// FlowSigner struct for FlowSigner
type FlowSigner struct {
	// 创建流程时指定的企业唯一标识，仅签署主体为企业时返回
	OrgThirdPartyUserId *string `json:"org_third_party_user_id,omitempty"`
	// 签署状态：0-待签, 1-未签, 2-已签 3-待审批 4-拒签
	SignStatus *int32 `json:"sign_status,omitempty"`
	// 签署主体类型：0-个人, 1-企业
	SignerAccountType *int32 `json:"signer_account_type,omitempty"`
	// 创建流程时指定个人唯一标识
	ThirdPartyUserId *string `json:"third_party_user_id,omitempty"`
}

// NewFlowSigner instantiates a new FlowSigner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowSigner() *FlowSigner {
	this := FlowSigner{}
	return &this
}

// NewFlowSignerWithDefaults instantiates a new FlowSigner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowSignerWithDefaults() *FlowSigner {
	this := FlowSigner{}
	return &this
}

// GetOrgThirdPartyUserId returns the OrgThirdPartyUserId field value if set, zero value otherwise.
func (o *FlowSigner) GetOrgThirdPartyUserId() string {
	if o == nil || IsNil(o.OrgThirdPartyUserId) {
		var ret string
		return ret
	}
	return *o.OrgThirdPartyUserId
}

// GetOrgThirdPartyUserIdOk returns a tuple with the OrgThirdPartyUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowSigner) GetOrgThirdPartyUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgThirdPartyUserId) {
		return nil, false
	}
	return o.OrgThirdPartyUserId, true
}

// HasOrgThirdPartyUserId returns a boolean if a field has been set.
func (o *FlowSigner) HasOrgThirdPartyUserId() bool {
	if o != nil && !IsNil(o.OrgThirdPartyUserId) {
		return true
	}

	return false
}

// SetOrgThirdPartyUserId gets a reference to the given string and assigns it to the OrgThirdPartyUserId field.
func (o *FlowSigner) SetOrgThirdPartyUserId(v string) {
	o.OrgThirdPartyUserId = &v
}

// GetSignStatus returns the SignStatus field value if set, zero value otherwise.
func (o *FlowSigner) GetSignStatus() int32 {
	if o == nil || IsNil(o.SignStatus) {
		var ret int32
		return ret
	}
	return *o.SignStatus
}

// GetSignStatusOk returns a tuple with the SignStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowSigner) GetSignStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.SignStatus) {
		return nil, false
	}
	return o.SignStatus, true
}

// HasSignStatus returns a boolean if a field has been set.
func (o *FlowSigner) HasSignStatus() bool {
	if o != nil && !IsNil(o.SignStatus) {
		return true
	}

	return false
}

// SetSignStatus gets a reference to the given int32 and assigns it to the SignStatus field.
func (o *FlowSigner) SetSignStatus(v int32) {
	o.SignStatus = &v
}

// GetSignerAccountType returns the SignerAccountType field value if set, zero value otherwise.
func (o *FlowSigner) GetSignerAccountType() int32 {
	if o == nil || IsNil(o.SignerAccountType) {
		var ret int32
		return ret
	}
	return *o.SignerAccountType
}

// GetSignerAccountTypeOk returns a tuple with the SignerAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowSigner) GetSignerAccountTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.SignerAccountType) {
		return nil, false
	}
	return o.SignerAccountType, true
}

// HasSignerAccountType returns a boolean if a field has been set.
func (o *FlowSigner) HasSignerAccountType() bool {
	if o != nil && !IsNil(o.SignerAccountType) {
		return true
	}

	return false
}

// SetSignerAccountType gets a reference to the given int32 and assigns it to the SignerAccountType field.
func (o *FlowSigner) SetSignerAccountType(v int32) {
	o.SignerAccountType = &v
}

// GetThirdPartyUserId returns the ThirdPartyUserId field value if set, zero value otherwise.
func (o *FlowSigner) GetThirdPartyUserId() string {
	if o == nil || IsNil(o.ThirdPartyUserId) {
		var ret string
		return ret
	}
	return *o.ThirdPartyUserId
}

// GetThirdPartyUserIdOk returns a tuple with the ThirdPartyUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowSigner) GetThirdPartyUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThirdPartyUserId) {
		return nil, false
	}
	return o.ThirdPartyUserId, true
}

// HasThirdPartyUserId returns a boolean if a field has been set.
func (o *FlowSigner) HasThirdPartyUserId() bool {
	if o != nil && !IsNil(o.ThirdPartyUserId) {
		return true
	}

	return false
}

// SetThirdPartyUserId gets a reference to the given string and assigns it to the ThirdPartyUserId field.
func (o *FlowSigner) SetThirdPartyUserId(v string) {
	o.ThirdPartyUserId = &v
}

func (o FlowSigner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowSigner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgThirdPartyUserId) {
		toSerialize["org_third_party_user_id"] = o.OrgThirdPartyUserId
	}
	if !IsNil(o.SignStatus) {
		toSerialize["sign_status"] = o.SignStatus
	}
	if !IsNil(o.SignerAccountType) {
		toSerialize["signer_account_type"] = o.SignerAccountType
	}
	if !IsNil(o.ThirdPartyUserId) {
		toSerialize["third_party_user_id"] = o.ThirdPartyUserId
	}
	return toSerialize, nil
}

type NullableFlowSigner struct {
	value *FlowSigner
	isSet bool
}

func (v NullableFlowSigner) Get() *FlowSigner {
	return v.value
}

func (v *NullableFlowSigner) Set(val *FlowSigner) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowSigner) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowSigner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowSigner(val *FlowSigner) *NullableFlowSigner {
	return &NullableFlowSigner{value: val, isSet: true}
}

func (v NullableFlowSigner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowSigner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



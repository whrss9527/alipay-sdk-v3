/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JointAccountMemberDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JointAccountMemberDTO{}

// JointAccountMemberDTO struct for JointAccountMemberDTO
type JointAccountMemberDTO struct {
	AccountQuota *JointAccountQuotaDTO `json:"account_quota,omitempty"`
	MemberExtInfo *MemberExtInfo `json:"member_ext_info,omitempty"`
	// 姓名，脱敏输出
	Name *string `json:"name,omitempty"`
	// 用户openId
	OpenId *string `json:"open_id,omitempty"`
	// 成员状态
	Status *string `json:"status,omitempty"`
	// 用户会员号
	UserId *string `json:"user_id,omitempty"`
}

// NewJointAccountMemberDTO instantiates a new JointAccountMemberDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJointAccountMemberDTO() *JointAccountMemberDTO {
	this := JointAccountMemberDTO{}
	return &this
}

// NewJointAccountMemberDTOWithDefaults instantiates a new JointAccountMemberDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJointAccountMemberDTOWithDefaults() *JointAccountMemberDTO {
	this := JointAccountMemberDTO{}
	return &this
}

// GetAccountQuota returns the AccountQuota field value if set, zero value otherwise.
func (o *JointAccountMemberDTO) GetAccountQuota() JointAccountQuotaDTO {
	if o == nil || IsNil(o.AccountQuota) {
		var ret JointAccountQuotaDTO
		return ret
	}
	return *o.AccountQuota
}

// GetAccountQuotaOk returns a tuple with the AccountQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberDTO) GetAccountQuotaOk() (*JointAccountQuotaDTO, bool) {
	if o == nil || IsNil(o.AccountQuota) {
		return nil, false
	}
	return o.AccountQuota, true
}

// HasAccountQuota returns a boolean if a field has been set.
func (o *JointAccountMemberDTO) HasAccountQuota() bool {
	if o != nil && !IsNil(o.AccountQuota) {
		return true
	}

	return false
}

// SetAccountQuota gets a reference to the given JointAccountQuotaDTO and assigns it to the AccountQuota field.
func (o *JointAccountMemberDTO) SetAccountQuota(v JointAccountQuotaDTO) {
	o.AccountQuota = &v
}

// GetMemberExtInfo returns the MemberExtInfo field value if set, zero value otherwise.
func (o *JointAccountMemberDTO) GetMemberExtInfo() MemberExtInfo {
	if o == nil || IsNil(o.MemberExtInfo) {
		var ret MemberExtInfo
		return ret
	}
	return *o.MemberExtInfo
}

// GetMemberExtInfoOk returns a tuple with the MemberExtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberDTO) GetMemberExtInfoOk() (*MemberExtInfo, bool) {
	if o == nil || IsNil(o.MemberExtInfo) {
		return nil, false
	}
	return o.MemberExtInfo, true
}

// HasMemberExtInfo returns a boolean if a field has been set.
func (o *JointAccountMemberDTO) HasMemberExtInfo() bool {
	if o != nil && !IsNil(o.MemberExtInfo) {
		return true
	}

	return false
}

// SetMemberExtInfo gets a reference to the given MemberExtInfo and assigns it to the MemberExtInfo field.
func (o *JointAccountMemberDTO) SetMemberExtInfo(v MemberExtInfo) {
	o.MemberExtInfo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *JointAccountMemberDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *JointAccountMemberDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *JointAccountMemberDTO) SetName(v string) {
	o.Name = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *JointAccountMemberDTO) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberDTO) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *JointAccountMemberDTO) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *JointAccountMemberDTO) SetOpenId(v string) {
	o.OpenId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JointAccountMemberDTO) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberDTO) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JointAccountMemberDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JointAccountMemberDTO) SetStatus(v string) {
	o.Status = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *JointAccountMemberDTO) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JointAccountMemberDTO) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *JointAccountMemberDTO) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *JointAccountMemberDTO) SetUserId(v string) {
	o.UserId = &v
}

func (o JointAccountMemberDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JointAccountMemberDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountQuota) {
		toSerialize["account_quota"] = o.AccountQuota
	}
	if !IsNil(o.MemberExtInfo) {
		toSerialize["member_ext_info"] = o.MemberExtInfo
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpenId) {
		toSerialize["open_id"] = o.OpenId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableJointAccountMemberDTO struct {
	value *JointAccountMemberDTO
	isSet bool
}

func (v NullableJointAccountMemberDTO) Get() *JointAccountMemberDTO {
	return v.value
}

func (v *NullableJointAccountMemberDTO) Set(val *JointAccountMemberDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableJointAccountMemberDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableJointAccountMemberDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJointAccountMemberDTO(val *JointAccountMemberDTO) *NullableJointAccountMemberDTO {
	return &NullableJointAccountMemberDTO{value: val, isSet: true}
}

func (v NullableJointAccountMemberDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJointAccountMemberDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



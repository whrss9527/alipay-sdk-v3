/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the SubMerchantEnterOpenModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubMerchantEnterOpenModel{}

// SubMerchantEnterOpenModel struct for SubMerchantEnterOpenModel
type SubMerchantEnterOpenModel struct {
	// 扩展字段，为json字符串格式；入驻缴费后开票的产品如果需要传入自定义开票链接，由此字段传入。
	ExtendFields *string `json:"extend_fields,omitempty"`
	// 商户行业，枚举值如下：subway：地铁，etc：ETC，online_car_hailing：网约车，catering：餐饮，hotel：酒店，convenience_store：便利店，oil：加油，insurance：保险，service_provider：运营商，life_payment：生活缴费，political：政务，other：其他
	Industry *string `json:"industry,omitempty"`
	// 开票商户pid，入驻支付即开票场景的时候，非登录账号入驻模式，则该字段必传
	Pid *string `json:"pid,omitempty"`
	// 商户门店税号。
	RegisterNo *string `json:"register_no,omitempty"`
	// 商户门店全称。
	SubMName *string `json:"sub_m_name,omitempty"`
	// 商户门店简称
	SubMShortName *string `json:"sub_m_short_name,omitempty"`
}

// NewSubMerchantEnterOpenModel instantiates a new SubMerchantEnterOpenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubMerchantEnterOpenModel() *SubMerchantEnterOpenModel {
	this := SubMerchantEnterOpenModel{}
	return &this
}

// NewSubMerchantEnterOpenModelWithDefaults instantiates a new SubMerchantEnterOpenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubMerchantEnterOpenModelWithDefaults() *SubMerchantEnterOpenModel {
	this := SubMerchantEnterOpenModel{}
	return &this
}

// GetExtendFields returns the ExtendFields field value if set, zero value otherwise.
func (o *SubMerchantEnterOpenModel) GetExtendFields() string {
	if o == nil || IsNil(o.ExtendFields) {
		var ret string
		return ret
	}
	return *o.ExtendFields
}

// GetExtendFieldsOk returns a tuple with the ExtendFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubMerchantEnterOpenModel) GetExtendFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendFields) {
		return nil, false
	}
	return o.ExtendFields, true
}

// HasExtendFields returns a boolean if a field has been set.
func (o *SubMerchantEnterOpenModel) HasExtendFields() bool {
	if o != nil && !IsNil(o.ExtendFields) {
		return true
	}

	return false
}

// SetExtendFields gets a reference to the given string and assigns it to the ExtendFields field.
func (o *SubMerchantEnterOpenModel) SetExtendFields(v string) {
	o.ExtendFields = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *SubMerchantEnterOpenModel) GetIndustry() string {
	if o == nil || IsNil(o.Industry) {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubMerchantEnterOpenModel) GetIndustryOk() (*string, bool) {
	if o == nil || IsNil(o.Industry) {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *SubMerchantEnterOpenModel) HasIndustry() bool {
	if o != nil && !IsNil(o.Industry) {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *SubMerchantEnterOpenModel) SetIndustry(v string) {
	o.Industry = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *SubMerchantEnterOpenModel) GetPid() string {
	if o == nil || IsNil(o.Pid) {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubMerchantEnterOpenModel) GetPidOk() (*string, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *SubMerchantEnterOpenModel) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *SubMerchantEnterOpenModel) SetPid(v string) {
	o.Pid = &v
}

// GetRegisterNo returns the RegisterNo field value if set, zero value otherwise.
func (o *SubMerchantEnterOpenModel) GetRegisterNo() string {
	if o == nil || IsNil(o.RegisterNo) {
		var ret string
		return ret
	}
	return *o.RegisterNo
}

// GetRegisterNoOk returns a tuple with the RegisterNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubMerchantEnterOpenModel) GetRegisterNoOk() (*string, bool) {
	if o == nil || IsNil(o.RegisterNo) {
		return nil, false
	}
	return o.RegisterNo, true
}

// HasRegisterNo returns a boolean if a field has been set.
func (o *SubMerchantEnterOpenModel) HasRegisterNo() bool {
	if o != nil && !IsNil(o.RegisterNo) {
		return true
	}

	return false
}

// SetRegisterNo gets a reference to the given string and assigns it to the RegisterNo field.
func (o *SubMerchantEnterOpenModel) SetRegisterNo(v string) {
	o.RegisterNo = &v
}

// GetSubMName returns the SubMName field value if set, zero value otherwise.
func (o *SubMerchantEnterOpenModel) GetSubMName() string {
	if o == nil || IsNil(o.SubMName) {
		var ret string
		return ret
	}
	return *o.SubMName
}

// GetSubMNameOk returns a tuple with the SubMName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubMerchantEnterOpenModel) GetSubMNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubMName) {
		return nil, false
	}
	return o.SubMName, true
}

// HasSubMName returns a boolean if a field has been set.
func (o *SubMerchantEnterOpenModel) HasSubMName() bool {
	if o != nil && !IsNil(o.SubMName) {
		return true
	}

	return false
}

// SetSubMName gets a reference to the given string and assigns it to the SubMName field.
func (o *SubMerchantEnterOpenModel) SetSubMName(v string) {
	o.SubMName = &v
}

// GetSubMShortName returns the SubMShortName field value if set, zero value otherwise.
func (o *SubMerchantEnterOpenModel) GetSubMShortName() string {
	if o == nil || IsNil(o.SubMShortName) {
		var ret string
		return ret
	}
	return *o.SubMShortName
}

// GetSubMShortNameOk returns a tuple with the SubMShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubMerchantEnterOpenModel) GetSubMShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubMShortName) {
		return nil, false
	}
	return o.SubMShortName, true
}

// HasSubMShortName returns a boolean if a field has been set.
func (o *SubMerchantEnterOpenModel) HasSubMShortName() bool {
	if o != nil && !IsNil(o.SubMShortName) {
		return true
	}

	return false
}

// SetSubMShortName gets a reference to the given string and assigns it to the SubMShortName field.
func (o *SubMerchantEnterOpenModel) SetSubMShortName(v string) {
	o.SubMShortName = &v
}

func (o SubMerchantEnterOpenModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubMerchantEnterOpenModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExtendFields) {
		toSerialize["extend_fields"] = o.ExtendFields
	}
	if !IsNil(o.Industry) {
		toSerialize["industry"] = o.Industry
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.RegisterNo) {
		toSerialize["register_no"] = o.RegisterNo
	}
	if !IsNil(o.SubMName) {
		toSerialize["sub_m_name"] = o.SubMName
	}
	if !IsNil(o.SubMShortName) {
		toSerialize["sub_m_short_name"] = o.SubMShortName
	}
	return toSerialize, nil
}

type NullableSubMerchantEnterOpenModel struct {
	value *SubMerchantEnterOpenModel
	isSet bool
}

func (v NullableSubMerchantEnterOpenModel) Get() *SubMerchantEnterOpenModel {
	return v.value
}

func (v *NullableSubMerchantEnterOpenModel) Set(val *SubMerchantEnterOpenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSubMerchantEnterOpenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSubMerchantEnterOpenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubMerchantEnterOpenModel(val *SubMerchantEnterOpenModel) *NullableSubMerchantEnterOpenModel {
	return &NullableSubMerchantEnterOpenModel{value: val, isSet: true}
}

func (v NullableSubMerchantEnterOpenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubMerchantEnterOpenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

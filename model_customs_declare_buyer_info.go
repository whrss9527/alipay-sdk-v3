/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomsDeclareBuyerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomsDeclareBuyerInfo{}

// CustomsDeclareBuyerInfo struct for CustomsDeclareBuyerInfo
type CustomsDeclareBuyerInfo struct {
	// 订购人身份证号。即订购人留在商户处的身份证信息
	BuyerCertNo *string `json:"buyer_cert_no,omitempty"`
	// 订购人姓名。即订购人留在商户处的姓名信息
	BuyerName *string `json:"buyer_name,omitempty"`
}

// NewCustomsDeclareBuyerInfo instantiates a new CustomsDeclareBuyerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomsDeclareBuyerInfo() *CustomsDeclareBuyerInfo {
	this := CustomsDeclareBuyerInfo{}
	return &this
}

// NewCustomsDeclareBuyerInfoWithDefaults instantiates a new CustomsDeclareBuyerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomsDeclareBuyerInfoWithDefaults() *CustomsDeclareBuyerInfo {
	this := CustomsDeclareBuyerInfo{}
	return &this
}

// GetBuyerCertNo returns the BuyerCertNo field value if set, zero value otherwise.
func (o *CustomsDeclareBuyerInfo) GetBuyerCertNo() string {
	if o == nil || IsNil(o.BuyerCertNo) {
		var ret string
		return ret
	}
	return *o.BuyerCertNo
}

// GetBuyerCertNoOk returns a tuple with the BuyerCertNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareBuyerInfo) GetBuyerCertNoOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerCertNo) {
		return nil, false
	}
	return o.BuyerCertNo, true
}

// HasBuyerCertNo returns a boolean if a field has been set.
func (o *CustomsDeclareBuyerInfo) HasBuyerCertNo() bool {
	if o != nil && !IsNil(o.BuyerCertNo) {
		return true
	}

	return false
}

// SetBuyerCertNo gets a reference to the given string and assigns it to the BuyerCertNo field.
func (o *CustomsDeclareBuyerInfo) SetBuyerCertNo(v string) {
	o.BuyerCertNo = &v
}

// GetBuyerName returns the BuyerName field value if set, zero value otherwise.
func (o *CustomsDeclareBuyerInfo) GetBuyerName() string {
	if o == nil || IsNil(o.BuyerName) {
		var ret string
		return ret
	}
	return *o.BuyerName
}

// GetBuyerNameOk returns a tuple with the BuyerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomsDeclareBuyerInfo) GetBuyerNameOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerName) {
		return nil, false
	}
	return o.BuyerName, true
}

// HasBuyerName returns a boolean if a field has been set.
func (o *CustomsDeclareBuyerInfo) HasBuyerName() bool {
	if o != nil && !IsNil(o.BuyerName) {
		return true
	}

	return false
}

// SetBuyerName gets a reference to the given string and assigns it to the BuyerName field.
func (o *CustomsDeclareBuyerInfo) SetBuyerName(v string) {
	o.BuyerName = &v
}

func (o CustomsDeclareBuyerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomsDeclareBuyerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuyerCertNo) {
		toSerialize["buyer_cert_no"] = o.BuyerCertNo
	}
	if !IsNil(o.BuyerName) {
		toSerialize["buyer_name"] = o.BuyerName
	}
	return toSerialize, nil
}

type NullableCustomsDeclareBuyerInfo struct {
	value *CustomsDeclareBuyerInfo
	isSet bool
}

func (v NullableCustomsDeclareBuyerInfo) Get() *CustomsDeclareBuyerInfo {
	return v.value
}

func (v *NullableCustomsDeclareBuyerInfo) Set(val *CustomsDeclareBuyerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomsDeclareBuyerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomsDeclareBuyerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomsDeclareBuyerInfo(val *CustomsDeclareBuyerInfo) *NullableCustomsDeclareBuyerInfo {
	return &NullableCustomsDeclareBuyerInfo{value: val, isSet: true}
}

func (v NullableCustomsDeclareBuyerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomsDeclareBuyerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



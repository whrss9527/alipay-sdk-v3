/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecruitPlanLight type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecruitPlanLight{}

// RecruitPlanLight struct for RecruitPlanLight
type RecruitPlanLight struct {
	// 招商方案描述：富文本内容，可能包含html标签
	Description *string `json:"description,omitempty"`
	// 报名结束时间
	EnrollEndTime *string `json:"enroll_end_time,omitempty"`
	// 招商方案所属报名场景 枚举值： VOUCHER：券报名场景； MINI_APP：小程序报名场景；
	EnrollSceneType *string `json:"enroll_scene_type,omitempty"`
	// 报名开始时间
	EnrollStartTime *string `json:"enroll_start_time,omitempty"`
	// 方案头图链接，150x150 以上尺寸的方形图片
	Logo *string `json:"logo,omitempty"`
	// 招商方案ID
	PlanId *string `json:"plan_id,omitempty"`
	// 招商方案名称
	PlanName *string `json:"plan_name,omitempty"`
	// 招商方案状态
	Status *string `json:"status,omitempty"`
}

// NewRecruitPlanLight instantiates a new RecruitPlanLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecruitPlanLight() *RecruitPlanLight {
	this := RecruitPlanLight{}
	return &this
}

// NewRecruitPlanLightWithDefaults instantiates a new RecruitPlanLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecruitPlanLightWithDefaults() *RecruitPlanLight {
	this := RecruitPlanLight{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RecruitPlanLight) SetDescription(v string) {
	o.Description = &v
}

// GetEnrollEndTime returns the EnrollEndTime field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetEnrollEndTime() string {
	if o == nil || IsNil(o.EnrollEndTime) {
		var ret string
		return ret
	}
	return *o.EnrollEndTime
}

// GetEnrollEndTimeOk returns a tuple with the EnrollEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetEnrollEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollEndTime) {
		return nil, false
	}
	return o.EnrollEndTime, true
}

// HasEnrollEndTime returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasEnrollEndTime() bool {
	if o != nil && !IsNil(o.EnrollEndTime) {
		return true
	}

	return false
}

// SetEnrollEndTime gets a reference to the given string and assigns it to the EnrollEndTime field.
func (o *RecruitPlanLight) SetEnrollEndTime(v string) {
	o.EnrollEndTime = &v
}

// GetEnrollSceneType returns the EnrollSceneType field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetEnrollSceneType() string {
	if o == nil || IsNil(o.EnrollSceneType) {
		var ret string
		return ret
	}
	return *o.EnrollSceneType
}

// GetEnrollSceneTypeOk returns a tuple with the EnrollSceneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetEnrollSceneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollSceneType) {
		return nil, false
	}
	return o.EnrollSceneType, true
}

// HasEnrollSceneType returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasEnrollSceneType() bool {
	if o != nil && !IsNil(o.EnrollSceneType) {
		return true
	}

	return false
}

// SetEnrollSceneType gets a reference to the given string and assigns it to the EnrollSceneType field.
func (o *RecruitPlanLight) SetEnrollSceneType(v string) {
	o.EnrollSceneType = &v
}

// GetEnrollStartTime returns the EnrollStartTime field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetEnrollStartTime() string {
	if o == nil || IsNil(o.EnrollStartTime) {
		var ret string
		return ret
	}
	return *o.EnrollStartTime
}

// GetEnrollStartTimeOk returns a tuple with the EnrollStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetEnrollStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollStartTime) {
		return nil, false
	}
	return o.EnrollStartTime, true
}

// HasEnrollStartTime returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasEnrollStartTime() bool {
	if o != nil && !IsNil(o.EnrollStartTime) {
		return true
	}

	return false
}

// SetEnrollStartTime gets a reference to the given string and assigns it to the EnrollStartTime field.
func (o *RecruitPlanLight) SetEnrollStartTime(v string) {
	o.EnrollStartTime = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *RecruitPlanLight) SetLogo(v string) {
	o.Logo = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *RecruitPlanLight) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *RecruitPlanLight) SetPlanName(v string) {
	o.PlanName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RecruitPlanLight) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecruitPlanLight) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RecruitPlanLight) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RecruitPlanLight) SetStatus(v string) {
	o.Status = &v
}

func (o RecruitPlanLight) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecruitPlanLight) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EnrollEndTime) {
		toSerialize["enroll_end_time"] = o.EnrollEndTime
	}
	if !IsNil(o.EnrollSceneType) {
		toSerialize["enroll_scene_type"] = o.EnrollSceneType
	}
	if !IsNil(o.EnrollStartTime) {
		toSerialize["enroll_start_time"] = o.EnrollStartTime
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.PlanId) {
		toSerialize["plan_id"] = o.PlanId
	}
	if !IsNil(o.PlanName) {
		toSerialize["plan_name"] = o.PlanName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableRecruitPlanLight struct {
	value *RecruitPlanLight
	isSet bool
}

func (v NullableRecruitPlanLight) Get() *RecruitPlanLight {
	return v.value
}

func (v *NullableRecruitPlanLight) Set(val *RecruitPlanLight) {
	v.value = val
	v.isSet = true
}

func (v NullableRecruitPlanLight) IsSet() bool {
	return v.isSet
}

func (v *NullableRecruitPlanLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecruitPlanLight(val *RecruitPlanLight) *NullableRecruitPlanLight {
	return &NullableRecruitPlanLight{value: val, isSet: true}
}

func (v NullableRecruitPlanLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecruitPlanLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



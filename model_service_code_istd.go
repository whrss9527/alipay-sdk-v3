/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceCodeIstd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCodeIstd{}

// ServiceCodeIstd struct for ServiceCodeIstd
type ServiceCodeIstd struct {
	// 即时配送公司服务代码
	ServiceCode *string `json:"service_code,omitempty"`
}

// NewServiceCodeIstd instantiates a new ServiceCodeIstd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCodeIstd() *ServiceCodeIstd {
	this := ServiceCodeIstd{}
	return &this
}

// NewServiceCodeIstdWithDefaults instantiates a new ServiceCodeIstd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCodeIstdWithDefaults() *ServiceCodeIstd {
	this := ServiceCodeIstd{}
	return &this
}

// GetServiceCode returns the ServiceCode field value if set, zero value otherwise.
func (o *ServiceCodeIstd) GetServiceCode() string {
	if o == nil || IsNil(o.ServiceCode) {
		var ret string
		return ret
	}
	return *o.ServiceCode
}

// GetServiceCodeOk returns a tuple with the ServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCodeIstd) GetServiceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceCode) {
		return nil, false
	}
	return o.ServiceCode, true
}

// HasServiceCode returns a boolean if a field has been set.
func (o *ServiceCodeIstd) HasServiceCode() bool {
	if o != nil && !IsNil(o.ServiceCode) {
		return true
	}

	return false
}

// SetServiceCode gets a reference to the given string and assigns it to the ServiceCode field.
func (o *ServiceCodeIstd) SetServiceCode(v string) {
	o.ServiceCode = &v
}

func (o ServiceCodeIstd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCodeIstd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceCode) {
		toSerialize["service_code"] = o.ServiceCode
	}
	return toSerialize, nil
}

type NullableServiceCodeIstd struct {
	value *ServiceCodeIstd
	isSet bool
}

func (v NullableServiceCodeIstd) Get() *ServiceCodeIstd {
	return v.value
}

func (v *NullableServiceCodeIstd) Set(val *ServiceCodeIstd) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCodeIstd) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCodeIstd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCodeIstd(val *ServiceCodeIstd) *NullableServiceCodeIstd {
	return &NullableServiceCodeIstd{value: val, isSet: true}
}

func (v NullableServiceCodeIstd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCodeIstd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



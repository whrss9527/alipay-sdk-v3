/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the OpenCertifyMerchantConfigs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenCertifyMerchantConfigs{}

// OpenCertifyMerchantConfigs struct for OpenCertifyMerchantConfigs
type OpenCertifyMerchantConfigs struct {
	// 不传默认为reserve
	FaceReserveStrategy *string `json:"face_reserve_strategy,omitempty"`
	// 认证成功后需要跳转的地址，一般为商户业务页面；若无跳转地址可填空字符\"\"。
	ReturnUrl *string `json:"return_url,omitempty"`
}

// NewOpenCertifyMerchantConfigs instantiates a new OpenCertifyMerchantConfigs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenCertifyMerchantConfigs() *OpenCertifyMerchantConfigs {
	this := OpenCertifyMerchantConfigs{}
	return &this
}

// NewOpenCertifyMerchantConfigsWithDefaults instantiates a new OpenCertifyMerchantConfigs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenCertifyMerchantConfigsWithDefaults() *OpenCertifyMerchantConfigs {
	this := OpenCertifyMerchantConfigs{}
	return &this
}

// GetFaceReserveStrategy returns the FaceReserveStrategy field value if set, zero value otherwise.
func (o *OpenCertifyMerchantConfigs) GetFaceReserveStrategy() string {
	if o == nil || IsNil(o.FaceReserveStrategy) {
		var ret string
		return ret
	}
	return *o.FaceReserveStrategy
}

// GetFaceReserveStrategyOk returns a tuple with the FaceReserveStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyMerchantConfigs) GetFaceReserveStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.FaceReserveStrategy) {
		return nil, false
	}
	return o.FaceReserveStrategy, true
}

// HasFaceReserveStrategy returns a boolean if a field has been set.
func (o *OpenCertifyMerchantConfigs) HasFaceReserveStrategy() bool {
	if o != nil && !IsNil(o.FaceReserveStrategy) {
		return true
	}

	return false
}

// SetFaceReserveStrategy gets a reference to the given string and assigns it to the FaceReserveStrategy field.
func (o *OpenCertifyMerchantConfigs) SetFaceReserveStrategy(v string) {
	o.FaceReserveStrategy = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *OpenCertifyMerchantConfigs) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenCertifyMerchantConfigs) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *OpenCertifyMerchantConfigs) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *OpenCertifyMerchantConfigs) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

func (o OpenCertifyMerchantConfigs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenCertifyMerchantConfigs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FaceReserveStrategy) {
		toSerialize["face_reserve_strategy"] = o.FaceReserveStrategy
	}
	if !IsNil(o.ReturnUrl) {
		toSerialize["return_url"] = o.ReturnUrl
	}
	return toSerialize, nil
}

type NullableOpenCertifyMerchantConfigs struct {
	value *OpenCertifyMerchantConfigs
	isSet bool
}

func (v NullableOpenCertifyMerchantConfigs) Get() *OpenCertifyMerchantConfigs {
	return v.value
}

func (v *NullableOpenCertifyMerchantConfigs) Set(val *OpenCertifyMerchantConfigs) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenCertifyMerchantConfigs) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenCertifyMerchantConfigs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenCertifyMerchantConfigs(val *OpenCertifyMerchantConfigs) *NullableOpenCertifyMerchantConfigs {
	return &NullableOpenCertifyMerchantConfigs{value: val, isSet: true}
}

func (v NullableOpenCertifyMerchantConfigs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenCertifyMerchantConfigs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

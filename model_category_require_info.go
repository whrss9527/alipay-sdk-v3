/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alipay

import (
	"encoding/json"
)

// checks if the CategoryRequireInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryRequireInfo{}

// CategoryRequireInfo struct for CategoryRequireInfo
type CategoryRequireInfo struct {
	// 营业执照页面是否必填
	BusinessLicenceRequired *bool `json:"business_licence_required,omitempty"`
	// 类目code（各级类目code下划线\"_\"拼接）。类目信息参考alipay.open.mini.category.query
	CategoryCode *string `json:"category_code,omitempty"`
	// 类目名称（各级类目名称下划线\"_\"拼接）
	CategoryName *string `json:"category_name,omitempty"`
	// 类目要求原始描述信息
	CategoryRequirements *string `json:"category_requirements,omitempty"`
	// 门头照页面是否必填
	DoorPhotoRequired *bool `json:"door_photo_required,omitempty"`
	// 特殊资质页面是否必填
	SpecialLicenceRequired *bool `json:"special_licence_required,omitempty"`
}

// NewCategoryRequireInfo instantiates a new CategoryRequireInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryRequireInfo() *CategoryRequireInfo {
	this := CategoryRequireInfo{}
	return &this
}

// NewCategoryRequireInfoWithDefaults instantiates a new CategoryRequireInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryRequireInfoWithDefaults() *CategoryRequireInfo {
	this := CategoryRequireInfo{}
	return &this
}

// GetBusinessLicenceRequired returns the BusinessLicenceRequired field value if set, zero value otherwise.
func (o *CategoryRequireInfo) GetBusinessLicenceRequired() bool {
	if o == nil || IsNil(o.BusinessLicenceRequired) {
		var ret bool
		return ret
	}
	return *o.BusinessLicenceRequired
}

// GetBusinessLicenceRequiredOk returns a tuple with the BusinessLicenceRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryRequireInfo) GetBusinessLicenceRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.BusinessLicenceRequired) {
		return nil, false
	}
	return o.BusinessLicenceRequired, true
}

// HasBusinessLicenceRequired returns a boolean if a field has been set.
func (o *CategoryRequireInfo) HasBusinessLicenceRequired() bool {
	if o != nil && !IsNil(o.BusinessLicenceRequired) {
		return true
	}

	return false
}

// SetBusinessLicenceRequired gets a reference to the given bool and assigns it to the BusinessLicenceRequired field.
func (o *CategoryRequireInfo) SetBusinessLicenceRequired(v bool) {
	o.BusinessLicenceRequired = &v
}

// GetCategoryCode returns the CategoryCode field value if set, zero value otherwise.
func (o *CategoryRequireInfo) GetCategoryCode() string {
	if o == nil || IsNil(o.CategoryCode) {
		var ret string
		return ret
	}
	return *o.CategoryCode
}

// GetCategoryCodeOk returns a tuple with the CategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryRequireInfo) GetCategoryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryCode) {
		return nil, false
	}
	return o.CategoryCode, true
}

// HasCategoryCode returns a boolean if a field has been set.
func (o *CategoryRequireInfo) HasCategoryCode() bool {
	if o != nil && !IsNil(o.CategoryCode) {
		return true
	}

	return false
}

// SetCategoryCode gets a reference to the given string and assigns it to the CategoryCode field.
func (o *CategoryRequireInfo) SetCategoryCode(v string) {
	o.CategoryCode = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *CategoryRequireInfo) GetCategoryName() string {
	if o == nil || IsNil(o.CategoryName) {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryRequireInfo) GetCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryName) {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *CategoryRequireInfo) HasCategoryName() bool {
	if o != nil && !IsNil(o.CategoryName) {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *CategoryRequireInfo) SetCategoryName(v string) {
	o.CategoryName = &v
}

// GetCategoryRequirements returns the CategoryRequirements field value if set, zero value otherwise.
func (o *CategoryRequireInfo) GetCategoryRequirements() string {
	if o == nil || IsNil(o.CategoryRequirements) {
		var ret string
		return ret
	}
	return *o.CategoryRequirements
}

// GetCategoryRequirementsOk returns a tuple with the CategoryRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryRequireInfo) GetCategoryRequirementsOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryRequirements) {
		return nil, false
	}
	return o.CategoryRequirements, true
}

// HasCategoryRequirements returns a boolean if a field has been set.
func (o *CategoryRequireInfo) HasCategoryRequirements() bool {
	if o != nil && !IsNil(o.CategoryRequirements) {
		return true
	}

	return false
}

// SetCategoryRequirements gets a reference to the given string and assigns it to the CategoryRequirements field.
func (o *CategoryRequireInfo) SetCategoryRequirements(v string) {
	o.CategoryRequirements = &v
}

// GetDoorPhotoRequired returns the DoorPhotoRequired field value if set, zero value otherwise.
func (o *CategoryRequireInfo) GetDoorPhotoRequired() bool {
	if o == nil || IsNil(o.DoorPhotoRequired) {
		var ret bool
		return ret
	}
	return *o.DoorPhotoRequired
}

// GetDoorPhotoRequiredOk returns a tuple with the DoorPhotoRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryRequireInfo) GetDoorPhotoRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.DoorPhotoRequired) {
		return nil, false
	}
	return o.DoorPhotoRequired, true
}

// HasDoorPhotoRequired returns a boolean if a field has been set.
func (o *CategoryRequireInfo) HasDoorPhotoRequired() bool {
	if o != nil && !IsNil(o.DoorPhotoRequired) {
		return true
	}

	return false
}

// SetDoorPhotoRequired gets a reference to the given bool and assigns it to the DoorPhotoRequired field.
func (o *CategoryRequireInfo) SetDoorPhotoRequired(v bool) {
	o.DoorPhotoRequired = &v
}

// GetSpecialLicenceRequired returns the SpecialLicenceRequired field value if set, zero value otherwise.
func (o *CategoryRequireInfo) GetSpecialLicenceRequired() bool {
	if o == nil || IsNil(o.SpecialLicenceRequired) {
		var ret bool
		return ret
	}
	return *o.SpecialLicenceRequired
}

// GetSpecialLicenceRequiredOk returns a tuple with the SpecialLicenceRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryRequireInfo) GetSpecialLicenceRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.SpecialLicenceRequired) {
		return nil, false
	}
	return o.SpecialLicenceRequired, true
}

// HasSpecialLicenceRequired returns a boolean if a field has been set.
func (o *CategoryRequireInfo) HasSpecialLicenceRequired() bool {
	if o != nil && !IsNil(o.SpecialLicenceRequired) {
		return true
	}

	return false
}

// SetSpecialLicenceRequired gets a reference to the given bool and assigns it to the SpecialLicenceRequired field.
func (o *CategoryRequireInfo) SetSpecialLicenceRequired(v bool) {
	o.SpecialLicenceRequired = &v
}

func (o CategoryRequireInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryRequireInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessLicenceRequired) {
		toSerialize["business_licence_required"] = o.BusinessLicenceRequired
	}
	if !IsNil(o.CategoryCode) {
		toSerialize["category_code"] = o.CategoryCode
	}
	if !IsNil(o.CategoryName) {
		toSerialize["category_name"] = o.CategoryName
	}
	if !IsNil(o.CategoryRequirements) {
		toSerialize["category_requirements"] = o.CategoryRequirements
	}
	if !IsNil(o.DoorPhotoRequired) {
		toSerialize["door_photo_required"] = o.DoorPhotoRequired
	}
	if !IsNil(o.SpecialLicenceRequired) {
		toSerialize["special_licence_required"] = o.SpecialLicenceRequired
	}
	return toSerialize, nil
}

type NullableCategoryRequireInfo struct {
	value *CategoryRequireInfo
	isSet bool
}

func (v NullableCategoryRequireInfo) Get() *CategoryRequireInfo {
	return v.value
}

func (v *NullableCategoryRequireInfo) Set(val *CategoryRequireInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryRequireInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryRequireInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryRequireInfo(val *CategoryRequireInfo) *NullableCategoryRequireInfo {
	return &NullableCategoryRequireInfo{value: val, isSet: true}
}

func (v NullableCategoryRequireInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryRequireInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GoodsOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsOrder{}

// GoodsOrder struct for GoodsOrder
type GoodsOrder struct {
	// 商品名称
	GoodsName *string `json:"goods_name,omitempty"`
	// 商品图片素材Id
	GoodsPictureId *string `json:"goods_picture_id,omitempty"`
}

// NewGoodsOrder instantiates a new GoodsOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsOrder() *GoodsOrder {
	this := GoodsOrder{}
	return &this
}

// NewGoodsOrderWithDefaults instantiates a new GoodsOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsOrderWithDefaults() *GoodsOrder {
	this := GoodsOrder{}
	return &this
}

// GetGoodsName returns the GoodsName field value if set, zero value otherwise.
func (o *GoodsOrder) GetGoodsName() string {
	if o == nil || IsNil(o.GoodsName) {
		var ret string
		return ret
	}
	return *o.GoodsName
}

// GetGoodsNameOk returns a tuple with the GoodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsOrder) GetGoodsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsName) {
		return nil, false
	}
	return o.GoodsName, true
}

// HasGoodsName returns a boolean if a field has been set.
func (o *GoodsOrder) HasGoodsName() bool {
	if o != nil && !IsNil(o.GoodsName) {
		return true
	}

	return false
}

// SetGoodsName gets a reference to the given string and assigns it to the GoodsName field.
func (o *GoodsOrder) SetGoodsName(v string) {
	o.GoodsName = &v
}

// GetGoodsPictureId returns the GoodsPictureId field value if set, zero value otherwise.
func (o *GoodsOrder) GetGoodsPictureId() string {
	if o == nil || IsNil(o.GoodsPictureId) {
		var ret string
		return ret
	}
	return *o.GoodsPictureId
}

// GetGoodsPictureIdOk returns a tuple with the GoodsPictureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsOrder) GetGoodsPictureIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoodsPictureId) {
		return nil, false
	}
	return o.GoodsPictureId, true
}

// HasGoodsPictureId returns a boolean if a field has been set.
func (o *GoodsOrder) HasGoodsPictureId() bool {
	if o != nil && !IsNil(o.GoodsPictureId) {
		return true
	}

	return false
}

// SetGoodsPictureId gets a reference to the given string and assigns it to the GoodsPictureId field.
func (o *GoodsOrder) SetGoodsPictureId(v string) {
	o.GoodsPictureId = &v
}

func (o GoodsOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoodsName) {
		toSerialize["goods_name"] = o.GoodsName
	}
	if !IsNil(o.GoodsPictureId) {
		toSerialize["goods_picture_id"] = o.GoodsPictureId
	}
	return toSerialize, nil
}

type NullableGoodsOrder struct {
	value *GoodsOrder
	isSet bool
}

func (v NullableGoodsOrder) Get() *GoodsOrder {
	return v.value
}

func (v *NullableGoodsOrder) Set(val *GoodsOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsOrder(val *GoodsOrder) *NullableGoodsOrder {
	return &NullableGoodsOrder{value: val, isSet: true}
}

func (v NullableGoodsOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



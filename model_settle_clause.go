/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SettleClause type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettleClause{}

// SettleClause struct for SettleClause
type SettleClause struct {
	// 结算金额，单位为元
	Amount *string `json:"amount,omitempty"`
	// 结算币种，支持人民币：CNY
	Currency *string `json:"currency,omitempty"`
	// 结算账号所属于的结算主体类型。 secondMerchant 二级商户的结算账号 store 门店的结算账号 如果不填，默认为settleEntityType对应的类型
	SettleAccountEntity *string `json:"settle_account_entity,omitempty"`
	// 结算账户id。  当结算账户id类型是cardSerialNo时，本参数为用户在支付宝绑定的卡编号；当结算账户id类型是userId时，本参数为用户的支付宝账号对应的支付宝唯一用户号；当结算账户id类型是loginName时，本参数为用户的支付宝登录号; 当 settle_account_type 为defaultSettle时，本参数必须为空
	SettleAccountId *string `json:"settle_account_id,omitempty"`
	// 结算账户id类型。当 settle_account_type 为 defaultSettle 时，本参数必须为空。  当settle_account_type 为bankCard时，本参数为cardSerialNo，表示结算账户id是银行卡编号; 当settle_account_type 为alipayBalance时，本参数为userId或者loginName，其中userId表示结算账户id是支付宝唯一用户号，loginName表示结算账户id是支付宝登录号。
	SettleAccountIdType *string `json:"settle_account_id_type,omitempty"`
	// 结算账户类型。  bankCard: 结算账户为银行卡； alipayBalance: 结算账户为支付宝余额户； defaultSettle: 按默认结算规则结算
	SettleAccountType *string `json:"settle_account_type,omitempty"`
	// 已结算资产
	SettleEntityBizType *string `json:"settle_entity_biz_type,omitempty"`
	// 结算主体账号。 当结算主体类型为SecondMerchant，传二级商户ID(smid)；结算主体类型为Store时，传门店ID
	SettleEntityId *string `json:"settle_entity_id,omitempty"`
	// 结算主体类型。 SecondMerchant：结算主体为二级商户 Store：结算主体为门店
	SettleEntityType *string `json:"settle_entity_type,omitempty"`
	SubMerchant *SubMerchant `json:"sub_merchant,omitempty"`
}

// NewSettleClause instantiates a new SettleClause object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettleClause() *SettleClause {
	this := SettleClause{}
	return &this
}

// NewSettleClauseWithDefaults instantiates a new SettleClause object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettleClauseWithDefaults() *SettleClause {
	this := SettleClause{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SettleClause) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SettleClause) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *SettleClause) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *SettleClause) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *SettleClause) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *SettleClause) SetCurrency(v string) {
	o.Currency = &v
}

// GetSettleAccountEntity returns the SettleAccountEntity field value if set, zero value otherwise.
func (o *SettleClause) GetSettleAccountEntity() string {
	if o == nil || IsNil(o.SettleAccountEntity) {
		var ret string
		return ret
	}
	return *o.SettleAccountEntity
}

// GetSettleAccountEntityOk returns a tuple with the SettleAccountEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleAccountEntityOk() (*string, bool) {
	if o == nil || IsNil(o.SettleAccountEntity) {
		return nil, false
	}
	return o.SettleAccountEntity, true
}

// HasSettleAccountEntity returns a boolean if a field has been set.
func (o *SettleClause) HasSettleAccountEntity() bool {
	if o != nil && !IsNil(o.SettleAccountEntity) {
		return true
	}

	return false
}

// SetSettleAccountEntity gets a reference to the given string and assigns it to the SettleAccountEntity field.
func (o *SettleClause) SetSettleAccountEntity(v string) {
	o.SettleAccountEntity = &v
}

// GetSettleAccountId returns the SettleAccountId field value if set, zero value otherwise.
func (o *SettleClause) GetSettleAccountId() string {
	if o == nil || IsNil(o.SettleAccountId) {
		var ret string
		return ret
	}
	return *o.SettleAccountId
}

// GetSettleAccountIdOk returns a tuple with the SettleAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SettleAccountId) {
		return nil, false
	}
	return o.SettleAccountId, true
}

// HasSettleAccountId returns a boolean if a field has been set.
func (o *SettleClause) HasSettleAccountId() bool {
	if o != nil && !IsNil(o.SettleAccountId) {
		return true
	}

	return false
}

// SetSettleAccountId gets a reference to the given string and assigns it to the SettleAccountId field.
func (o *SettleClause) SetSettleAccountId(v string) {
	o.SettleAccountId = &v
}

// GetSettleAccountIdType returns the SettleAccountIdType field value if set, zero value otherwise.
func (o *SettleClause) GetSettleAccountIdType() string {
	if o == nil || IsNil(o.SettleAccountIdType) {
		var ret string
		return ret
	}
	return *o.SettleAccountIdType
}

// GetSettleAccountIdTypeOk returns a tuple with the SettleAccountIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleAccountIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SettleAccountIdType) {
		return nil, false
	}
	return o.SettleAccountIdType, true
}

// HasSettleAccountIdType returns a boolean if a field has been set.
func (o *SettleClause) HasSettleAccountIdType() bool {
	if o != nil && !IsNil(o.SettleAccountIdType) {
		return true
	}

	return false
}

// SetSettleAccountIdType gets a reference to the given string and assigns it to the SettleAccountIdType field.
func (o *SettleClause) SetSettleAccountIdType(v string) {
	o.SettleAccountIdType = &v
}

// GetSettleAccountType returns the SettleAccountType field value if set, zero value otherwise.
func (o *SettleClause) GetSettleAccountType() string {
	if o == nil || IsNil(o.SettleAccountType) {
		var ret string
		return ret
	}
	return *o.SettleAccountType
}

// GetSettleAccountTypeOk returns a tuple with the SettleAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SettleAccountType) {
		return nil, false
	}
	return o.SettleAccountType, true
}

// HasSettleAccountType returns a boolean if a field has been set.
func (o *SettleClause) HasSettleAccountType() bool {
	if o != nil && !IsNil(o.SettleAccountType) {
		return true
	}

	return false
}

// SetSettleAccountType gets a reference to the given string and assigns it to the SettleAccountType field.
func (o *SettleClause) SetSettleAccountType(v string) {
	o.SettleAccountType = &v
}

// GetSettleEntityBizType returns the SettleEntityBizType field value if set, zero value otherwise.
func (o *SettleClause) GetSettleEntityBizType() string {
	if o == nil || IsNil(o.SettleEntityBizType) {
		var ret string
		return ret
	}
	return *o.SettleEntityBizType
}

// GetSettleEntityBizTypeOk returns a tuple with the SettleEntityBizType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleEntityBizTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SettleEntityBizType) {
		return nil, false
	}
	return o.SettleEntityBizType, true
}

// HasSettleEntityBizType returns a boolean if a field has been set.
func (o *SettleClause) HasSettleEntityBizType() bool {
	if o != nil && !IsNil(o.SettleEntityBizType) {
		return true
	}

	return false
}

// SetSettleEntityBizType gets a reference to the given string and assigns it to the SettleEntityBizType field.
func (o *SettleClause) SetSettleEntityBizType(v string) {
	o.SettleEntityBizType = &v
}

// GetSettleEntityId returns the SettleEntityId field value if set, zero value otherwise.
func (o *SettleClause) GetSettleEntityId() string {
	if o == nil || IsNil(o.SettleEntityId) {
		var ret string
		return ret
	}
	return *o.SettleEntityId
}

// GetSettleEntityIdOk returns a tuple with the SettleEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.SettleEntityId) {
		return nil, false
	}
	return o.SettleEntityId, true
}

// HasSettleEntityId returns a boolean if a field has been set.
func (o *SettleClause) HasSettleEntityId() bool {
	if o != nil && !IsNil(o.SettleEntityId) {
		return true
	}

	return false
}

// SetSettleEntityId gets a reference to the given string and assigns it to the SettleEntityId field.
func (o *SettleClause) SetSettleEntityId(v string) {
	o.SettleEntityId = &v
}

// GetSettleEntityType returns the SettleEntityType field value if set, zero value otherwise.
func (o *SettleClause) GetSettleEntityType() string {
	if o == nil || IsNil(o.SettleEntityType) {
		var ret string
		return ret
	}
	return *o.SettleEntityType
}

// GetSettleEntityTypeOk returns a tuple with the SettleEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSettleEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SettleEntityType) {
		return nil, false
	}
	return o.SettleEntityType, true
}

// HasSettleEntityType returns a boolean if a field has been set.
func (o *SettleClause) HasSettleEntityType() bool {
	if o != nil && !IsNil(o.SettleEntityType) {
		return true
	}

	return false
}

// SetSettleEntityType gets a reference to the given string and assigns it to the SettleEntityType field.
func (o *SettleClause) SetSettleEntityType(v string) {
	o.SettleEntityType = &v
}

// GetSubMerchant returns the SubMerchant field value if set, zero value otherwise.
func (o *SettleClause) GetSubMerchant() SubMerchant {
	if o == nil || IsNil(o.SubMerchant) {
		var ret SubMerchant
		return ret
	}
	return *o.SubMerchant
}

// GetSubMerchantOk returns a tuple with the SubMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettleClause) GetSubMerchantOk() (*SubMerchant, bool) {
	if o == nil || IsNil(o.SubMerchant) {
		return nil, false
	}
	return o.SubMerchant, true
}

// HasSubMerchant returns a boolean if a field has been set.
func (o *SettleClause) HasSubMerchant() bool {
	if o != nil && !IsNil(o.SubMerchant) {
		return true
	}

	return false
}

// SetSubMerchant gets a reference to the given SubMerchant and assigns it to the SubMerchant field.
func (o *SettleClause) SetSubMerchant(v SubMerchant) {
	o.SubMerchant = &v
}

func (o SettleClause) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettleClause) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.SettleAccountEntity) {
		toSerialize["settle_account_entity"] = o.SettleAccountEntity
	}
	if !IsNil(o.SettleAccountId) {
		toSerialize["settle_account_id"] = o.SettleAccountId
	}
	if !IsNil(o.SettleAccountIdType) {
		toSerialize["settle_account_id_type"] = o.SettleAccountIdType
	}
	if !IsNil(o.SettleAccountType) {
		toSerialize["settle_account_type"] = o.SettleAccountType
	}
	if !IsNil(o.SettleEntityBizType) {
		toSerialize["settle_entity_biz_type"] = o.SettleEntityBizType
	}
	if !IsNil(o.SettleEntityId) {
		toSerialize["settle_entity_id"] = o.SettleEntityId
	}
	if !IsNil(o.SettleEntityType) {
		toSerialize["settle_entity_type"] = o.SettleEntityType
	}
	if !IsNil(o.SubMerchant) {
		toSerialize["sub_merchant"] = o.SubMerchant
	}
	return toSerialize, nil
}

type NullableSettleClause struct {
	value *SettleClause
	isSet bool
}

func (v NullableSettleClause) Get() *SettleClause {
	return v.value
}

func (v *NullableSettleClause) Set(val *SettleClause) {
	v.value = val
	v.isSet = true
}

func (v NullableSettleClause) IsSet() bool {
	return v.isSet
}

func (v *NullableSettleClause) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettleClause(val *SettleClause) *NullableSettleClause {
	return &NullableSettleClause{value: val, isSet: true}
}

func (v NullableSettleClause) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettleClause) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



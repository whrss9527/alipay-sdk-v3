/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampusInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampusInfo{}

// CampusInfo struct for CampusInfo
type CampusInfo struct {
	// 地址
	Address *string `json:"address,omitempty"`
	// 校区id
	CampusId *string `json:"campus_id,omitempty"`
	// 校区名称
	CampusName *string `json:"campus_name,omitempty"`
	// 学校名称
	InstName *string `json:"inst_name,omitempty"`
}

// NewCampusInfo instantiates a new CampusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampusInfo() *CampusInfo {
	this := CampusInfo{}
	return &this
}

// NewCampusInfoWithDefaults instantiates a new CampusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampusInfoWithDefaults() *CampusInfo {
	this := CampusInfo{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CampusInfo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampusInfo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CampusInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CampusInfo) SetAddress(v string) {
	o.Address = &v
}

// GetCampusId returns the CampusId field value if set, zero value otherwise.
func (o *CampusInfo) GetCampusId() string {
	if o == nil || IsNil(o.CampusId) {
		var ret string
		return ret
	}
	return *o.CampusId
}

// GetCampusIdOk returns a tuple with the CampusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampusInfo) GetCampusIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampusId) {
		return nil, false
	}
	return o.CampusId, true
}

// HasCampusId returns a boolean if a field has been set.
func (o *CampusInfo) HasCampusId() bool {
	if o != nil && !IsNil(o.CampusId) {
		return true
	}

	return false
}

// SetCampusId gets a reference to the given string and assigns it to the CampusId field.
func (o *CampusInfo) SetCampusId(v string) {
	o.CampusId = &v
}

// GetCampusName returns the CampusName field value if set, zero value otherwise.
func (o *CampusInfo) GetCampusName() string {
	if o == nil || IsNil(o.CampusName) {
		var ret string
		return ret
	}
	return *o.CampusName
}

// GetCampusNameOk returns a tuple with the CampusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampusInfo) GetCampusNameOk() (*string, bool) {
	if o == nil || IsNil(o.CampusName) {
		return nil, false
	}
	return o.CampusName, true
}

// HasCampusName returns a boolean if a field has been set.
func (o *CampusInfo) HasCampusName() bool {
	if o != nil && !IsNil(o.CampusName) {
		return true
	}

	return false
}

// SetCampusName gets a reference to the given string and assigns it to the CampusName field.
func (o *CampusInfo) SetCampusName(v string) {
	o.CampusName = &v
}

// GetInstName returns the InstName field value if set, zero value otherwise.
func (o *CampusInfo) GetInstName() string {
	if o == nil || IsNil(o.InstName) {
		var ret string
		return ret
	}
	return *o.InstName
}

// GetInstNameOk returns a tuple with the InstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampusInfo) GetInstNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstName) {
		return nil, false
	}
	return o.InstName, true
}

// HasInstName returns a boolean if a field has been set.
func (o *CampusInfo) HasInstName() bool {
	if o != nil && !IsNil(o.InstName) {
		return true
	}

	return false
}

// SetInstName gets a reference to the given string and assigns it to the InstName field.
func (o *CampusInfo) SetInstName(v string) {
	o.InstName = &v
}

func (o CampusInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampusInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CampusId) {
		toSerialize["campus_id"] = o.CampusId
	}
	if !IsNil(o.CampusName) {
		toSerialize["campus_name"] = o.CampusName
	}
	if !IsNil(o.InstName) {
		toSerialize["inst_name"] = o.InstName
	}
	return toSerialize, nil
}

type NullableCampusInfo struct {
	value *CampusInfo
	isSet bool
}

func (v NullableCampusInfo) Get() *CampusInfo {
	return v.value
}

func (v *NullableCampusInfo) Set(val *CampusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCampusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCampusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampusInfo(val *CampusInfo) *NullableCampusInfo {
	return &NullableCampusInfo{value: val, isSet: true}
}

func (v NullableCampusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



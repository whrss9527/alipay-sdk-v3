/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RefundRoyaltyResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefundRoyaltyResult{}

// RefundRoyaltyResult struct for RefundRoyaltyResult
type RefundRoyaltyResult struct {
	// 商户请求的转入账号
	OriTransIn *string `json:"ori_trans_in,omitempty"`
	// 商户请求的转出账号
	OriTransOut *string `json:"ori_trans_out,omitempty"`
	// 退分账金额。单位：元。
	RefundAmount *string `json:"refund_amount,omitempty"`
	// 退分账结果码
	ResultCode *string `json:"result_code,omitempty"`
	// 分账类型. 字段为空默认为普通分账类型transfer
	RoyaltyType *string `json:"royalty_type,omitempty"`
	// 转入人支付宝账号对应用户ID
	TransIn *string `json:"trans_in,omitempty"`
	// 转入人支付宝账号
	TransInEmail *string `json:"trans_in_email,omitempty"`
	// 转出人支付宝账号对应用户ID
	TransOut *string `json:"trans_out,omitempty"`
	// 转出人支付宝账号
	TransOutEmail *string `json:"trans_out_email,omitempty"`
}

// NewRefundRoyaltyResult instantiates a new RefundRoyaltyResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefundRoyaltyResult() *RefundRoyaltyResult {
	this := RefundRoyaltyResult{}
	return &this
}

// NewRefundRoyaltyResultWithDefaults instantiates a new RefundRoyaltyResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefundRoyaltyResultWithDefaults() *RefundRoyaltyResult {
	this := RefundRoyaltyResult{}
	return &this
}

// GetOriTransIn returns the OriTransIn field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetOriTransIn() string {
	if o == nil || IsNil(o.OriTransIn) {
		var ret string
		return ret
	}
	return *o.OriTransIn
}

// GetOriTransInOk returns a tuple with the OriTransIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetOriTransInOk() (*string, bool) {
	if o == nil || IsNil(o.OriTransIn) {
		return nil, false
	}
	return o.OriTransIn, true
}

// HasOriTransIn returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasOriTransIn() bool {
	if o != nil && !IsNil(o.OriTransIn) {
		return true
	}

	return false
}

// SetOriTransIn gets a reference to the given string and assigns it to the OriTransIn field.
func (o *RefundRoyaltyResult) SetOriTransIn(v string) {
	o.OriTransIn = &v
}

// GetOriTransOut returns the OriTransOut field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetOriTransOut() string {
	if o == nil || IsNil(o.OriTransOut) {
		var ret string
		return ret
	}
	return *o.OriTransOut
}

// GetOriTransOutOk returns a tuple with the OriTransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetOriTransOutOk() (*string, bool) {
	if o == nil || IsNil(o.OriTransOut) {
		return nil, false
	}
	return o.OriTransOut, true
}

// HasOriTransOut returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasOriTransOut() bool {
	if o != nil && !IsNil(o.OriTransOut) {
		return true
	}

	return false
}

// SetOriTransOut gets a reference to the given string and assigns it to the OriTransOut field.
func (o *RefundRoyaltyResult) SetOriTransOut(v string) {
	o.OriTransOut = &v
}

// GetRefundAmount returns the RefundAmount field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetRefundAmount() string {
	if o == nil || IsNil(o.RefundAmount) {
		var ret string
		return ret
	}
	return *o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetRefundAmountOk() (*string, bool) {
	if o == nil || IsNil(o.RefundAmount) {
		return nil, false
	}
	return o.RefundAmount, true
}

// HasRefundAmount returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasRefundAmount() bool {
	if o != nil && !IsNil(o.RefundAmount) {
		return true
	}

	return false
}

// SetRefundAmount gets a reference to the given string and assigns it to the RefundAmount field.
func (o *RefundRoyaltyResult) SetRefundAmount(v string) {
	o.RefundAmount = &v
}

// GetResultCode returns the ResultCode field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetResultCode() string {
	if o == nil || IsNil(o.ResultCode) {
		var ret string
		return ret
	}
	return *o.ResultCode
}

// GetResultCodeOk returns a tuple with the ResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetResultCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ResultCode) {
		return nil, false
	}
	return o.ResultCode, true
}

// HasResultCode returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasResultCode() bool {
	if o != nil && !IsNil(o.ResultCode) {
		return true
	}

	return false
}

// SetResultCode gets a reference to the given string and assigns it to the ResultCode field.
func (o *RefundRoyaltyResult) SetResultCode(v string) {
	o.ResultCode = &v
}

// GetRoyaltyType returns the RoyaltyType field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetRoyaltyType() string {
	if o == nil || IsNil(o.RoyaltyType) {
		var ret string
		return ret
	}
	return *o.RoyaltyType
}

// GetRoyaltyTypeOk returns a tuple with the RoyaltyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetRoyaltyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoyaltyType) {
		return nil, false
	}
	return o.RoyaltyType, true
}

// HasRoyaltyType returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasRoyaltyType() bool {
	if o != nil && !IsNil(o.RoyaltyType) {
		return true
	}

	return false
}

// SetRoyaltyType gets a reference to the given string and assigns it to the RoyaltyType field.
func (o *RefundRoyaltyResult) SetRoyaltyType(v string) {
	o.RoyaltyType = &v
}

// GetTransIn returns the TransIn field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetTransIn() string {
	if o == nil || IsNil(o.TransIn) {
		var ret string
		return ret
	}
	return *o.TransIn
}

// GetTransInOk returns a tuple with the TransIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetTransInOk() (*string, bool) {
	if o == nil || IsNil(o.TransIn) {
		return nil, false
	}
	return o.TransIn, true
}

// HasTransIn returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasTransIn() bool {
	if o != nil && !IsNil(o.TransIn) {
		return true
	}

	return false
}

// SetTransIn gets a reference to the given string and assigns it to the TransIn field.
func (o *RefundRoyaltyResult) SetTransIn(v string) {
	o.TransIn = &v
}

// GetTransInEmail returns the TransInEmail field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetTransInEmail() string {
	if o == nil || IsNil(o.TransInEmail) {
		var ret string
		return ret
	}
	return *o.TransInEmail
}

// GetTransInEmailOk returns a tuple with the TransInEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetTransInEmailOk() (*string, bool) {
	if o == nil || IsNil(o.TransInEmail) {
		return nil, false
	}
	return o.TransInEmail, true
}

// HasTransInEmail returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasTransInEmail() bool {
	if o != nil && !IsNil(o.TransInEmail) {
		return true
	}

	return false
}

// SetTransInEmail gets a reference to the given string and assigns it to the TransInEmail field.
func (o *RefundRoyaltyResult) SetTransInEmail(v string) {
	o.TransInEmail = &v
}

// GetTransOut returns the TransOut field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetTransOut() string {
	if o == nil || IsNil(o.TransOut) {
		var ret string
		return ret
	}
	return *o.TransOut
}

// GetTransOutOk returns a tuple with the TransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetTransOutOk() (*string, bool) {
	if o == nil || IsNil(o.TransOut) {
		return nil, false
	}
	return o.TransOut, true
}

// HasTransOut returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasTransOut() bool {
	if o != nil && !IsNil(o.TransOut) {
		return true
	}

	return false
}

// SetTransOut gets a reference to the given string and assigns it to the TransOut field.
func (o *RefundRoyaltyResult) SetTransOut(v string) {
	o.TransOut = &v
}

// GetTransOutEmail returns the TransOutEmail field value if set, zero value otherwise.
func (o *RefundRoyaltyResult) GetTransOutEmail() string {
	if o == nil || IsNil(o.TransOutEmail) {
		var ret string
		return ret
	}
	return *o.TransOutEmail
}

// GetTransOutEmailOk returns a tuple with the TransOutEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundRoyaltyResult) GetTransOutEmailOk() (*string, bool) {
	if o == nil || IsNil(o.TransOutEmail) {
		return nil, false
	}
	return o.TransOutEmail, true
}

// HasTransOutEmail returns a boolean if a field has been set.
func (o *RefundRoyaltyResult) HasTransOutEmail() bool {
	if o != nil && !IsNil(o.TransOutEmail) {
		return true
	}

	return false
}

// SetTransOutEmail gets a reference to the given string and assigns it to the TransOutEmail field.
func (o *RefundRoyaltyResult) SetTransOutEmail(v string) {
	o.TransOutEmail = &v
}

func (o RefundRoyaltyResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefundRoyaltyResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OriTransIn) {
		toSerialize["ori_trans_in"] = o.OriTransIn
	}
	if !IsNil(o.OriTransOut) {
		toSerialize["ori_trans_out"] = o.OriTransOut
	}
	if !IsNil(o.RefundAmount) {
		toSerialize["refund_amount"] = o.RefundAmount
	}
	if !IsNil(o.ResultCode) {
		toSerialize["result_code"] = o.ResultCode
	}
	if !IsNil(o.RoyaltyType) {
		toSerialize["royalty_type"] = o.RoyaltyType
	}
	if !IsNil(o.TransIn) {
		toSerialize["trans_in"] = o.TransIn
	}
	if !IsNil(o.TransInEmail) {
		toSerialize["trans_in_email"] = o.TransInEmail
	}
	if !IsNil(o.TransOut) {
		toSerialize["trans_out"] = o.TransOut
	}
	if !IsNil(o.TransOutEmail) {
		toSerialize["trans_out_email"] = o.TransOutEmail
	}
	return toSerialize, nil
}

type NullableRefundRoyaltyResult struct {
	value *RefundRoyaltyResult
	isSet bool
}

func (v NullableRefundRoyaltyResult) Get() *RefundRoyaltyResult {
	return v.value
}

func (v *NullableRefundRoyaltyResult) Set(val *RefundRoyaltyResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRefundRoyaltyResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRefundRoyaltyResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefundRoyaltyResult(val *RefundRoyaltyResult) *NullableRefundRoyaltyResult {
	return &NullableRefundRoyaltyResult{value: val, isSet: true}
}

func (v NullableRefundRoyaltyResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefundRoyaltyResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



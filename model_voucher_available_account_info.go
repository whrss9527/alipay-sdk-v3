/*
支付宝开放平台API

支付宝开放平台v3协议文档

API version: 2024-07-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoucherAvailableAccountInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherAvailableAccountInfo{}

// VoucherAvailableAccountInfo struct for VoucherAvailableAccountInfo
type VoucherAvailableAccountInfo struct {
	// 优惠券可核销的直连商户PID
	AvailablePids []string `json:"available_pids,omitempty"`
	// 优惠券可核销的间连商户SMID
	AvailableSmids []string `json:"available_smids,omitempty"`
}

// NewVoucherAvailableAccountInfo instantiates a new VoucherAvailableAccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherAvailableAccountInfo() *VoucherAvailableAccountInfo {
	this := VoucherAvailableAccountInfo{}
	return &this
}

// NewVoucherAvailableAccountInfoWithDefaults instantiates a new VoucherAvailableAccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherAvailableAccountInfoWithDefaults() *VoucherAvailableAccountInfo {
	this := VoucherAvailableAccountInfo{}
	return &this
}

// GetAvailablePids returns the AvailablePids field value if set, zero value otherwise.
func (o *VoucherAvailableAccountInfo) GetAvailablePids() []string {
	if o == nil || IsNil(o.AvailablePids) {
		var ret []string
		return ret
	}
	return o.AvailablePids
}

// GetAvailablePidsOk returns a tuple with the AvailablePids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableAccountInfo) GetAvailablePidsOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailablePids) {
		return nil, false
	}
	return o.AvailablePids, true
}

// HasAvailablePids returns a boolean if a field has been set.
func (o *VoucherAvailableAccountInfo) HasAvailablePids() bool {
	if o != nil && !IsNil(o.AvailablePids) {
		return true
	}

	return false
}

// SetAvailablePids gets a reference to the given []string and assigns it to the AvailablePids field.
func (o *VoucherAvailableAccountInfo) SetAvailablePids(v []string) {
	o.AvailablePids = v
}

// GetAvailableSmids returns the AvailableSmids field value if set, zero value otherwise.
func (o *VoucherAvailableAccountInfo) GetAvailableSmids() []string {
	if o == nil || IsNil(o.AvailableSmids) {
		var ret []string
		return ret
	}
	return o.AvailableSmids
}

// GetAvailableSmidsOk returns a tuple with the AvailableSmids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherAvailableAccountInfo) GetAvailableSmidsOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailableSmids) {
		return nil, false
	}
	return o.AvailableSmids, true
}

// HasAvailableSmids returns a boolean if a field has been set.
func (o *VoucherAvailableAccountInfo) HasAvailableSmids() bool {
	if o != nil && !IsNil(o.AvailableSmids) {
		return true
	}

	return false
}

// SetAvailableSmids gets a reference to the given []string and assigns it to the AvailableSmids field.
func (o *VoucherAvailableAccountInfo) SetAvailableSmids(v []string) {
	o.AvailableSmids = v
}

func (o VoucherAvailableAccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherAvailableAccountInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailablePids) {
		toSerialize["available_pids"] = o.AvailablePids
	}
	if !IsNil(o.AvailableSmids) {
		toSerialize["available_smids"] = o.AvailableSmids
	}
	return toSerialize, nil
}

type NullableVoucherAvailableAccountInfo struct {
	value *VoucherAvailableAccountInfo
	isSet bool
}

func (v NullableVoucherAvailableAccountInfo) Get() *VoucherAvailableAccountInfo {
	return v.value
}

func (v *NullableVoucherAvailableAccountInfo) Set(val *VoucherAvailableAccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherAvailableAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherAvailableAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherAvailableAccountInfo(val *VoucherAvailableAccountInfo) *NullableVoucherAvailableAccountInfo {
	return &NullableVoucherAvailableAccountInfo{value: val, isSet: true}
}

func (v NullableVoucherAvailableAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherAvailableAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


